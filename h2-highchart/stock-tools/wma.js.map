{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.0 (2024-03-04)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2024 Kacper Madej\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/wma', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/WMA/WMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulateAverage(points, xVal, yVal, i, index) {\n            const xValue = xVal[i], yValue = index < 0 ? yVal[i] : yVal[i][index];\n            points.push([xValue, yValue]);\n        }\n        /**\n         * @private\n         */\n        function weightedSumArray(array, pLen) {\n            // The denominator is the sum of the number of days as a triangular number.\n            // If there are 5 days, the triangular numbers are 5, 4, 3, 2, and 1.\n            // The sum is 5 + 4 + 3 + 2 + 1 = 15.\n            const denominator = (pLen + 1) / 2 * pLen;\n            // reduce VS loop => reduce\n            return array.reduce(function (prev, cur, i) {\n                return [null, prev[1] + cur[1] * (i + 1)];\n            })[1] / denominator;\n        }\n        /**\n         * @private\n         */\n        function populateAverage(points, xVal, yVal, i) {\n            const pLen = points.length, wmaY = weightedSumArray(points, pLen), wmaX = xVal[i - 1];\n            points.shift(); // remove point until range < period\n            return [wmaX, wmaY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.wma\n         *\n         * @augments Highcharts.Series\n         */\n        class WMAIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, xValue = xVal[0], wma = [], xData = [], yData = [];\n                let range = 1, index = -1, i, wmaPoint, yValue = yVal[0];\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick\n                if (isArray(yVal[0])) {\n                    index = params.index;\n                    yValue = yVal[0][index];\n                }\n                // Starting point\n                const points = [[xValue, yValue]];\n                // Accumulate first N-points\n                while (range !== period) {\n                    accumulateAverage(points, xVal, yVal, range, index);\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    wmaPoint = populateAverage(points, xVal, yVal, i);\n                    wma.push(wmaPoint);\n                    xData.push(wmaPoint[0]);\n                    yData.push(wmaPoint[1]);\n                    accumulateAverage(points, xVal, yVal, i, index);\n                }\n                wmaPoint = populateAverage(points, xVal, yVal, i);\n                wma.push(wmaPoint);\n                xData.push(wmaPoint[0]);\n                yData.push(wmaPoint[1]);\n                return {\n                    values: wma,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Weighted moving average indicator (WMA). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/wma\n         *         Weighted moving average indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/wma\n         * @optionparent plotOptions.wma\n         */\n        WMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3,\n                period: 9\n            }\n        });\n        SeriesRegistry.registerSeriesType('wma', WMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `WMA` series. If the [type](#series.wma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.wma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/wma\n         * @apioption series.wma\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return WMAIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/wma.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","SeriesRegistry","U","sma","SMAIndicator","seriesTypes","isArray","merge","accumulateAverage","points","xVal","yVal","i","index","xValue","yValue","push","populateAverage","pLen","length","wmaY","array","reduce","prev","cur","wmaX","shift","WMAIndicator","getValues","series","params","period","xData","yData","yValLen","wma","range","wmaPoint","values","defaultOptions","registerSeriesType"],"mappings":"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"}
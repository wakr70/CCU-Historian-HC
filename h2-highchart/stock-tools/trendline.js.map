{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.0 (2024-03-04)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2024 Sebastian Bochan\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/trendline', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/TrendLine/TrendLineIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, isArray } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Trend line series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.trendline\n         *\n         * @augments Highcharts.Series\n         */\n        class TrendLineIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.updateAllPoints = true;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const orgXVal = series.xData, yVal = series.yData, xVal = [], LR = [], xData = [], yData = [], index = params.index;\n                let numerator = 0, denominator = 0, xValSum = 0, yValSum = 0, counter = 0;\n                // Create an array of consecutive xValues, (don't remove duplicates)\n                for (let i = 0; i < orgXVal.length; i++) {\n                    if (i === 0 || orgXVal[i] !== orgXVal[i - 1]) {\n                        counter++;\n                    }\n                    xVal.push(counter);\n                }\n                for (let i = 0; i < xVal.length; i++) {\n                    xValSum += xVal[i];\n                    yValSum += isArray(yVal[i]) ? yVal[i][index] : yVal[i];\n                }\n                const meanX = xValSum / xVal.length, meanY = yValSum / yVal.length;\n                for (let i = 0; i < xVal.length; i++) {\n                    const y = isArray(yVal[i]) ? yVal[i][index] : yVal[i];\n                    numerator += (xVal[i] - meanX) * (y - meanY);\n                    denominator += Math.pow(xVal[i] - meanX, 2);\n                }\n                // Calculate linear regression:\n                for (let i = 0; i < xVal.length; i++) {\n                    // Check if the xVal is already used\n                    if (orgXVal[i] === xData[xData.length - 1]) {\n                        continue;\n                    }\n                    const x = orgXVal[i], y = meanY + (numerator / denominator) * (xVal[i] - meanX);\n                    LR.push([x, y]);\n                    xData.push(x);\n                    yData.push(y);\n                }\n                return {\n                    xData: xData,\n                    yData: yData,\n                    values: LR\n                };\n            }\n        }\n        /**\n         * Trendline (linear regression) fits a straight line to the selected data\n         * using a method called the Sum Of Least Squares. This series requires the\n         * `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/trendline\n         *         Trendline indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.1.3\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/trendline\n         * @optionparent plotOptions.trendline\n         */\n        TrendLineIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 *\n                 * @default 3\n                 */\n                index: 3\n            }\n        });\n        extend(TrendLineIndicator.prototype, {\n            nameBase: 'Trendline',\n            nameComponents: void 0\n        });\n        SeriesRegistry.registerSeriesType('trendline', TrendLineIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TrendLine` series. If the [type](#series.trendline.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.trendline\n         * @since     7.1.3\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/trendline\n         * @apioption series.trendline\n         */\n        ''; // to include the above in the js output\n\n        return TrendLineIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/trendline.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","SeriesRegistry","U","sma","SMAIndicator","seriesTypes","extend","merge","isArray","TrendLineIndicator","constructor","arguments","updateAllPoints","getValues","series","params","orgXVal","xData","yVal","yData","xVal","LR","index","numerator","denominator","xValSum","yValSum","counter","i","length","push","meanX","meanY","y","Math","pow","x","values","defaultOptions","period","prototype","nameBase","nameComponents","registerSeriesType"],"mappings":"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"}
{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2021 Pawel Fus, Sebastian Bochan\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/indicators', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/SMA/SMAIndicator.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Chart, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { line: LineSeries } = SeriesRegistry.seriesTypes;\n        const { addEvent, fireEvent, error, extend, isArray, merge, pick, splat } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         */\n        class SMAIndicator extends LineSeries {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.dataEventsToUnbind = void 0;\n                this.linkedParent = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            destroy() {\n                this.dataEventsToUnbind.forEach(function (unbinder) {\n                    unbinder();\n                });\n                super.destroy.apply(this, arguments);\n            }\n            /**\n             * @private\n             */\n            getName() {\n                const params = [];\n                let name = this.name;\n                if (!name) {\n                    (this.nameComponents || []).forEach(function (component, index) {\n                        params.push(this.options.params[component] +\n                            pick(this.nameSuffixes[index], ''));\n                    }, this);\n                    name = (this.nameBase || this.type.toUpperCase()) +\n                        (this.nameComponents ? ' (' + params.join(', ') + ')' : '');\n                }\n                return name;\n            }\n            /**\n             * @private\n             */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal.length, SMA = [], xData = [], yData = [];\n                let i, index = -1, range = 0, SMAPoint, sum = 0;\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                while (range < period - 1) {\n                    sum += index < 0 ? yVal[range] : yVal[range][index];\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    sum += index < 0 ? yVal[i] : yVal[i][index];\n                    SMAPoint = [xVal[i], sum / period];\n                    SMA.push(SMAPoint);\n                    xData.push(SMAPoint[0]);\n                    yData.push(SMAPoint[1]);\n                    sum -= (index < 0 ?\n                        yVal[i - range] :\n                        yVal[i - range][index]);\n                }\n                return {\n                    values: SMA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            /**\n             * @private\n             */\n            init(chart, options) {\n                const indicator = this;\n                super.init.call(indicator, chart, options);\n                // Only after series are linked indicator can be processed.\n                const linkedSeriesUnbiner = addEvent(Chart, 'afterLinkSeries', function ({ isUpdating }) {\n                    // #18643 indicator shouldn't recalculate\n                    // values while series updating.\n                    if (isUpdating) {\n                        return;\n                    }\n                    const hasEvents = !!indicator.dataEventsToUnbind.length;\n                    if (indicator.linkedParent) {\n                        if (!hasEvents) {\n                            // No matter which indicator, always recalculate after\n                            // updating the data.\n                            indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent, 'updatedData', function () {\n                                indicator.recalculateValues();\n                            }));\n                            // Some indicators (like VBP) requires an additional\n                            // event (afterSetExtremes) to properly show the data.\n                            if (indicator.calculateOn.xAxis) {\n                                indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent.xAxis, indicator.calculateOn.xAxis, function () {\n                                    indicator.recalculateValues();\n                                }));\n                            }\n                        }\n                        // Most indicators are being calculated on chart's init.\n                        if (indicator.calculateOn.chart === 'init') {\n                            if (!indicator.processedYData) {\n                                indicator.recalculateValues();\n                            }\n                        }\n                        else if (!hasEvents) {\n                            // Some indicators (like VBP) has to recalculate their\n                            // values after other chart's events (render).\n                            const unbinder = addEvent(indicator.chart, indicator.calculateOn.chart, function () {\n                                indicator.recalculateValues();\n                                // Call this just once.\n                                unbinder();\n                            });\n                        }\n                    }\n                    else {\n                        return error('Series ' +\n                            indicator.options.linkedTo +\n                            ' not found! Check `linkedTo`.', false, chart);\n                    }\n                }, {\n                    order: 0\n                });\n                // Make sure we find series which is a base for an indicator\n                // chart.linkSeries();\n                indicator.dataEventsToUnbind = [];\n                indicator.eventsToUnbind.push(linkedSeriesUnbiner);\n            }\n            /**\n             * @private\n             */\n            recalculateValues() {\n                const croppedDataValues = [], indicator = this, oldData = indicator.points || [], oldDataLength = (indicator.xData || []).length, emptySet = {\n                    values: [],\n                    xData: [],\n                    yData: []\n                };\n                let overwriteData = true, oldFirstPointIndex, oldLastPointIndex, croppedData, min, max, i;\n                // Updating an indicator with redraw=false may destroy data.\n                // If there will be a following update for the parent series,\n                // we will try to access Series object without any properties\n                // (except for prototyped ones). This is what happens\n                // for example when using Axis.setDataGrouping(). See #16670\n                const processedData = indicator.linkedParent.options &&\n                    indicator.linkedParent.yData && // #18176, #18177 indicators should\n                    indicator.linkedParent.yData.length ? // work with empty dataset\n                    (indicator.getValues(indicator.linkedParent, indicator.options.params) || emptySet) : emptySet;\n                // We need to update points to reflect changes in all,\n                // x and y's, values. However, do it only for non-grouped\n                // data - grouping does it for us (#8572)\n                if (oldDataLength &&\n                    !indicator.hasGroupedData &&\n                    indicator.visible &&\n                    indicator.points) {\n                    // When data is cropped update only avaliable points (#9493)\n                    if (indicator.cropped) {\n                        if (indicator.xAxis) {\n                            min = indicator.xAxis.min;\n                            max = indicator.xAxis.max;\n                        }\n                        croppedData = indicator.cropData(processedData.xData, processedData.yData, min, max);\n                        for (i = 0; i < croppedData.xData.length; i++) {\n                            // (#10774)\n                            croppedDataValues.push([\n                                croppedData.xData[i]\n                            ].concat(splat(croppedData.yData[i])));\n                        }\n                        oldFirstPointIndex = processedData.xData.indexOf(indicator.xData[0]);\n                        oldLastPointIndex = processedData.xData.indexOf(indicator.xData[indicator.xData.length - 1]);\n                        // Check if indicator points should be shifted (#8572)\n                        if (oldFirstPointIndex === -1 &&\n                            oldLastPointIndex === processedData.xData.length - 2) {\n                            if (croppedDataValues[0][0] === oldData[0].x) {\n                                croppedDataValues.shift();\n                            }\n                        }\n                        indicator.updateData(croppedDataValues);\n                    }\n                    else if (indicator.updateAllPoints || // #18710\n                        // Omit addPoint() and removePoint() cases\n                        processedData.xData.length !== oldDataLength - 1 &&\n                            processedData.xData.length !== oldDataLength + 1) {\n                        overwriteData = false;\n                        indicator.updateData(processedData.values);\n                    }\n                }\n                if (overwriteData) {\n                    indicator.xData = processedData.xData;\n                    indicator.yData = processedData.yData;\n                    indicator.options.data = processedData.values;\n                }\n                // Removal of processedXData property is required because on\n                // first translate processedXData array is empty\n                if (indicator.calculateOn.xAxis && indicator.processedXData) {\n                    delete indicator.processedXData;\n                    indicator.isDirty = true;\n                    indicator.redraw();\n                }\n                indicator.isDirtyData = !!indicator.linkedSeries.length;\n                fireEvent(indicator, 'updatedData'); // #18689\n            }\n            /**\n             * @private\n             */\n            processData() {\n                const series = this, compareToMain = series.options.compareToMain, linkedParent = series.linkedParent;\n                super.processData.apply(series, arguments);\n                if (series.dataModify &&\n                    linkedParent &&\n                    linkedParent.dataModify &&\n                    linkedParent.dataModify.compareValue &&\n                    compareToMain) {\n                    series.dataModify.compareValue =\n                        linkedParent.dataModify.compareValue;\n                }\n                return;\n            }\n        }\n        /**\n         * The parameter allows setting line series type and use OHLC indicators.\n         * Data in OHLC format is required.\n         *\n         * @sample {highstock} stock/indicators/use-ohlc-data\n         *         Use OHLC data format to plot line chart\n         *\n         * @type      {boolean}\n         * @product   highstock\n         * @apioption plotOptions.line.useOhlcData\n         */\n        /**\n         * Simple moving average indicator (SMA). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/sma\n         *         Simple moving average indicator\n         *\n         * @extends      plotOptions.line\n         * @since        6.0.0\n         * @excluding    allAreas, colorAxis, dragDrop, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking, useOhlcData\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @optionparent plotOptions.sma\n         */\n        SMAIndicator.defaultOptions = merge(LineSeries.defaultOptions, {\n            /**\n             * The name of the series as shown in the legend, tooltip etc. If not\n             * set, it will be based on a technical indicator type and default\n             * params.\n             *\n             * @type {string}\n             */\n            name: void 0,\n            tooltip: {\n                /**\n                 * Number of decimals in indicator series.\n                 */\n                valueDecimals: 4\n            },\n            /**\n             * The main series ID that indicator will be based on. Required for this\n             * indicator.\n             *\n             * @type {string}\n             */\n            linkedTo: void 0,\n            /**\n             * Whether to compare indicator to the main series values\n             * or indicator values.\n             *\n             * @sample {highstock} stock/plotoptions/series-comparetomain/\n             *         Difference between comparing SMA values to the main series\n             *         and its own values.\n             *\n             * @type {boolean}\n             */\n            compareToMain: false,\n            /**\n             * Paramters used in calculation of regression series' points.\n             */\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                index: 3,\n                /**\n                 * The base period for indicator calculations. This is the number of\n                 * data points which are taken into account for the indicator\n                 * calculations.\n                 */\n                period: 14\n            }\n        });\n        extend(SMAIndicator.prototype, {\n            calculateOn: {\n                chart: 'init'\n            },\n            hasDerivedData: true,\n            nameComponents: ['period'],\n            nameSuffixes: [],\n            useCommonDataGrouping: true\n        });\n        SeriesRegistry.registerSeriesType('sma', SMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `SMA` series. If the [type](#series.sma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.sma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, useOhlcData\n         * @requires  stock/indicators/indicators\n         * @apioption series.sma\n         */\n        (''); // adds doclet above to the transpiled file\n\n        return SMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/EMA/EMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The EMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ema\n         *\n         * @augments Highcharts.Series\n         */\n        class EMAIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            accumulatePeriodPoints(period, index, yVal) {\n                let sum = 0, i = 0, y = 0;\n                while (i < period) {\n                    y = index < 0 ? yVal[i] : yVal[i][index];\n                    sum = sum + y;\n                    i++;\n                }\n                return sum;\n            }\n            calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA) {\n                const x = xVal[i - 1], yValue = index < 0 ?\n                    yVal[i - 1] :\n                    yVal[i - 1][index], y = typeof calEMA === 'undefined' ?\n                    SMA : correctFloat((yValue * EMApercent) +\n                    (calEMA * (1 - EMApercent)));\n                return [x, y];\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, EMApercent = 2 / (period + 1), EMA = [], xData = [], yData = [];\n                let calEMA, EMAPoint, i, index = -1, sum = 0, SMA = 0;\n                // Check period, if bigger than points length, skip\n                if (yValLen < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                sum = this.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                SMA = sum / period;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 1; i++) {\n                    EMAPoint = this.calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA);\n                    EMA.push(EMAPoint);\n                    xData.push(EMAPoint[0]);\n                    yData.push(EMAPoint[1]);\n                    calEMA = EMAPoint[1];\n                }\n                return {\n                    values: EMA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Exponential moving average indicator (EMA). This series requires the\n         * `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/ema\n         * Exponential moving average indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @optionparent plotOptions.ema\n         */\n        EMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 *\n                 * By default index value used to be set to 0. Since\n                 * Highcharts Stock 7 by default index is set to 3\n                 * which means that the ema indicator will be\n                 * calculated using Close values.\n                 */\n                index: 3,\n                period: 9 // @merge 14 in v6.2\n            }\n        });\n        SeriesRegistry.registerSeriesType('ema', EMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `EMA` series. If the [type](#series.ema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ema\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @apioption series.ema\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return EMAIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/indicators.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Chart","SeriesRegistry","U","line","LineSeries","seriesTypes","addEvent","fireEvent","error","extend","isArray","merge","pick","splat","SMAIndicator","constructor","arguments","data","dataEventsToUnbind","linkedParent","options","points","destroy","forEach","unbinder","getName","params","name","nameComponents","component","index","push","nameSuffixes","nameBase","type","toUpperCase","join","getValues","series","period","xVal","xData","yVal","yData","yValLen","length","SMA","i","range","SMAPoint","sum","values","init","chart","indicator","call","linkedSeriesUnbiner","isUpdating","hasEvents","linkedTo","recalculateValues","calculateOn","xAxis","processedYData","order","eventsToUnbind","croppedDataValues","oldData","oldDataLength","overwriteData","oldFirstPointIndex","oldLastPointIndex","croppedData","min","max","processedData","hasGroupedData","visible","cropped","cropData","concat","indexOf","x","shift","updateData","updateAllPoints","processedXData","isDirty","redraw","isDirtyData","linkedSeries","processData","compareToMain","dataModify","compareValue","defaultOptions","tooltip","valueDecimals","prototype","hasDerivedData","useCommonDataGrouping","registerSeriesType","sma","correctFloat","EMAIndicator","accumulatePeriodPoints","calculateEma","EMApercent","calEMA","yValue","y","EMA","EMAPoint"],"mappings":"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"}
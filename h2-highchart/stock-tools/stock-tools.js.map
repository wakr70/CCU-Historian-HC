{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Advanced Highcharts Stock tools\n *\n * (c) 2010-2021 Highsoft AS\n * Author: Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/stock-tools', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Chart/ChartNavigationComposition.js', [], function () {\n        /**\n         *\n         *  (c) 2010-2021 PaweÅ‚ Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ChartNavigationComposition;\n        (function (ChartNavigationComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(chart) {\n                if (!chart.navigation) {\n                    chart.navigation = new Additions(chart);\n                }\n                return chart;\n            }\n            ChartNavigationComposition.compose = compose;\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Initializes `chart.navigation` object which delegates `update()` methods\n             * to all other common classes (used in exporting and navigationBindings).\n             * @private\n             */\n            class Additions {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                constructor(chart) {\n                    this.updates = [];\n                    this.chart = chart;\n                }\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Registers an `update()` method in the `chart.navigation` object.\n                 *\n                 * @private\n                 * @param {UpdateFunction} updateFn\n                 * The `update()` method that will be called in `chart.update()`.\n                 */\n                addUpdate(updateFn) {\n                    this.chart.navigation.updates.push(updateFn);\n                }\n                /**\n                 * @private\n                 */\n                update(options, redraw) {\n                    this.updates.forEach((updateFn) => {\n                        updateFn.call(this.chart, options, redraw);\n                    });\n                }\n            }\n            ChartNavigationComposition.Additions = Additions;\n        })(ChartNavigationComposition || (ChartNavigationComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ChartNavigationComposition;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindingsDefaults.js', [_modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Core/Utilities.js']], function (NBU, U) {\n        /* *\n         *\n         *  (c) 2009-2021 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { getAssignedAxis } = NBU;\n        const { isNumber, merge } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @optionparent lang\n         */\n        const lang = {\n            /**\n             * Configure the Popup strings in the chart. Requires the\n             * `annotations.js` or `annotations-advanced.src.js` module to be\n             * loaded.\n             * @since   7.0.0\n             * @product highcharts highstock\n             */\n            navigation: {\n                /**\n                 * Translations for all field names used in popup.\n                 *\n                 * @product highcharts highstock\n                 */\n                popup: {\n                    simpleShapes: 'Simple shapes',\n                    lines: 'Lines',\n                    circle: 'Circle',\n                    ellipse: 'Ellipse',\n                    rectangle: 'Rectangle',\n                    label: 'Label',\n                    shapeOptions: 'Shape options',\n                    typeOptions: 'Details',\n                    fill: 'Fill',\n                    format: 'Text',\n                    strokeWidth: 'Line width',\n                    stroke: 'Line color',\n                    title: 'Title',\n                    name: 'Name',\n                    labelOptions: 'Label options',\n                    labels: 'Labels',\n                    backgroundColor: 'Background color',\n                    backgroundColors: 'Background colors',\n                    borderColor: 'Border color',\n                    borderRadius: 'Border radius',\n                    borderWidth: 'Border width',\n                    style: 'Style',\n                    padding: 'Padding',\n                    fontSize: 'Font size',\n                    color: 'Color',\n                    height: 'Height',\n                    shapes: 'Shape options'\n                }\n            }\n        };\n        /**\n         * @optionparent navigation\n         * @product      highcharts highstock\n         */\n        const navigation = {\n            /**\n             * A CSS class name where all bindings will be attached to. Multiple\n             * charts on the same page should have separate class names to prevent\n             * duplicating events.\n             *\n             * Default value of versions < 7.0.4 `highcharts-bindings-wrapper`\n             *\n             * @since     7.0.0\n             * @type      {string}\n             */\n            bindingsClassName: 'highcharts-bindings-container',\n            /**\n             * Bindings definitions for custom HTML buttons. Each binding implements\n             * simple event-driven interface:\n             *\n             * - `className`: classname used to bind event to\n             *\n             * - `init`: initial event, fired on button click\n             *\n             * - `start`: fired on first click on a chart\n             *\n             * - `steps`: array of sequential events fired one after another on each\n             *   of users clicks\n             *\n             * - `end`: last event to be called after last step event\n             *\n             * @type         {Highcharts.Dictionary<Highcharts.NavigationBindingsOptionsObject>|*}\n             *\n             * @sample {highstock} stock/stocktools/stocktools-thresholds\n             *               Custom bindings\n             * @sample {highcharts} highcharts/annotations/bindings/\n             *               Simple binding\n             * @sample {highcharts} highcharts/annotations/bindings-custom-annotation/\n             *               Custom annotation binding\n             *\n             * @since        7.0.0\n             * @requires     modules/annotations\n             * @product      highcharts highstock\n             */\n            bindings: {\n                /**\n                 * A circle annotation bindings. Includes `start` and one event in\n                 * `steps` array.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-circle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                circleAnnotation: {\n                    /** @ignore-option */\n                    className: 'highcharts-circle-annotation',\n                    /** @ignore-option */\n                    start: function (e) {\n                        const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                        // Exit if clicked out of axes area\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'circle',\n                            type: 'basicAnnotation',\n                            shapes: [{\n                                    type: 'circle',\n                                    point: {\n                                        x: coordsX.value,\n                                        y: coordsY.value,\n                                        xAxis: coordsX.axis.index,\n                                        yAxis: coordsY.axis.index\n                                    },\n                                    r: 5\n                                }]\n                        }, navigation.annotationsOptions, navigation.bindings.circleAnnotation\n                            .annotationsOptions));\n                    },\n                    /** @ignore-option */\n                    steps: [\n                        function (e, annotation) {\n                            const shapes = annotation.options.shapes, mockPointOpts = ((shapes && shapes[0] && shapes[0].point) ||\n                                {});\n                            let distance;\n                            if (isNumber(mockPointOpts.xAxis) &&\n                                isNumber(mockPointOpts.yAxis)) {\n                                const inverted = this.chart.inverted, x = this.chart.xAxis[mockPointOpts.xAxis]\n                                    .toPixels(mockPointOpts.x), y = this.chart.yAxis[mockPointOpts.yAxis]\n                                    .toPixels(mockPointOpts.y);\n                                distance = Math.max(Math.sqrt(Math.pow(inverted ? y - e.chartX : x - e.chartX, 2) +\n                                    Math.pow(inverted ? x - e.chartY : y - e.chartY, 2)), 5);\n                            }\n                            annotation.update({\n                                shapes: [{\n                                        r: distance\n                                    }]\n                            });\n                        }\n                    ]\n                },\n                /**\n                 * A ellipse annotation bindings. Includes `start` and two events in\n                 * `steps` array. First updates the second point, responsible for a\n                 * rx width, and second updates the ry width.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-ellipse-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                ellipseAnnotation: {\n                    className: 'highcharts-ellipse-annotation',\n                    start: function (e) {\n                        const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'ellipse',\n                            type: 'basicAnnotation',\n                            shapes: [\n                                {\n                                    type: 'ellipse',\n                                    xAxis: coordsX.axis.index,\n                                    yAxis: coordsY.axis.index,\n                                    points: [{\n                                            x: coordsX.value,\n                                            y: coordsY.value\n                                        }, {\n                                            x: coordsX.value,\n                                            y: coordsY.value\n                                        }],\n                                    ry: 1\n                                }\n                            ]\n                        }, navigation.annotationsOptions, navigation.bindings.ellipseAnnotation\n                            .annotationOptions));\n                    },\n                    steps: [\n                        function (e, annotation) {\n                            const target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[1]);\n                            target.translatePoint(e.chartX - position.x, e.chartY - position.y, 1);\n                            target.redraw(false);\n                        },\n                        function (e, annotation) {\n                            const target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[0]), position2 = target.getAbsolutePosition(target.points[1]), newR = target.getDistanceFromLine(position, position2, e.chartX, e.chartY), yAxis = target.getYAxis(), newRY = Math.abs(yAxis.toValue(0) - yAxis.toValue(newR));\n                            target.setYRadius(newRY);\n                            target.redraw(false);\n                        }\n                    ]\n                },\n                /**\n                 * A rectangle annotation bindings. Includes `start` and one event\n                 * in `steps` array.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-rectangle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                rectangleAnnotation: {\n                    /** @ignore-option */\n                    className: 'highcharts-rectangle-annotation',\n                    /** @ignore-option */\n                    start: function (e) {\n                        const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                        // Exit if clicked out of axes area\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        const x = coordsX.value, y = coordsY.value, xAxis = coordsX.axis.index, yAxis = coordsY.axis.index, navigation = this.chart.options.navigation;\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'rectangle',\n                            type: 'basicAnnotation',\n                            shapes: [{\n                                    type: 'path',\n                                    points: [\n                                        { xAxis, yAxis, x, y },\n                                        { xAxis, yAxis, x, y },\n                                        { xAxis, yAxis, x, y },\n                                        { xAxis, yAxis, x, y },\n                                        { command: 'Z' }\n                                    ]\n                                }]\n                        }, navigation\n                            .annotationsOptions, navigation\n                            .bindings\n                            .rectangleAnnotation\n                            .annotationsOptions));\n                    },\n                    /** @ignore-option */\n                    steps: [\n                        function (e, annotation) {\n                            const shapes = annotation.options.shapes, points = ((shapes && shapes[0] && shapes[0].points) ||\n                                []), coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                            if (coordsX && coordsY) {\n                                const x = coordsX.value, y = coordsY.value;\n                                // Top right point\n                                points[1].x = x;\n                                // Bottom right point (cursor position)\n                                points[2].x = x;\n                                points[2].y = y;\n                                // Bottom left\n                                points[3].y = y;\n                                annotation.update({\n                                    shapes: [{\n                                            points: points\n                                        }]\n                                });\n                            }\n                        }\n                    ]\n                },\n                /**\n                 * A label annotation bindings. Includes `start` event only.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-label-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                labelAnnotation: {\n                    /** @ignore-option */\n                    className: 'highcharts-label-annotation',\n                    /** @ignore-option */\n                    start: function (e) {\n                        const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                        // Exit if clicked out of axes area\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'label',\n                            type: 'basicAnnotation',\n                            labelOptions: {\n                                format: '{y:.2f}',\n                                overflow: 'none',\n                                crop: true\n                            },\n                            labels: [{\n                                    point: {\n                                        xAxis: coordsX.axis.index,\n                                        yAxis: coordsY.axis.index,\n                                        x: coordsX.value,\n                                        y: coordsY.value\n                                    }\n                                }]\n                        }, navigation\n                            .annotationsOptions, navigation\n                            .bindings\n                            .labelAnnotation\n                            .annotationsOptions));\n                    }\n                }\n            },\n            /**\n             * Path where Highcharts will look for icons. Change this to use icons\n             * from a different server.\n             *\n             * @type      {string}\n             * @default   https://code.highcharts.com/11.2.0/gfx/stock-icons/\n             * @since     7.1.3\n             * @apioption navigation.iconsURL\n             */\n            /**\n             * A `showPopup` event. Fired when selecting for example an annotation.\n             *\n             * @type      {Function}\n             * @apioption navigation.events.showPopup\n             */\n            /**\n             * A `closePopup` event. Fired when Popup should be hidden, for example\n             * when clicking on an annotation again.\n             *\n             * @type      {Function}\n             * @apioption navigation.events.closePopup\n             */\n            /**\n             * Event fired on a button click.\n             *\n             * @type      {Function}\n             * @sample    highcharts/annotations/gui/\n             *            Change icon in a dropddown on event\n             * @sample    highcharts/annotations/gui-buttons/\n             *            Change button class on event\n             * @apioption navigation.events.selectButton\n             */\n            /**\n             * Event fired when button state should change, for example after\n             * adding an annotation.\n             *\n             * @type      {Function}\n             * @sample    highcharts/annotations/gui/\n             *            Change icon in a dropddown on event\n             * @sample    highcharts/annotations/gui-buttons/\n             *            Change button class on event\n             * @apioption navigation.events.deselectButton\n             */\n            /**\n             * Events to communicate between Stock Tools and custom GUI.\n             *\n             * @since        7.0.0\n             * @product      highcharts highstock\n             * @optionparent navigation.events\n             */\n            events: {},\n            /**\n             * Additional options to be merged into all annotations.\n             *\n             * @sample stock/stocktools/navigation-annotation-options\n             *         Set red color of all line annotations\n             *\n             * @type      {Highcharts.AnnotationsOptions}\n             * @extends   annotations\n             * @exclude   crookedLine, elliottWave, fibonacci, infinityLine,\n             *            measure, pitchfork, tunnel, verticalLine, basicAnnotation\n             * @requires     modules/annotations\n             * @apioption navigation.annotationsOptions\n             */\n            annotationsOptions: {\n                animation: {\n                    defer: 0\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const NavigationBindingDefaults = {\n            lang,\n            navigation\n        };\n\n        return NavigationBindingDefaults;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindings.js', [_modules['Core/Chart/ChartNavigationComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Extensions/Annotations/NavigationBindingsDefaults.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Core/Utilities.js']], function (ChartNavigationComposition, D, F, H, NavigationBindingDefaults, NBU, U) {\n        /* *\n         *\n         *  (c) 2009-2021 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { setOptions } = D;\n        const { format } = F;\n        const { doc, win } = H;\n        const { getFieldType } = NBU;\n        const { addEvent, attr, defined, fireEvent, isArray, isFunction, isNumber, isObject, merge, objectEach, pick } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * IE 9-11 polyfill for Element.closest():\n         * @private\n         */\n        function closestPolyfill(el, s) {\n            const ElementProto = win.Element.prototype, elementMatches = ElementProto.matches ||\n                ElementProto.msMatchesSelector ||\n                ElementProto.webkitMatchesSelector;\n            let ret = null;\n            if (ElementProto.closest) {\n                ret = ElementProto.closest.call(el, s);\n            }\n            else {\n                do {\n                    if (elementMatches.call(el, s)) {\n                        return el;\n                    }\n                    el = el.parentElement || el.parentNode;\n                } while (el !== null && el.nodeType === 1);\n            }\n            return ret;\n        }\n        /**\n         * @private\n         */\n        function onAnnotationRemove() {\n            if (this.chart.navigationBindings) {\n                this.chart.navigationBindings.deselectAnnotation();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartDestroy() {\n            if (this.navigationBindings) {\n                this.navigationBindings.destroy();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartLoad() {\n            const options = this.options;\n            if (options && options.navigation && options.navigation.bindings) {\n                this.navigationBindings = new NavigationBindings(this, options.navigation);\n                this.navigationBindings.initEvents();\n                this.navigationBindings.initUpdate();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            const navigationBindings = this.navigationBindings, disabledClassName = 'highcharts-disabled-btn';\n            if (this && navigationBindings) {\n                // Check if the buttons should be enabled/disabled based on\n                // visible series.\n                let buttonsEnabled = false;\n                this.series.forEach((series) => {\n                    if (!series.options.isInternal && series.visible) {\n                        buttonsEnabled = true;\n                    }\n                });\n                if (this.navigationBindings &&\n                    this.navigationBindings.container &&\n                    this.navigationBindings.container[0]) {\n                    const container = this.navigationBindings.container[0];\n                    objectEach(navigationBindings.boundClassNames, (value, key) => {\n                        // Get the HTML element coresponding to the className taken\n                        // from StockToolsBindings.\n                        const buttonNode = container.querySelectorAll('.' + key);\n                        if (buttonNode) {\n                            for (let i = 0; i < buttonNode.length; i++) {\n                                const button = buttonNode[i], cls = button.className;\n                                if (value.noDataState === 'normal') {\n                                    // If button has noDataState: 'normal', and has\n                                    // disabledClassName, remove this className.\n                                    if (cls.indexOf(disabledClassName) !== -1) {\n                                        button.classList.remove(disabledClassName);\n                                    }\n                                }\n                                else if (!buttonsEnabled) {\n                                    if (cls.indexOf(disabledClassName) === -1) {\n                                        button.className += ' ' + disabledClassName;\n                                    }\n                                }\n                                else {\n                                    // Enable all buttons by deleting the className.\n                                    if (cls.indexOf(disabledClassName) !== -1) {\n                                        button.classList.remove(disabledClassName);\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsClosePopup() {\n            this.deselectAnnotation();\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsDeselectButton() {\n            this.selectedButtonElement = null;\n        }\n        /**\n         * Show edit-annotation form:\n         * @private\n         */\n        function selectableAnnotation(annotationType) {\n            const originalClick = annotationType.prototype.defaultOptions.events &&\n                annotationType.prototype.defaultOptions.events.click;\n            /**\n             * Select and show popup\n             * @private\n             */\n            function selectAndShowPopup(eventArguments) {\n                const annotation = this, navigation = annotation.chart.navigationBindings, prevAnnotation = navigation.activeAnnotation;\n                if (originalClick) {\n                    originalClick.call(annotation, eventArguments);\n                }\n                if (prevAnnotation !== annotation) {\n                    // Select current:\n                    navigation.deselectAnnotation();\n                    navigation.activeAnnotation = annotation;\n                    annotation.setControlPointsVisibility(true);\n                    fireEvent(navigation, 'showPopup', {\n                        annotation: annotation,\n                        formType: 'annotation-toolbar',\n                        options: navigation.annotationToFields(annotation),\n                        onSubmit: function (data) {\n                            if (data.actionType === 'remove') {\n                                navigation.activeAnnotation = false;\n                                navigation.chart.removeAnnotation(annotation);\n                            }\n                            else {\n                                const config = {};\n                                navigation.fieldsToOptions(data.fields, config);\n                                navigation.deselectAnnotation();\n                                const typeOptions = config.typeOptions;\n                                if (annotation.options.type === 'measure') {\n                                    // Manually disable crooshars according to\n                                    // stroke width of the shape:\n                                    typeOptions.crosshairY.enabled = (typeOptions.crosshairY\n                                        .strokeWidth !== 0);\n                                    typeOptions.crosshairX.enabled = (typeOptions.crosshairX\n                                        .strokeWidth !== 0);\n                                }\n                                annotation.update(config);\n                            }\n                        }\n                    });\n                }\n                else {\n                    // Deselect current:\n                    fireEvent(navigation, 'closePopup');\n                }\n                // Let bubble event to chart.click:\n                eventArguments.activeAnnotation = true;\n            }\n            // #18276, show popup on touchend, but not on touchmove\n            let touchStartX, touchStartY;\n            function saveCoords(e) {\n                touchStartX = e.touches[0].clientX;\n                touchStartY = e.touches[0].clientY;\n            }\n            function checkForTouchmove(e) {\n                const hasMoved = touchStartX ? Math.sqrt(Math.pow(touchStartX - e.changedTouches[0].clientX, 2) +\n                    Math.pow(touchStartY - e.changedTouches[0].clientY, 2)) >= 4 : false;\n                if (!hasMoved) {\n                    selectAndShowPopup.call(this, e);\n                }\n            }\n            merge(true, annotationType.prototype.defaultOptions.events, {\n                click: selectAndShowPopup,\n                touchstart: saveCoords,\n                touchend: checkForTouchmove\n            });\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        class NavigationBindings {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static compose(AnnotationClass, ChartClass) {\n                if (U.pushUnique(composedMembers, AnnotationClass)) {\n                    addEvent(AnnotationClass, 'remove', onAnnotationRemove);\n                    // Basic shapes:\n                    selectableAnnotation(AnnotationClass);\n                    // Advanced annotations:\n                    objectEach(AnnotationClass.types, (annotationType) => {\n                        selectableAnnotation(annotationType);\n                    });\n                }\n                if (U.pushUnique(composedMembers, ChartClass)) {\n                    addEvent(ChartClass, 'destroy', onChartDestroy);\n                    addEvent(ChartClass, 'load', onChartLoad);\n                    addEvent(ChartClass, 'render', onChartRender);\n                }\n                if (U.pushUnique(composedMembers, NavigationBindings)) {\n                    addEvent(NavigationBindings, 'closePopup', onNavigationBindingsClosePopup);\n                    addEvent(NavigationBindings, 'deselectButton', onNavigationBindingsDeselectButton);\n                }\n                if (U.pushUnique(composedMembers, setOptions)) {\n                    setOptions(NavigationBindingDefaults);\n                }\n            }\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, options) {\n                this.boundClassNames = void 0;\n                this.selectedButton = void 0;\n                this.chart = chart;\n                this.options = options;\n                this.eventsToUnbind = [];\n                this.container =\n                    this.chart.container.getElementsByClassName(this.options.bindingsClassName || '');\n                if (!this.container.length) {\n                    this.container = doc.getElementsByClassName(this.options.bindingsClassName || '');\n                }\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initi all events conencted to NavigationBindings.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#initEvents\n             */\n            initEvents() {\n                const navigation = this, chart = navigation.chart, bindingsContainer = navigation.container, options = navigation.options;\n                // Shorthand object for getting events for buttons:\n                navigation.boundClassNames = {};\n                objectEach((options.bindings || {}), (value) => {\n                    navigation.boundClassNames[value.className] = value;\n                });\n                // Handle multiple containers with the same class names:\n                [].forEach.call(bindingsContainer, (subContainer) => {\n                    navigation.eventsToUnbind.push(addEvent(subContainer, 'click', (event) => {\n                        const bindings = navigation.getButtonEvents(subContainer, event);\n                        if (bindings &&\n                            (!bindings.button.classList\n                                .contains('highcharts-disabled-btn'))) {\n                            navigation.bindingsButtonClick(bindings.button, bindings.events, event);\n                        }\n                    }));\n                });\n                objectEach((options.events || {}), (callback, eventName) => {\n                    if (isFunction(callback)) {\n                        navigation.eventsToUnbind.push(addEvent(navigation, eventName, callback, { passive: false }));\n                    }\n                });\n                navigation.eventsToUnbind.push(addEvent(chart.container, 'click', function (e) {\n                    if (!chart.cancelClick &&\n                        chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop, {\n                            visiblePlotOnly: true\n                        })) {\n                        navigation.bindingsChartClick(this, e);\n                    }\n                }));\n                navigation.eventsToUnbind.push(addEvent(chart.container, H.isTouchDevice ? 'touchmove' : 'mousemove', function (e) {\n                    navigation.bindingsContainerMouseMove(this, e);\n                }, H.isTouchDevice ? { passive: false } : void 0));\n            }\n            /**\n             * Common chart.update() delegation, shared between bindings and exporting.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#initUpdate\n             */\n            initUpdate() {\n                const navigation = this;\n                ChartNavigationComposition\n                    .compose(this.chart).navigation\n                    .addUpdate((options) => {\n                    navigation.update(options);\n                });\n            }\n            /**\n             * Hook for click on a button, method selcts/unselects buttons,\n             * then calls `bindings.init` callback.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#bindingsButtonClick\n             *\n             * @param {Highcharts.HTMLDOMElement} [button]\n             *        Clicked button\n             *\n             * @param {Object} events\n             *        Events passed down from bindings (`init`, `start`, `step`, `end`)\n             *\n             * @param {Highcharts.PointerEventObject} clickEvent\n             *        Browser's click event\n             */\n            bindingsButtonClick(button, events, clickEvent) {\n                const navigation = this, chart = navigation.chart, svgContainer = chart.renderer.boxWrapper;\n                let shouldEventBeFired = true;\n                if (navigation.selectedButtonElement) {\n                    if (navigation.selectedButtonElement.classList === button.classList) {\n                        shouldEventBeFired = false;\n                    }\n                    fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                    if (navigation.nextEvent) {\n                        // Remove in-progress annotations adders:\n                        if (navigation.currentUserDetails &&\n                            navigation.currentUserDetails.coll === 'annotations') {\n                            chart.removeAnnotation(navigation.currentUserDetails);\n                        }\n                        navigation.mouseMoveEvent = navigation.nextEvent = false;\n                    }\n                }\n                if (shouldEventBeFired) {\n                    navigation.selectedButton = events;\n                    navigation.selectedButtonElement = button;\n                    fireEvent(navigation, 'selectButton', { button: button });\n                    // Call \"init\" event, for example to open modal window\n                    if (events.init) {\n                        events.init.call(navigation, button, clickEvent);\n                    }\n                    if (events.start || events.steps) {\n                        chart.renderer.boxWrapper.addClass('highcharts-draw-mode');\n                    }\n                }\n                else {\n                    chart.stockTools &&\n                        chart.stockTools.toggleButtonActiveClass(button);\n                    svgContainer.removeClass('highcharts-draw-mode');\n                    navigation.nextEvent = false;\n                    navigation.mouseMoveEvent = false;\n                    navigation.selectedButton = null;\n                }\n            }\n            /**\n             * Hook for click on a chart, first click on a chart calls `start` event,\n             * then on all subsequent clicks iterate over `steps` array.\n             * When finished, calls `end` event.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#bindingsChartClick\n             *\n             * @param {Highcharts.Chart} chart\n             *        Chart that click was performed on.\n             *\n             * @param {Highcharts.PointerEventObject} clickEvent\n             *        Browser's click event.\n             */\n            bindingsChartClick(chart, clickEvent) {\n                chart = this.chart;\n                const navigation = this, activeAnnotation = navigation.activeAnnotation, selectedButton = navigation.selectedButton, svgContainer = chart.renderer.boxWrapper;\n                if (activeAnnotation) {\n                    // Click outside popups, should close them and deselect the\n                    // annotation\n                    if (!activeAnnotation.cancelClick && // #15729\n                        !clickEvent.activeAnnotation &&\n                        // Element could be removed in the child action, e.g. button\n                        clickEvent.target.parentNode &&\n                        // TO DO: Polyfill for IE11?\n                        !closestPolyfill(clickEvent.target, '.highcharts-popup')) {\n                        fireEvent(navigation, 'closePopup');\n                    }\n                    else if (activeAnnotation.cancelClick) {\n                        // Reset cancelClick after the other event handlers have run\n                        setTimeout(() => {\n                            activeAnnotation.cancelClick = false;\n                        }, 0);\n                    }\n                }\n                if (!selectedButton || !selectedButton.start) {\n                    return;\n                }\n                if (!navigation.nextEvent) {\n                    // Call init method:\n                    navigation.currentUserDetails = selectedButton.start.call(navigation, clickEvent);\n                    // If steps exists (e.g. Annotations), bind them:\n                    if (navigation.currentUserDetails && selectedButton.steps) {\n                        navigation.stepIndex = 0;\n                        navigation.steps = true;\n                        navigation.mouseMoveEvent = navigation.nextEvent =\n                            selectedButton.steps[navigation.stepIndex];\n                    }\n                    else {\n                        fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                        svgContainer.removeClass('highcharts-draw-mode');\n                        navigation.steps = false;\n                        navigation.selectedButton = null;\n                        // First click is also the last one:\n                        if (selectedButton.end) {\n                            selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                        }\n                    }\n                }\n                else {\n                    navigation.nextEvent(clickEvent, navigation.currentUserDetails);\n                    if (navigation.steps) {\n                        navigation.stepIndex++;\n                        if (selectedButton.steps[navigation.stepIndex]) {\n                            // If we have more steps, bind them one by one:\n                            navigation.mouseMoveEvent = navigation.nextEvent = selectedButton.steps[navigation.stepIndex];\n                        }\n                        else {\n                            fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                            svgContainer.removeClass('highcharts-draw-mode');\n                            // That was the last step, call end():\n                            if (selectedButton.end) {\n                                selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                            }\n                            navigation.nextEvent = false;\n                            navigation.mouseMoveEvent = false;\n                            navigation.selectedButton = null;\n                        }\n                    }\n                }\n            }\n            /**\n             * Hook for mouse move on a chart's container. It calls current step.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#bindingsContainerMouseMove\n             *\n             * @param {Highcharts.HTMLDOMElement} container\n             *        Chart's container.\n             *\n             * @param {global.Event} moveEvent\n             *        Browser's move event.\n             */\n            bindingsContainerMouseMove(_container, moveEvent) {\n                if (this.mouseMoveEvent) {\n                    this.mouseMoveEvent(moveEvent, this.currentUserDetails);\n                }\n            }\n            /**\n             * Translate fields (e.g. `params.period` or `marker.styles.color`) to\n             * Highcharts options object (e.g. `{ params: { period } }`).\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#fieldsToOptions<T>\n             *\n             * @param {Highcharts.Dictionary<string>} fields\n             *        Fields from popup form.\n             *\n             * @param {T} config\n             *        Default config to be modified.\n             *\n             * @return {T}\n             *         Modified config\n             */\n            fieldsToOptions(fields, config) {\n                objectEach(fields, (value, field) => {\n                    const parsedValue = parseFloat(value), path = field.split('.'), pathLength = path.length - 1;\n                    // If it's a number (not \"format\" options), parse it:\n                    if (isNumber(parsedValue) &&\n                        !value.match(/px|em/g) &&\n                        !field.match(/format/g)) {\n                        value = parsedValue;\n                    }\n                    // Remove values like 0\n                    if (value !== 'undefined') {\n                        let parent = config;\n                        path.forEach((name, index) => {\n                            const nextName = pick(path[index + 1], '');\n                            if (pathLength === index) {\n                                // Last index, put value:\n                                parent[name] = value;\n                            }\n                            else if (!parent[name]) {\n                                // Create middle property:\n                                parent[name] = nextName.match(/\\d/g) ? [] : {};\n                                parent = parent[name];\n                            }\n                            else {\n                                // Jump into next property\n                                parent = parent[name];\n                            }\n                        });\n                    }\n                });\n                return config;\n            }\n            /**\n             * Shorthand method to deselect an annotation.\n             *\n             * @function Highcharts.NavigationBindings#deselectAnnotation\n             */\n            deselectAnnotation() {\n                if (this.activeAnnotation) {\n                    this.activeAnnotation.setControlPointsVisibility(false);\n                    this.activeAnnotation = false;\n                }\n            }\n            /**\n             * Generates API config for popup in the same format as options for\n             * Annotation object.\n             *\n             * @function Highcharts.NavigationBindings#annotationToFields\n             *\n             * @param {Highcharts.Annotation} annotation\n             *        Annotations object\n             *\n             * @return {Highcharts.Dictionary<string>}\n             *         Annotation options to be displayed in popup box\n             */\n            annotationToFields(annotation) {\n                const options = annotation.options, editables = NavigationBindings.annotationsEditable, nestedEditables = editables.nestedOptions, type = pick(options.type, options.shapes && options.shapes[0] &&\n                    options.shapes[0].type, options.labels && options.labels[0] &&\n                    options.labels[0].type, 'label'), nonEditables = NavigationBindings.annotationsNonEditable[options.langKey] || [], visualOptions = {\n                    langKey: options.langKey,\n                    type: type\n                };\n                /**\n                 * Nested options traversing. Method goes down to the options and copies\n                 * allowed options (with values) to new object, which is last parameter:\n                 * \"parent\".\n                 *\n                 * @private\n                 *\n                 * @param {*} option\n                 *        Atomic type or object/array\n                 *\n                 * @param {string} key\n                 *        Option name, for example \"visible\" or \"x\", \"y\"\n                 *\n                 * @param {Object} parentEditables\n                 *        Editables from NavigationBindings.annotationsEditable\n                 *\n                 * @param {Object} parent\n                 *        Where new options will be assigned\n                 */\n                function traverse(option, key, parentEditables, parent, parentKey) {\n                    let nextParent;\n                    if (parentEditables &&\n                        defined(option) &&\n                        nonEditables.indexOf(key) === -1 &&\n                        ((parentEditables.indexOf &&\n                            parentEditables.indexOf(key)) >= 0 ||\n                            parentEditables[key] || // nested array\n                            parentEditables === true // simple array\n                        )) {\n                        // Roots:\n                        if (isArray(option)) {\n                            parent[key] = [];\n                            option.forEach((arrayOption, i) => {\n                                if (!isObject(arrayOption)) {\n                                    // Simple arrays, e.g. [String, Number, Boolean]\n                                    traverse(arrayOption, 0, nestedEditables[key], parent[key], key);\n                                }\n                                else {\n                                    // Advanced arrays, e.g. [Object, Object]\n                                    parent[key][i] = {};\n                                    objectEach(arrayOption, (nestedOption, nestedKey) => {\n                                        traverse(nestedOption, nestedKey, nestedEditables[key], parent[key][i], key);\n                                    });\n                                }\n                            });\n                        }\n                        else if (isObject(option)) {\n                            nextParent = {};\n                            if (isArray(parent)) {\n                                parent.push(nextParent);\n                                nextParent[key] = {};\n                                nextParent = nextParent[key];\n                            }\n                            else {\n                                parent[key] = nextParent;\n                            }\n                            objectEach(option, (nestedOption, nestedKey) => {\n                                traverse(nestedOption, nestedKey, key === 0 ?\n                                    parentEditables :\n                                    nestedEditables[key], nextParent, key);\n                            });\n                        }\n                        else {\n                            // Leaf:\n                            if (key === 'format') {\n                                parent[key] = [\n                                    format(option, annotation.labels[0].points[0]).toString(),\n                                    'text'\n                                ];\n                            }\n                            else if (isArray(parent)) {\n                                parent.push([option, getFieldType(parentKey, option)]);\n                            }\n                            else {\n                                parent[key] = [option, getFieldType(key, option)];\n                            }\n                        }\n                    }\n                }\n                objectEach(options, (option, key) => {\n                    if (key === 'typeOptions') {\n                        visualOptions[key] = {};\n                        objectEach(options[key], (typeOption, typeKey) => {\n                            traverse(typeOption, typeKey, nestedEditables, visualOptions[key], typeKey);\n                        });\n                    }\n                    else {\n                        traverse(option, key, editables[type], visualOptions, key);\n                    }\n                });\n                return visualOptions;\n            }\n            /**\n             * Get all class names for all parents in the element. Iterates until finds\n             * main container.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#getClickedClassNames\n             *\n             * @param {Highcharts.HTMLDOMElement} container\n             * Container that event is bound to.\n             *\n             * @param {global.Event} event\n             * Browser's event.\n             *\n             * @return {Array<Array<string, Highcharts.HTMLDOMElement>>}\n             * Array of class names with corresponding elements\n             */\n            getClickedClassNames(container, event) {\n                let element = event.target, classNames = [], elemClassName;\n                while (element && element.tagName) {\n                    elemClassName = attr(element, 'class');\n                    if (elemClassName) {\n                        classNames = classNames.concat(elemClassName\n                            .split(' ')\n                            // eslint-disable-next-line no-loop-func\n                            .map((name) => ([name, element])));\n                    }\n                    element = element.parentNode;\n                    if (element === container) {\n                        return classNames;\n                    }\n                }\n                return classNames;\n            }\n            /**\n             * Get events bound to a button. It's a custom event delegation to find all\n             * events connected to the element.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#getButtonEvents\n             *\n             * @param {Highcharts.HTMLDOMElement} container\n             *        Container that event is bound to.\n             *\n             * @param {global.Event} event\n             *        Browser's event.\n             *\n             * @return {Object}\n             *         Object with events (init, start, steps, and end)\n             */\n            getButtonEvents(container, event) {\n                const navigation = this, classNames = this.getClickedClassNames(container, event);\n                let bindings;\n                classNames.forEach((className) => {\n                    if (navigation.boundClassNames[className[0]] && !bindings) {\n                        bindings = {\n                            events: navigation.boundClassNames[className[0]],\n                            button: className[1]\n                        };\n                    }\n                });\n                return bindings;\n            }\n            /**\n             * Bindings are just events, so the whole update process is simply\n             * removing old events and adding new ones.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#update\n             */\n            update(options) {\n                this.options = merge(true, this.options, options);\n                this.removeEvents();\n                this.initEvents();\n            }\n            /**\n             * Remove all events created in the navigation.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#removeEvents\n             */\n            removeEvents() {\n                this.eventsToUnbind.forEach((unbinder) => unbinder());\n            }\n            /**\n             * @private\n             * @function Highcharts.NavigationBindings#destroy\n             */\n            destroy() {\n                this.removeEvents();\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        // Define which options from annotations should show up in edit box:\n        NavigationBindings.annotationsEditable = {\n            // `typeOptions` are always available\n            // Nested and shared options:\n            nestedOptions: {\n                labelOptions: ['style', 'format', 'backgroundColor'],\n                labels: ['style'],\n                label: ['style'],\n                style: ['fontSize', 'color'],\n                background: ['fill', 'strokeWidth', 'stroke'],\n                innerBackground: ['fill', 'strokeWidth', 'stroke'],\n                outerBackground: ['fill', 'strokeWidth', 'stroke'],\n                shapeOptions: ['fill', 'strokeWidth', 'stroke'],\n                shapes: ['fill', 'strokeWidth', 'stroke'],\n                line: ['strokeWidth', 'stroke'],\n                backgroundColors: [true],\n                connector: ['fill', 'strokeWidth', 'stroke'],\n                crosshairX: ['strokeWidth', 'stroke'],\n                crosshairY: ['strokeWidth', 'stroke']\n            },\n            // Simple shapes:\n            circle: ['shapes'],\n            ellipse: ['shapes'],\n            verticalLine: [],\n            label: ['labelOptions'],\n            // Measure\n            measure: ['background', 'crosshairY', 'crosshairX'],\n            // Others:\n            fibonacci: [],\n            tunnel: ['background', 'line', 'height'],\n            pitchfork: ['innerBackground', 'outerBackground'],\n            rect: ['shapes'],\n            // Crooked lines, elliots, arrows etc:\n            crookedLine: [],\n            basicAnnotation: ['shapes', 'labelOptions']\n        };\n        // Define non editable fields per annotation, for example Rectangle inherits\n        // options from Measure, but crosshairs are not available\n        NavigationBindings.annotationsNonEditable = {\n            rectangle: ['crosshairX', 'crosshairY', 'labelOptions'],\n            ellipse: ['labelOptions'],\n            circle: ['labelOptions']\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * A config object for navigation bindings in annotations.\n         *\n         * @interface Highcharts.NavigationBindingsOptionsObject\n         */ /**\n        * ClassName of the element for a binding.\n        * @name Highcharts.NavigationBindingsOptionsObject#className\n        * @type {string|undefined}\n        */ /**\n        * Last event to be fired after last step event.\n        * @name Highcharts.NavigationBindingsOptionsObject#end\n        * @type {Function|undefined}\n        */ /**\n        * Initial event, fired on a button click.\n        * @name Highcharts.NavigationBindingsOptionsObject#init\n        * @type {Function|undefined}\n        */ /**\n        * Event fired on first click on a chart.\n        * @name Highcharts.NavigationBindingsOptionsObject#start\n        * @type {Function|undefined}\n        */ /**\n        * Last event to be fired after last step event. Array of step events to be\n        * called sequentially after each user click.\n        * @name Highcharts.NavigationBindingsOptionsObject#steps\n        * @type {Array<Function>|undefined}\n        */\n        (''); // keeps doclets above in JS file\n\n        return NavigationBindings;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolsUtilities.js', [_modules['Core/Defaults.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (D, NBU, Series, U) {\n        /**\n         *\n         *  Events generator for Stock tools\n         *\n         *  (c) 2009-2021 PaweÅ‚ Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { getOptions } = D;\n        const { getAssignedAxis, getFieldType } = NBU;\n        const { defined, fireEvent, isNumber, uniqueKey } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @private\n         */\n        const indicatorsWithAxes = [\n            'apo',\n            'ad',\n            'aroon',\n            'aroonoscillator',\n            'atr',\n            'ao',\n            'cci',\n            'chaikin',\n            'cmf',\n            'cmo',\n            'disparityindex',\n            'dmi',\n            'dpo',\n            'linearRegressionAngle',\n            'linearRegressionIntercept',\n            'linearRegressionSlope',\n            'klinger',\n            'macd',\n            'mfi',\n            'momentum',\n            'natr',\n            'obv',\n            'ppo',\n            'roc',\n            'rsi',\n            'slowstochastic',\n            'stochastic',\n            'trix',\n            'williamsr'\n        ];\n        /**\n         * @private\n         */\n        const indicatorsWithVolume = [\n            'ad',\n            'cmf',\n            'klinger',\n            'mfi',\n            'obv',\n            'vbp',\n            'vwap'\n        ];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Generates function which will add a flag series using modal in GUI.\n         * Method fires an event \"showPopup\" with config:\n         * `{type, options, callback}`.\n         *\n         * Example: NavigationBindings.utils.addFlagFromForm('url(...)') - will\n         * generate function that shows modal in GUI.\n         *\n         * @private\n         * @function bindingsUtils.addFlagFromForm\n         *\n         * @param {Highcharts.FlagsShapeValue} type\n         *        Type of flag series, e.g. \"squarepin\"\n         *\n         * @return {Function}\n         *         Callback to be used in `start` callback\n         */\n        function addFlagFromForm(type) {\n            return function (e) {\n                const navigation = this, chart = navigation.chart, toolbar = chart.stockTools, point = attractToPoint(e, chart);\n                if (!point) {\n                    return;\n                }\n                const pointConfig = {\n                    x: point.x,\n                    y: point.y\n                };\n                const seriesOptions = {\n                    type: 'flags',\n                    onSeries: point.series.id,\n                    shape: type,\n                    data: [pointConfig],\n                    xAxis: point.xAxis,\n                    yAxis: point.yAxis,\n                    point: {\n                        events: {\n                            click: function () {\n                                const point = this, options = point.options;\n                                fireEvent(navigation, 'showPopup', {\n                                    point: point,\n                                    formType: 'annotation-toolbar',\n                                    options: {\n                                        langKey: 'flags',\n                                        type: 'flags',\n                                        title: [\n                                            options.title,\n                                            getFieldType('title', options.title)\n                                        ],\n                                        name: [\n                                            options.name,\n                                            getFieldType('name', options.name)\n                                        ]\n                                    },\n                                    onSubmit: function (updated) {\n                                        if (updated.actionType === 'remove') {\n                                            point.remove();\n                                        }\n                                        else {\n                                            point.update(navigation.fieldsToOptions(updated.fields, {}));\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    }\n                };\n                if (!toolbar || !toolbar.guiEnabled) {\n                    chart.addSeries(seriesOptions);\n                }\n                fireEvent(navigation, 'showPopup', {\n                    formType: 'flag',\n                    // Enabled options:\n                    options: {\n                        langKey: 'flags',\n                        type: 'flags',\n                        title: ['A', getFieldType('label', 'A')],\n                        name: ['Flag A', getFieldType('label', 'Flag A')]\n                    },\n                    // Callback on submit:\n                    onSubmit: function (data) {\n                        navigation.fieldsToOptions(data.fields, seriesOptions.data[0]);\n                        chart.addSeries(seriesOptions);\n                    }\n                });\n            };\n        }\n        /**\n         * @private\n         * @todo\n         * Consider using getHoverData(), but always kdTree (columns?)\n         */\n        function attractToPoint(e, chart) {\n            const coords = chart.pointer.getCoordinates(e);\n            let coordsX, coordsY, distX = Number.MAX_VALUE, closestPoint;\n            if (chart.navigationBindings) {\n                coordsX = getAssignedAxis(coords.xAxis);\n                coordsY = getAssignedAxis(coords.yAxis);\n            }\n            // Exit if clicked out of axes area.\n            if (!coordsX || !coordsY) {\n                return;\n            }\n            const x = coordsX.value;\n            const y = coordsY.value;\n            // Search by 'x' but only in yAxis' series.\n            coordsY.axis.series.forEach((series) => {\n                if (series.points) {\n                    series.points.forEach((point) => {\n                        if (point && distX > Math.abs(point.x - x)) {\n                            distX = Math.abs(point.x - x);\n                            closestPoint = point;\n                        }\n                    });\n                }\n            });\n            if (closestPoint && closestPoint.x && closestPoint.y) {\n                return {\n                    x: closestPoint.x,\n                    y: closestPoint.y,\n                    below: y < closestPoint.y,\n                    series: closestPoint.series,\n                    xAxis: closestPoint.series.xAxis.index || 0,\n                    yAxis: closestPoint.series.yAxis.index || 0\n                };\n            }\n        }\n        /**\n         * Shorthand to check if given yAxis comes from navigator.\n         *\n         * @private\n         * @function bindingsUtils.isNotNavigatorYAxis\n         *\n         * @param {Highcharts.Axis} axis\n         * Axis to check.\n         *\n         * @return {boolean}\n         * True, if axis comes from navigator.\n         */\n        function isNotNavigatorYAxis(axis) {\n            return axis.userOptions.className !== 'highcharts-navigator-yaxis';\n        }\n        /**\n         * Check if any of the price indicators are enabled.\n         * @private\n         * @function bindingsUtils.isLastPriceEnabled\n         *\n         * @param {Array} series\n         *        Array of series.\n         *\n         * @return {boolean}\n         *         Tells which indicator is enabled.\n         */\n        function isPriceIndicatorEnabled(series) {\n            return series.some((s) => s.lastVisiblePrice || s.lastPrice);\n        }\n        /**\n         * @private\n         */\n        function manageIndicators(data) {\n            const chart = this.chart, seriesConfig = {\n                linkedTo: data.linkedTo,\n                type: data.type\n            };\n            let yAxis, parentSeries, defaultOptions, series;\n            if (data.actionType === 'edit') {\n                this.fieldsToOptions(data.fields, seriesConfig);\n                series = chart.get(data.seriesId);\n                if (series) {\n                    series.update(seriesConfig, false);\n                }\n            }\n            else if (data.actionType === 'remove') {\n                series = chart.get(data.seriesId);\n                if (series) {\n                    yAxis = series.yAxis;\n                    if (series.linkedSeries) {\n                        series.linkedSeries.forEach((linkedSeries) => {\n                            linkedSeries.remove(false);\n                        });\n                    }\n                    series.remove(false);\n                    if (indicatorsWithAxes.indexOf(series.type) >= 0) {\n                        const removedYAxisProps = {\n                            height: yAxis.options.height,\n                            top: yAxis.options.top\n                        };\n                        yAxis.remove(false);\n                        this.resizeYAxes(removedYAxisProps);\n                    }\n                }\n            }\n            else {\n                seriesConfig.id = uniqueKey();\n                this.fieldsToOptions(data.fields, seriesConfig);\n                parentSeries = chart.get(seriesConfig.linkedTo);\n                defaultOptions = getOptions().plotOptions;\n                // Make sure that indicator uses the SUM approx if SUM approx is used\n                // by parent series (#13950).\n                if (typeof parentSeries !== 'undefined' &&\n                    parentSeries instanceof Series &&\n                    parentSeries.getDGApproximation() === 'sum' &&\n                    // If indicator has defined approx type, use it (e.g. \"ranges\")\n                    !defined(defaultOptions && defaultOptions[seriesConfig.type] &&\n                        defaultOptions.dataGrouping &&\n                        defaultOptions.dataGrouping.approximation)) {\n                    seriesConfig.dataGrouping = {\n                        approximation: 'sum'\n                    };\n                }\n                if (indicatorsWithAxes.indexOf(data.type) >= 0) {\n                    yAxis = chart.addAxis({\n                        id: uniqueKey(),\n                        offset: 0,\n                        opposite: true,\n                        title: {\n                            text: ''\n                        },\n                        tickPixelInterval: 40,\n                        showLastLabel: false,\n                        labels: {\n                            align: 'left',\n                            y: -2\n                        }\n                    }, false, false);\n                    seriesConfig.yAxis = yAxis.options.id;\n                    this.resizeYAxes();\n                }\n                else {\n                    seriesConfig.yAxis = chart.get(data.linkedTo).options.yAxis;\n                }\n                if (indicatorsWithVolume.indexOf(data.type) >= 0) {\n                    seriesConfig.params.volumeSeriesID = chart.series.filter(function (series) {\n                        return series.options.type === 'column';\n                    })[0].options.id;\n                }\n                chart.addSeries(seriesConfig, false);\n            }\n            fireEvent(this, 'deselectButton', {\n                button: this.selectedButtonElement\n            });\n            chart.redraw();\n        }\n        /**\n         * Update height for an annotation. Height is calculated as a difference\n         * between last point in `typeOptions` and current position. It's a value,\n         * not pixels height.\n         *\n         * @private\n         * @function bindingsUtils.updateHeight\n         *\n         * @param {Highcharts.PointerEventObject} e\n         *        normalized browser event\n         *\n         * @param {Highcharts.Annotation} annotation\n         *        Annotation to be updated\n         */\n        function updateHeight(e, annotation) {\n            const options = annotation.options.typeOptions, yAxis = isNumber(options.yAxis) && this.chart.yAxis[options.yAxis];\n            if (yAxis && options.points) {\n                annotation.update({\n                    typeOptions: {\n                        height: yAxis.toValue(e[yAxis.horiz ? 'chartX' : 'chartY']) -\n                            (options.points[1].y || 0)\n                    }\n                });\n            }\n        }\n        /**\n         * Update each point after specified index, most of the annotations use\n         * this. For example crooked line: logic behind updating each point is the\n         * same, only index changes when adding an annotation.\n         *\n         * Example: NavigationBindings.utils.updateNthPoint(1) - will generate\n         * function that updates all consecutive points except point with index=0.\n         *\n         * @private\n         * @function bindingsUtils.updateNthPoint\n         *\n         * @param {number} startIndex\n         *        Index from each point should udpated\n         *\n         * @return {Function}\n         *         Callback to be used in steps array\n         */\n        function updateNthPoint(startIndex) {\n            return function (e, annotation) {\n                const options = annotation.options.typeOptions, xAxis = isNumber(options.xAxis) && this.chart.xAxis[options.xAxis], yAxis = isNumber(options.yAxis) && this.chart.yAxis[options.yAxis];\n                if (xAxis && yAxis) {\n                    options.points.forEach((point, index) => {\n                        if (index >= startIndex) {\n                            point.x = xAxis.toValue(e[xAxis.horiz ? 'chartX' : 'chartY']);\n                            point.y = yAxis.toValue(e[yAxis.horiz ? 'chartX' : 'chartY']);\n                        }\n                    });\n                    annotation.update({\n                        typeOptions: {\n                            points: options.points\n                        }\n                    });\n                }\n            };\n        }\n        /**\n         * Update size of background (rect) in some annotations: Measure, Simple\n         * Rect.\n         *\n         * @private\n         * @function Highcharts.NavigationBindingsUtilsObject.updateRectSize\n         *\n         * @param {Highcharts.PointerEventObject} event\n         * Normalized browser event\n         *\n         * @param {Highcharts.Annotation} annotation\n         * Annotation to be updated\n         */\n        function updateRectSize(event, annotation) {\n            const chart = annotation.chart, options = annotation.options.typeOptions, xAxis = isNumber(options.xAxis) && chart.xAxis[options.xAxis], yAxis = isNumber(options.yAxis) && chart.yAxis[options.yAxis];\n            if (xAxis && yAxis) {\n                const x = xAxis.toValue(event[xAxis.horiz ? 'chartX' : 'chartY']), y = yAxis.toValue(event[yAxis.horiz ? 'chartX' : 'chartY']), width = x - options.point.x, height = options.point.y - y;\n                annotation.update({\n                    typeOptions: {\n                        background: {\n                            width: chart.inverted ? height : width,\n                            height: chart.inverted ? width : height\n                        }\n                    }\n                });\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const StockToolsUtilities = {\n            indicatorsWithAxes,\n            indicatorsWithVolume,\n            addFlagFromForm,\n            attractToPoint,\n            getAssignedAxis,\n            isNotNavigatorYAxis,\n            isPriceIndicatorEnabled,\n            manageIndicators,\n            updateHeight,\n            updateNthPoint,\n            updateRectSize\n        };\n\n        return StockToolsUtilities;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolsBindings.js', [_modules['Core/Globals.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Stock/StockTools/StockToolsUtilities.js'], _modules['Core/Utilities.js']], function (H, NBU, STU, U) {\n        /**\n         *\n         *  Events generator for Stock tools\n         *\n         *  (c) 2009-2021 PaweÅ‚ Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { getAssignedAxis } = NBU;\n        const { addFlagFromForm, attractToPoint, isNotNavigatorYAxis, isPriceIndicatorEnabled, manageIndicators, updateHeight, updateNthPoint, updateRectSize } = STU;\n        const { fireEvent, merge } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @sample {highstock} stock/stocktools/custom-stock-tools-bindings\n         *         Custom stock tools bindings\n         *\n         * @type         {Highcharts.Dictionary<Highcharts.NavigationBindingsOptionsObject>}\n         * @since        7.0.0\n         * @optionparent navigation.bindings\n         */\n        const StockToolsBindings = {\n            // Line type annotations:\n            /**\n             * A segment annotation bindings. Includes `start` and one event in `steps`\n             * array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-segment\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            segment: {\n                /** @ignore-option */\n                className: 'highcharts-segment',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'segment',\n                        type: 'crookedLine',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.segment.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A segment with an arrow annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-arrow-segment\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            arrowSegment: {\n                /** @ignore-option */\n                className: 'highcharts-arrow-segment',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'arrowSegment',\n                        type: 'crookedLine',\n                        typeOptions: {\n                            line: {\n                                markerEnd: 'arrow'\n                            },\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.arrowSegment.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A ray annotation bindings. Includes `start` and one event in `steps`\n             * array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-ray\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            ray: {\n                /** @ignore-option */\n                className: 'highcharts-ray',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'ray',\n                        type: 'infinityLine',\n                        typeOptions: {\n                            type: 'ray',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.ray.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A ray with an arrow annotation bindings. Includes `start` and one event\n             * in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-arrow-ray\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            arrowRay: {\n                /** @ignore-option */\n                className: 'highcharts-arrow-ray',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'arrowRay',\n                        type: 'infinityLine',\n                        typeOptions: {\n                            type: 'ray',\n                            line: {\n                                markerEnd: 'arrow'\n                            },\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.arrowRay.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A line annotation. Includes `start` and one event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-infinity-line\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            infinityLine: {\n                /** @ignore-option */\n                className: 'highcharts-infinity-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'infinityLine',\n                        type: 'infinityLine',\n                        typeOptions: {\n                            type: 'line',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.infinityLine.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A line with arrow annotation. Includes `start` and one event in `steps`\n             * array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-arrow-infinity-line\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            arrowInfinityLine: {\n                /** @ignore-option */\n                className: 'highcharts-arrow-infinity-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'arrowInfinityLine',\n                        type: 'infinityLine',\n                        typeOptions: {\n                            type: 'line',\n                            line: {\n                                markerEnd: 'arrow'\n                            },\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.arrowInfinityLine\n                        .annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            /**\n             * A horizontal line annotation. Includes `start` event.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-horizontal-line\", \"start\": function() {}, \"annotationsOptions\": {}}\n             */\n            horizontalLine: {\n                /** @ignore-option */\n                className: 'highcharts-horizontal-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'horizontalLine',\n                        type: 'infinityLine',\n                        draggable: 'y',\n                        typeOptions: {\n                            type: 'horizontalLine',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings\n                        .horizontalLine.annotationsOptions);\n                    this.chart.addAnnotation(options);\n                }\n            },\n            /**\n             * A vertical line annotation. Includes `start` event.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-vertical-line\", \"start\": function() {}, \"annotationsOptions\": {}}\n             */\n            verticalLine: {\n                /** @ignore-option */\n                className: 'highcharts-vertical-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'verticalLine',\n                        type: 'infinityLine',\n                        draggable: 'x',\n                        typeOptions: {\n                            type: 'verticalLine',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.verticalLine.annotationsOptions);\n                    this.chart.addAnnotation(options);\n                }\n            },\n            /**\n             * Crooked line (three points) annotation bindings. Includes `start` and two\n             * events in `steps` (for second and third points in crooked line) array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-crooked3\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            // Crooked Line type annotations:\n            crooked3: {\n                /** @ignore-option */\n                className: 'highcharts-crooked3',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'crooked3',\n                        type: 'crookedLine',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x, y },\n                                { x, y },\n                                { x, y }\n                            ]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.crooked3.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2)\n                ]\n            },\n            /**\n             * Crooked line (five points) annotation bindings. Includes `start` and four\n             * events in `steps` (for all consequent points in crooked line) array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-crooked5\", \"start\": function() {}, \"steps\": [function() {}, function() {}, function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            crooked5: {\n                /** @ignore-option */\n                className: 'highcharts-crooked5',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'crooked5',\n                        type: 'crookedLine',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x, y },\n                                { x, y },\n                                { x, y },\n                                { x, y },\n                                { x, y }\n                            ]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.crooked5.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2),\n                    updateNthPoint(3),\n                    updateNthPoint(4)\n                ]\n            },\n            /**\n             * Elliott wave (three points) annotation bindings. Includes `start` and two\n             * events in `steps` (for second and third points) array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-elliott3\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            elliott3: {\n                /** @ignore-option */\n                className: 'highcharts-elliott3',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'elliott3',\n                        type: 'elliottWave',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x, y },\n                                { x, y },\n                                { x, y },\n                                { x, y }\n                            ]\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.elliott3.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2),\n                    updateNthPoint(3)\n                ]\n            },\n            /**\n             * Elliott wave (five points) annotation bindings. Includes `start` and four\n             * event in `steps` (for all consequent points in Elliott wave) array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-elliott3\", \"start\": function() {}, \"steps\": [function() {}, function() {}, function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            elliott5: {\n                /** @ignore-option */\n                className: 'highcharts-elliott5',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'elliott5',\n                        type: 'elliottWave',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x, y },\n                                { x, y },\n                                { x, y },\n                                { x, y },\n                                { x, y },\n                                { x, y }\n                            ]\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.elliott5.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2),\n                    updateNthPoint(3),\n                    updateNthPoint(4),\n                    updateNthPoint(5)\n                ]\n            },\n            /**\n             * A measure (x-dimension) annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-measure-x\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            measureX: {\n                /** @ignore-option */\n                className: 'highcharts-measure-x',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'measure',\n                        type: 'measure',\n                        typeOptions: {\n                            selectType: 'x',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            point: { x, y },\n                            crosshairX: {\n                                strokeWidth: 1,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            crosshairY: {\n                                enabled: false,\n                                strokeWidth: 0,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            background: {\n                                width: 0,\n                                height: 0,\n                                strokeWidth: 0,\n                                stroke: \"#ffffff\" /* Palette.backgroundColor */\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.measureX.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateRectSize\n                ]\n            },\n            /**\n             * A measure (y-dimension) annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-measure-y\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            measureY: {\n                /** @ignore-option */\n                className: 'highcharts-measure-y',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'measure',\n                        type: 'measure',\n                        typeOptions: {\n                            selectType: 'y',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            point: { x, y },\n                            crosshairX: {\n                                enabled: false,\n                                strokeWidth: 0,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            crosshairY: {\n                                strokeWidth: 1,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            background: {\n                                width: 0,\n                                height: 0,\n                                strokeWidth: 0,\n                                stroke: \"#ffffff\" /* Palette.backgroundColor */\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.measureY.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateRectSize\n                ]\n            },\n            /**\n             * A measure (xy-dimension) annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-measure-xy\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            measureXY: {\n                /** @ignore-option */\n                className: 'highcharts-measure-xy',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'measure',\n                        type: 'measure',\n                        typeOptions: {\n                            selectType: 'xy',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            point: { x, y },\n                            background: {\n                                width: 0,\n                                height: 0,\n                                strokeWidth: 10\n                            },\n                            crosshairX: {\n                                strokeWidth: 1,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            },\n                            crosshairY: {\n                                strokeWidth: 1,\n                                stroke: \"#000000\" /* Palette.neutralColor100 */\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.measureXY.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateRectSize\n                ]\n            },\n            // Advanced type annotations:\n            /**\n             * A fibonacci annotation bindings. Includes `start` and two events in\n             * `steps` array (updates second point, then height).\n             *\n             *   @sample {highstock} stock/stocktools/custom-stock-tools-bindings\n             *     Custom stock tools bindings\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-fibonacci\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": { \"typeOptions\": { \"reversed\": false }}}\n             */\n            fibonacci: {\n                className: 'highcharts-fibonacci',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'fibonacci',\n                        type: 'fibonacci',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x, y },\n                                { x, y }\n                            ]\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.fibonacci.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateHeight\n                ]\n            },\n            /**\n             * A parallel channel (tunnel) annotation bindings. Includes `start` and\n             * two events in `steps` array (updates second point, then height).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-parallel-channel\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            parallelChannel: {\n                /** @ignore-option */\n                className: 'highcharts-parallel-channel',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'parallelChannel',\n                        type: 'tunnel',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [\n                                { x, y },\n                                { x, y }\n                            ]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.parallelChannel\n                        .annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateHeight\n                ]\n            },\n            /**\n             * An Andrew's pitchfork annotation bindings. Includes `start` and two\n             * events in `steps` array (sets second and third control points).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-pitchfork\", \"start\": function() {}, \"steps\": [function() {}, function() {}], \"annotationsOptions\": {}}\n             */\n            pitchfork: {\n                /** @ignore-option */\n                className: 'highcharts-pitchfork',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const x = coordsX.value, y = coordsY.value, navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'pitchfork',\n                        type: 'pitchfork',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value,\n                                    controlPoint: {\n                                        style: {\n                                            fill: \"#f21313\" /* Palette.negativeColor */\n                                        }\n                                    }\n                                },\n                                { x, y },\n                                { x, y }],\n                            innerBackground: {\n                                fill: 'rgba(100, 170, 255, 0.8)'\n                            }\n                        },\n                        shapeOptions: {\n                            strokeWidth: 2\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.pitchfork.annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                steps: [\n                    updateNthPoint(1),\n                    updateNthPoint(2)\n                ]\n            },\n            // Labels with arrow and auto increments\n            /**\n             * A vertical counter annotation bindings. Includes `start` event. On click,\n             * finds the closest point and marks it with a numeric annotation -\n             * incrementing counter on each add.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-vertical-counter\", \"start\": function() {}, \"annotationsOptions\": {}}\n             */\n            verticalCounter: {\n                /** @ignore-option */\n                className: 'highcharts-vertical-counter',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const closestPoint = attractToPoint(e, this.chart);\n                    // Exit if clicked out of axes area\n                    if (!closestPoint) {\n                        return;\n                    }\n                    this.verticalCounter = this.verticalCounter || 0;\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'verticalCounter',\n                        type: 'verticalLine',\n                        typeOptions: {\n                            point: {\n                                x: closestPoint.x,\n                                y: closestPoint.y,\n                                xAxis: closestPoint.xAxis,\n                                yAxis: closestPoint.yAxis\n                            },\n                            label: {\n                                offset: closestPoint.below ? 40 : -40,\n                                text: this.verticalCounter.toString()\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */,\n                                fontSize: '0.7em'\n                            }\n                        },\n                        shapeOptions: {\n                            stroke: 'rgba(0, 0, 0, 0.75)',\n                            strokeWidth: 1\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings\n                        .verticalCounter.annotationsOptions), annotation = this.chart.addAnnotation(options);\n                    this.verticalCounter++;\n                    annotation.options.events.click.call(annotation, {});\n                }\n            },\n            /**\n             * A time cycles annotation bindings. Includes `start` event and 1 `step`\n             * event. first click marks the beginning of the circle, and the second one\n             * sets its diameter.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-time-cycles\", \"start\": function() {}, \"steps\": [function (){}] \"annotationsOptions\": {}}\n             */\n            timeCycles: {\n                className: 'highcharts-time-cycles',\n                start: function (e) {\n                    const closestPoint = attractToPoint(e, this.chart);\n                    // Exit if clicked out of axes area\n                    if (!closestPoint) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'timeCycles',\n                        type: 'timeCycles',\n                        typeOptions: {\n                            xAxis: closestPoint.xAxis,\n                            yAxis: closestPoint.yAxis,\n                            points: [{\n                                    x: closestPoint.x\n                                }, {\n                                    x: closestPoint.x\n                                }],\n                            line: {\n                                stroke: 'rgba(0, 0, 0, 0.75)',\n                                fill: 'transparent',\n                                strokeWidth: 2\n                            }\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.timeCycles.annotationsOptions), annotation = this.chart.addAnnotation(options);\n                    annotation.options.events.click.call(annotation, {});\n                    return annotation;\n                },\n                steps: [\n                    updateNthPoint(1)\n                ]\n            },\n            verticalLabel: {\n                /** @ignore-option */\n                className: 'highcharts-vertical-label',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const closestPoint = attractToPoint(e, this.chart);\n                    // Exit if clicked out of axes area\n                    if (!closestPoint) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'verticalLabel',\n                        type: 'verticalLine',\n                        typeOptions: {\n                            point: {\n                                x: closestPoint.x,\n                                y: closestPoint.y,\n                                xAxis: closestPoint.xAxis,\n                                yAxis: closestPoint.yAxis\n                            },\n                            label: {\n                                offset: closestPoint.below ? 40 : -40\n                            }\n                        },\n                        labelOptions: {\n                            style: {\n                                color: \"#666666\" /* Palette.neutralColor60 */,\n                                fontSize: '0.7em'\n                            }\n                        },\n                        shapeOptions: {\n                            stroke: 'rgba(0, 0, 0, 0.75)',\n                            strokeWidth: 1\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings\n                        .verticalLabel.annotationsOptions), annotation = this.chart.addAnnotation(options);\n                    annotation.options.events.click.call(annotation, {});\n                }\n            },\n            /**\n             * A vertical arrow annotation bindings. Includes `start` event. On click,\n             * finds the closest point and marks it with an arrow.\n             * `#06b535` is the color of the arrow when\n             * pointing from above and `#f21313`\n             * when pointing from below the point.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-vertical-arrow\", \"start\": function() {}, \"annotationsOptions\": {}}\n             */\n            verticalArrow: {\n                /** @ignore-option */\n                className: 'highcharts-vertical-arrow',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const closestPoint = attractToPoint(e, this.chart);\n                    // Exit if clicked out of axes area\n                    if (!closestPoint) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        langKey: 'verticalArrow',\n                        type: 'verticalLine',\n                        typeOptions: {\n                            point: {\n                                x: closestPoint.x,\n                                y: closestPoint.y,\n                                xAxis: closestPoint.xAxis,\n                                yAxis: closestPoint.yAxis\n                            },\n                            label: {\n                                offset: closestPoint.below ? 40 : -40,\n                                format: ' '\n                            },\n                            connector: {\n                                fill: 'none',\n                                stroke: closestPoint.below ?\n                                    \"#f21313\" /* Palette.negativeColor */ :\n                                    \"#06b535\" /* Palette.positiveColor */\n                            }\n                        },\n                        shapeOptions: {\n                            stroke: 'rgba(0, 0, 0, 0.75)',\n                            strokeWidth: 1\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings\n                        .verticalArrow.annotationsOptions), annotation = this.chart.addAnnotation(options);\n                    annotation.options.events.click.call(annotation, {});\n                }\n            },\n            /**\n             * The Fibonacci Time Zones annotation bindings. Includes `start` and one\n             * event in `steps` array.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-fibonacci-time-zones\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n             */\n            fibonacciTimeZones: {\n                /** @ignore-option */\n                className: 'highcharts-fibonacci-time-zones',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                start: function (e) {\n                    const coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                    // Exit if clicked out of axes area\n                    if (!coordsX || !coordsY) {\n                        return;\n                    }\n                    const navigation = this.chart.options.navigation, options = merge({\n                        type: 'fibonacciTimeZones',\n                        langKey: 'fibonacciTimeZones',\n                        typeOptions: {\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value\n                                }]\n                        }\n                    }, navigation.annotationsOptions, navigation.bindings.fibonacciTimeZones\n                        .annotationsOptions);\n                    return this.chart.addAnnotation(options);\n                },\n                /** @ignore-option */\n                // eslint-disable-next-line valid-jsdoc\n                steps: [\n                    function (e, annotation) {\n                        const mockPointOpts = annotation.options.typeOptions.points, x = mockPointOpts && mockPointOpts[0].x, coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                        annotation.update({\n                            typeOptions: {\n                                xAxis: coordsX.axis.index,\n                                yAxis: coordsY.axis.index,\n                                points: [{\n                                        x: x\n                                    }, {\n                                        x: coordsX.value\n                                    }]\n                            }\n                        });\n                    }\n                ]\n            },\n            // Flag types:\n            /**\n             * A flag series bindings. Includes `start` event. On click, finds the\n             * closest point and marks it with a flag with `'circlepin'` shape.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-flag-circlepin\", \"start\": function() {}}\n             */\n            flagCirclepin: {\n                /** @ignore-option */\n                className: 'highcharts-flag-circlepin',\n                /** @ignore-option */\n                start: addFlagFromForm('circlepin')\n            },\n            /**\n             * A flag series bindings. Includes `start` event. On click, finds the\n             * closest point and marks it with a flag with `'diamondpin'` shape.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-flag-diamondpin\", \"start\": function() {}}\n             */\n            flagDiamondpin: {\n                /** @ignore-option */\n                className: 'highcharts-flag-diamondpin',\n                /** @ignore-option */\n                start: addFlagFromForm('flag')\n            },\n            /**\n             * A flag series bindings. Includes `start` event.\n             * On click, finds the closest point and marks it with a flag with\n             * `'squarepin'` shape.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-flag-squarepin\", \"start\": function() {}}\n             */\n            flagSquarepin: {\n                /** @ignore-option */\n                className: 'highcharts-flag-squarepin',\n                /** @ignore-option */\n                start: addFlagFromForm('squarepin')\n            },\n            /**\n             * A flag series bindings. Includes `start` event.\n             * On click, finds the closest point and marks it with a flag without pin\n             * shape.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-flag-simplepin\", \"start\": function() {}}\n             */\n            flagSimplepin: {\n                /** @ignore-option */\n                className: 'highcharts-flag-simplepin',\n                /** @ignore-option */\n                start: addFlagFromForm('nopin')\n            },\n            // Other tools:\n            /**\n             * Enables zooming in xAxis on a chart. Includes `start` event which\n             * changes [chart.zoomType](#chart.zoomType).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-zoom-x\", \"init\": function() {}}\n             */\n            zoomX: {\n                /** @ignore-option */\n                className: 'highcharts-zoom-x',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.update({\n                        chart: {\n                            zooming: {\n                                type: 'x'\n                            }\n                        }\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Enables zooming in yAxis on a chart. Includes `start` event which\n             * changes [chart.zoomType](#chart.zoomType).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-zoom-y\", \"init\": function() {}}\n             */\n            zoomY: {\n                /** @ignore-option */\n                className: 'highcharts-zoom-y',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.update({\n                        chart: {\n                            zooming: {\n                                type: 'y'\n                            }\n                        }\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Enables zooming in xAxis and yAxis on a chart. Includes `start` event\n             * which changes [chart.zoomType](#chart.zoomType).\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-zoom-xy\", \"init\": function() {}}\n             */\n            zoomXY: {\n                /** @ignore-option */\n                className: 'highcharts-zoom-xy',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.update({\n                        chart: {\n                            zooming: {\n                                type: 'xy'\n                            }\n                        }\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Changes main series to `'line'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-line\", \"init\": function() {}}\n             */\n            seriesTypeLine: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-line',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'line',\n                        useOhlcData: true\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Changes main series to `'ohlc'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-ohlc\", \"init\": function() {}}\n             */\n            seriesTypeOhlc: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-ohlc',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'ohlc'\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Changes main series to `'candlestick'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-candlestick\", \"init\": function() {}}\n             */\n            seriesTypeCandlestick: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-candlestick',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'candlestick'\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Changes main series to `'heikinashi'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-heikinashi\", \"init\": function() {}}\n             */\n            seriesTypeHeikinAshi: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-heikinashi',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'heikinashi'\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Change main series to `'hlc'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-hlc\", \"init\": function () {}}\n             */\n            seriesTypeHLC: {\n                className: 'highcharts-series-type-hlc',\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'hlc',\n                        useOhlcData: true\n                    });\n                    fireEvent(this, 'deselectButton', { button });\n                }\n            },\n            /**\n             * Changes main series to `'hollowcandlestick'` type.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-series-type-hollowcandlestick\", \"init\": function() {}}\n             */\n            seriesTypeHollowCandlestick: {\n                /** @ignore-option */\n                className: 'highcharts-series-type-hollowcandlestick',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    this.chart.series[0].update({\n                        type: 'hollowcandlestick'\n                    });\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Displays chart in fullscreen.\n             *\n             * **Note**: Fullscreen is not supported on iPhone due to iOS limitations.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"noDataState\": \"normal\", \"highcharts-full-screen\", \"init\": function() {}}\n             */\n            fullScreen: {\n                /** @ignore-option */\n                className: 'highcharts-full-screen',\n                noDataState: 'normal',\n                /** @ignore-option */\n                init: function (button) {\n                    if (this.chart.fullscreen) {\n                        this.chart.fullscreen.toggle();\n                    }\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Hides/shows two price indicators:\n             * - last price in the dataset\n             * - last price in the selected range\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-current-price-indicator\", \"init\": function() {}}\n             */\n            currentPriceIndicator: {\n                /** @ignore-option */\n                className: 'highcharts-current-price-indicator',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    const chart = this.chart, series = chart.series, gui = chart.stockTools, priceIndicatorEnabled = isPriceIndicatorEnabled(chart.series);\n                    if (gui && gui.guiEnabled) {\n                        series.forEach(function (series) {\n                            series.update({\n                                lastPrice: { enabled: !priceIndicatorEnabled },\n                                lastVisiblePrice: {\n                                    enabled: !priceIndicatorEnabled,\n                                    label: { enabled: true }\n                                }\n                            }, false);\n                        });\n                        chart.redraw();\n                    }\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Indicators bindings. Includes `init` event to show a popup.\n             *\n             * Note: In order to show base series from the chart in the popup's\n             * dropdown each series requires\n             * [series.id](https://api.highcharts.com/highstock/series.line.id) to be\n             * defined.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-indicators\", \"init\": function() {}}\n             */\n            indicators: {\n                /** @ignore-option */\n                className: 'highcharts-indicators',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function () {\n                    const navigation = this;\n                    fireEvent(navigation, 'showPopup', {\n                        formType: 'indicators',\n                        options: {},\n                        // Callback on submit:\n                        onSubmit: function (data) {\n                            manageIndicators.call(navigation, data);\n                        }\n                    });\n                }\n            },\n            /**\n             * Hides/shows all annotations on a chart.\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-toggle-annotations\", \"init\": function() {}}\n             */\n            toggleAnnotations: {\n                /** @ignore-option */\n                className: 'highcharts-toggle-annotations',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    const chart = this.chart, gui = chart.stockTools, iconsURL = gui.getIconsURL();\n                    this.toggledAnnotations = !this.toggledAnnotations;\n                    (chart.annotations || []).forEach(function (annotation) {\n                        annotation.setVisibility(!this.toggledAnnotations);\n                    }, this);\n                    if (gui && gui.guiEnabled) {\n                        if (this.toggledAnnotations) {\n                            button.firstChild.style['background-image'] =\n                                'url(\"' + iconsURL +\n                                    'annotations-hidden.svg\")';\n                        }\n                        else {\n                            button.firstChild.style['background-image'] =\n                                'url(\"' + iconsURL +\n                                    'annotations-visible.svg\")';\n                        }\n                    }\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            },\n            /**\n             * Save a chart in localStorage under `highcharts-chart` key.\n             * Stored items:\n             * - annotations\n             * - indicators (with yAxes)\n             * - flags\n             *\n             * @type    {Highcharts.NavigationBindingsOptionsObject}\n             * @product highstock\n             * @default {\"className\": \"highcharts-save-chart\", \"noDataState\": \"normal\", \"init\": function() {}}\n             */\n            saveChart: {\n                /** @ignore-option */\n                className: 'highcharts-save-chart',\n                noDataState: 'normal',\n                // eslint-disable-next-line valid-jsdoc\n                /** @ignore-option */\n                init: function (button) {\n                    const navigation = this, chart = navigation.chart, annotations = [], indicators = [], flags = [], yAxes = [];\n                    chart.annotations.forEach(function (annotation, index) {\n                        annotations[index] = annotation.userOptions;\n                    });\n                    chart.series.forEach(function (series) {\n                        if (series.is('sma')) {\n                            indicators.push(series.userOptions);\n                        }\n                        else if (series.type === 'flags') {\n                            flags.push(series.userOptions);\n                        }\n                    });\n                    chart.yAxis.forEach(function (yAxis) {\n                        if (isNotNavigatorYAxis(yAxis)) {\n                            yAxes.push(yAxis.options);\n                        }\n                    });\n                    H.win.localStorage.setItem('highcharts-chart', JSON.stringify({\n                        annotations: annotations,\n                        indicators: indicators,\n                        flags: flags,\n                        yAxes: yAxes\n                    }));\n                    fireEvent(this, 'deselectButton', { button: button });\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return StockToolsBindings;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolsDefaults.js', [], function () {\n        /* *\n         *\n         *  GUI generator for Stock tools\n         *\n         *  (c) 2009-2021 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @optionparent lang\n         */\n        const lang = {\n            /**\n             * Configure the stockTools GUI titles(hints) in the chart. Requires\n             * the `stock-tools.js` module to be loaded.\n             *\n             * @product highstock\n             * @since   7.0.0\n             */\n            stockTools: {\n                gui: {\n                    // Main buttons:\n                    simpleShapes: 'Simple shapes',\n                    lines: 'Lines',\n                    crookedLines: 'Crooked lines',\n                    measure: 'Measure',\n                    advanced: 'Advanced',\n                    toggleAnnotations: 'Toggle annotations',\n                    verticalLabels: 'Vertical labels',\n                    flags: 'Flags',\n                    zoomChange: 'Zoom change',\n                    typeChange: 'Type change',\n                    saveChart: 'Save chart',\n                    indicators: 'Indicators',\n                    currentPriceIndicator: 'Current Price Indicators',\n                    // Other features:\n                    zoomX: 'Zoom X',\n                    zoomY: 'Zoom Y',\n                    zoomXY: 'Zooom XY',\n                    fullScreen: 'Fullscreen',\n                    typeOHLC: 'OHLC',\n                    typeLine: 'Line',\n                    typeCandlestick: 'Candlestick',\n                    typeHLC: 'HLC',\n                    typeHollowCandlestick: 'Hollow Candlestick',\n                    typeHeikinAshi: 'Heikin Ashi',\n                    // Basic shapes:\n                    circle: 'Circle',\n                    ellipse: 'Ellipse',\n                    label: 'Label',\n                    rectangle: 'Rectangle',\n                    // Flags:\n                    flagCirclepin: 'Flag circle',\n                    flagDiamondpin: 'Flag diamond',\n                    flagSquarepin: 'Flag square',\n                    flagSimplepin: 'Flag simple',\n                    // Measures:\n                    measureXY: 'Measure XY',\n                    measureX: 'Measure X',\n                    measureY: 'Measure Y',\n                    // Segment, ray and line:\n                    segment: 'Segment',\n                    arrowSegment: 'Arrow segment',\n                    ray: 'Ray',\n                    arrowRay: 'Arrow ray',\n                    line: 'Line',\n                    arrowInfinityLine: 'Arrow line',\n                    horizontalLine: 'Horizontal line',\n                    verticalLine: 'Vertical line',\n                    infinityLine: 'Infinity line',\n                    // Crooked lines:\n                    crooked3: 'Crooked 3 line',\n                    crooked5: 'Crooked 5 line',\n                    elliott3: 'Elliott 3 line',\n                    elliott5: 'Elliott 5 line',\n                    // Counters:\n                    verticalCounter: 'Vertical counter',\n                    verticalLabel: 'Vertical label',\n                    verticalArrow: 'Vertical arrow',\n                    // Advanced:\n                    fibonacci: 'Fibonacci',\n                    fibonacciTimeZones: 'Fibonacci Time Zones',\n                    pitchfork: 'Pitchfork',\n                    parallelChannel: 'Parallel channel',\n                    timeCycles: 'Time Cycles'\n                }\n            },\n            navigation: {\n                popup: {\n                    // Annotations:\n                    circle: 'Circle',\n                    ellipse: 'Ellipse',\n                    rectangle: 'Rectangle',\n                    label: 'Label',\n                    segment: 'Segment',\n                    arrowSegment: 'Arrow segment',\n                    ray: 'Ray',\n                    arrowRay: 'Arrow ray',\n                    line: 'Line',\n                    arrowInfinityLine: 'Arrow line',\n                    horizontalLine: 'Horizontal line',\n                    verticalLine: 'Vertical line',\n                    crooked3: 'Crooked 3 line',\n                    crooked5: 'Crooked 5 line',\n                    elliott3: 'Elliott 3 line',\n                    elliott5: 'Elliott 5 line',\n                    verticalCounter: 'Vertical counter',\n                    verticalLabel: 'Vertical label',\n                    verticalArrow: 'Vertical arrow',\n                    fibonacci: 'Fibonacci',\n                    fibonacciTimeZones: 'Fibonacci Time Zones',\n                    pitchfork: 'Pitchfork',\n                    parallelChannel: 'Parallel channel',\n                    infinityLine: 'Infinity line',\n                    measure: 'Measure',\n                    measureXY: 'Measure XY',\n                    measureX: 'Measure X',\n                    measureY: 'Measure Y',\n                    timeCycles: 'Time Cycles',\n                    // Flags:\n                    flags: 'Flags',\n                    // GUI elements:\n                    addButton: 'Add',\n                    saveButton: 'Save',\n                    editButton: 'Edit',\n                    removeButton: 'Remove',\n                    series: 'Series',\n                    volume: 'Volume',\n                    connector: 'Connector',\n                    // Field names:\n                    innerBackground: 'Inner background',\n                    outerBackground: 'Outer background',\n                    crosshairX: 'Crosshair X',\n                    crosshairY: 'Crosshair Y',\n                    tunnel: 'Tunnel',\n                    background: 'Background',\n                    // Indicators' searchbox (#16019):\n                    noFilterMatch: 'No match',\n                    // Indicators' params (#15170):\n                    searchIndicators: 'Search Indicators',\n                    clearFilter: '\\u2715 clear filter',\n                    index: 'Index',\n                    period: 'Period',\n                    periods: 'Periods',\n                    standardDeviation: 'Standard deviation',\n                    periodTenkan: 'Tenkan period',\n                    periodSenkouSpanB: 'Senkou Span B period',\n                    periodATR: 'ATR period',\n                    multiplierATR: 'ATR multiplier',\n                    shortPeriod: 'Short period',\n                    longPeriod: 'Long period',\n                    signalPeriod: 'Signal period',\n                    decimals: 'Decimals',\n                    algorithm: 'Algorithm',\n                    topBand: 'Top band',\n                    bottomBand: 'Bottom band',\n                    initialAccelerationFactor: 'Initial acceleration factor',\n                    maxAccelerationFactor: 'Max acceleration factor',\n                    increment: 'Increment',\n                    multiplier: 'Multiplier',\n                    ranges: 'Ranges',\n                    highIndex: 'High index',\n                    lowIndex: 'Low index',\n                    deviation: 'Deviation',\n                    xAxisUnit: 'x-axis unit',\n                    factor: 'Factor',\n                    fastAvgPeriod: 'Fast average period',\n                    slowAvgPeriod: 'Slow average period',\n                    average: 'Average',\n                    /**\n                     * Configure the aliases for indicator names.\n                     *\n                     * @product highstock\n                     * @since 9.3.0\n                     */\n                    indicatorAliases: {\n                        // Overlays\n                        /**\n                         * Acceleration Bands alias.\n                         *\n                         * @default ['Acceleration Bands']\n                         * @type    {Array<string>}\n                         */\n                        abands: ['Acceleration Bands'],\n                        /**\n                         * Bollinger Bands alias.\n                         *\n                         * @default ['Bollinger Bands']\n                         * @type    {Array<string>}\n                         */\n                        bb: ['Bollinger Bands'],\n                        /**\n                         * Double Exponential Moving Average alias.\n                         *\n                         * @default ['Double Exponential Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        dema: ['Double Exponential Moving Average'],\n                        /**\n                         *  Exponential Moving Average alias.\n                         *\n                         * @default ['Exponential Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        ema: ['Exponential Moving Average'],\n                        /**\n                         *  Ichimoku Kinko Hyo alias.\n                         *\n                         * @default ['Ichimoku Kinko Hyo']\n                         * @type    {Array<string>}\n                         */\n                        ikh: ['Ichimoku Kinko Hyo'],\n                        /**\n                         *  Keltner Channels alias.\n                         *\n                         * @default ['Keltner Channels']\n                         * @type    {Array<string>}\n                         */\n                        keltnerchannels: ['Keltner Channels'],\n                        /**\n                         *  Linear Regression alias.\n                         *\n                         * @default ['Linear Regression']\n                         * @type    {Array<string>}\n                         */\n                        linearRegression: ['Linear Regression'],\n                        /**\n                         *  Pivot Points alias.\n                         *\n                         * @default ['Pivot Points']\n                         * @type    {Array<string>}\n                         */\n                        pivotpoints: ['Pivot Points'],\n                        /**\n                         *  Price Channel alias.\n                         *\n                         * @default ['Price Channel']\n                         * @type    {Array<string>}\n                         */\n                        pc: ['Price Channel'],\n                        /**\n                         *  Price Envelopes alias.\n                         *\n                         * @default ['Price Envelopes']\n                         * @type    {Array<string>}\n                         */\n                        priceenvelopes: ['Price Envelopes'],\n                        /**\n                         *  Parabolic SAR alias.\n                         *\n                         * @default ['Parabolic SAR']\n                         * @type    {Array<string>}\n                         */\n                        psar: ['Parabolic SAR'],\n                        /**\n                         *  Simple Moving Average alias.\n                         *\n                         * @default ['Simple Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        sma: ['Simple Moving Average'],\n                        /**\n                         *  Super Trend alias.\n                         *\n                         * @default ['Super Trend']\n                         * @type    {Array<string>}\n                         */\n                        supertrend: ['Super Trend'],\n                        /**\n                         *  Triple Exponential Moving Average alias.\n                         *\n                         * @default ['Triple Exponential Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        tema: ['Triple Exponential Moving Average'],\n                        /**\n                         *  Volume by Price alias.\n                         *\n                         * @default ['Volume by Price']\n                         * @type    {Array<string>}\n                         */\n                        vbp: ['Volume by Price'],\n                        /**\n                         *  Volume Weighted Moving Average alias.\n                         *\n                         * @default ['Volume Weighted Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        vwap: ['Volume Weighted Moving Average'],\n                        /**\n                         *  Weighted Moving Average alias.\n                         *\n                         * @default ['Weighted Moving Average']\n                         * @type    {Array<string>}\n                         */\n                        wma: ['Weighted Moving Average'],\n                        /**\n                         *  Zig Zagalias.\n                         *\n                         * @default ['Zig Zag']\n                         * @type    {Array<string>}\n                         */\n                        zigzag: ['Zig Zag'],\n                        // Oscilators\n                        /**\n                         *  Absolute price indicator alias.\n                         *\n                         * @default ['Absolute price indicator']\n                         * @type    {Array<string>}\n                         */\n                        apo: ['Absolute price indicator'],\n                        /**\n                         * Accumulation/Distribution alias.\n                         *\n                         * @default ['Accumulation/Distributionâ€™]\n                         * @type    {Array<string>}\n                         */\n                        ad: ['Accumulation/Distribution'],\n                        /**\n                         *  Aroon alias.\n                         *\n                         * @default ['Aroon']\n                         * @type    {Array<string>}\n                         */\n                        aroon: ['Aroon'],\n                        /**\n                         *  Aroon oscillator alias.\n                         *\n                         * @default ['Aroon oscillator']\n                         * @type    {Array<string>}\n                         */\n                        aroonoscillator: ['Aroon oscillator'],\n                        /**\n                         *  Average True Range alias.\n                         *\n                         * @default ['Average True Rangeâ€™]\n                         * @type    {Array<string>}\n                         */\n                        atr: ['Average True Range'],\n                        /**\n                         *  Awesome oscillator alias.\n                         *\n                         * @default ['Awesome oscillatorâ€™]\n                         * @type    {Array<string>}\n                         */\n                        ao: ['Awesome oscillator'],\n                        /**\n                         *  Commodity Channel Index alias.\n                         *\n                         * @default ['Commodity Channel Indexâ€™]\n                         * @type    {Array<string>}\n                         */\n                        cci: ['Commodity Channel Index'],\n                        /**\n                         *  Chaikin alias.\n                         *\n                         * @default ['Chaikinâ€™]\n                         * @type    {Array<string>}\n                         */\n                        chaikin: ['Chaikin'],\n                        /**\n                         *  Chaikin Money Flow alias.\n                         *\n                         * @default ['Chaikin Money Flowâ€™]\n                         * @type    {Array<string>}\n                         */\n                        cmf: ['Chaikin Money Flow'],\n                        /**\n                         *  Chande Momentum Oscillator alias.\n                         *\n                         * @default ['Chande Momentum Oscillatorâ€™]\n                         * @type    {Array<string>}\n                         */\n                        cmo: ['Chande Momentum Oscillator'],\n                        /**\n                         *  Disparity Index alias.\n                         *\n                         * @default ['Disparity Indexâ€™]\n                         * @type    {Array<string>}\n                         */\n                        disparityindex: ['Disparity Index'],\n                        /**\n                         *  Directional Movement Index alias.\n                         *\n                         * @default ['Directional Movement Indexâ€™]\n                         * @type    {Array<string>}\n                         */\n                        dmi: ['Directional Movement Index'],\n                        /**\n                         *  Detrended price oscillator alias.\n                         *\n                         * @default ['Detrended price oscillatorâ€™]\n                         * @type    {Array<string>}\n                         */\n                        dpo: ['Detrended price oscillator'],\n                        /**\n                         *  Klinger Oscillator alias.\n                         *\n                         * @default [â€˜Klinger Oscillatorâ€™]\n                         * @type    {Array<string>}\n                         */\n                        klinger: ['Klinger Oscillator'],\n                        /**\n                         *  Linear Regression Angle alias.\n                         *\n                         * @default [â€˜Linear Regression Angleâ€™]\n                         * @type    {Array<string>}\n                         */\n                        linearRegressionAngle: ['Linear Regression Angle'],\n                        /**\n                         *  Linear Regression Intercept alias.\n                         *\n                         * @default [â€˜Linear Regression Interceptâ€™]\n                         * @type    {Array<string>}\n                         */\n                        linearRegressionIntercept: ['Linear Regression Intercept'],\n                        /**\n                         *  Linear Regression Slope alias.\n                         *\n                         * @default [â€˜Linear Regression Slopeâ€™]\n                         * @type    {Array<string>}\n                         */\n                        linearRegressionSlope: ['Linear Regression Slope'],\n                        /**\n                         *  Moving Average Convergence Divergence alias.\n                         *\n                         * @default ['Moving Average Convergence Divergenceâ€™]\n                         * @type    {Array<string>}\n                         */\n                        macd: ['Moving Average Convergence Divergence'],\n                        /**\n                         *  Money Flow Index alias.\n                         *\n                         * @default ['Money Flow Indexâ€™]\n                         * @type    {Array<string>}\n                         */\n                        mfi: ['Money Flow Index'],\n                        /**\n                         *  Momentum alias.\n                         *\n                         * @default [â€˜Momentumâ€™]\n                         * @type    {Array<string>}\n                         */\n                        momentum: ['Momentum'],\n                        /**\n                         *  Normalized Average True Range alias.\n                         *\n                         * @default ['Normalized Average True Rangeâ€™]\n                         * @type    {Array<string>}\n                         */\n                        natr: ['Normalized Average True Range'],\n                        /**\n                         *  On-Balance Volume alias.\n                         *\n                         * @default ['On-Balance Volumeâ€™]\n                         * @type    {Array<string>}\n                         */\n                        obv: ['On-Balance Volume'],\n                        /**\n                         * Percentage Price oscillator alias.\n                         *\n                         * @default ['Percentage Price oscillatorâ€™]\n                         * @type    {Array<string>}\n                         */\n                        ppo: ['Percentage Price oscillator'],\n                        /**\n                         *  Rate of Change alias.\n                         *\n                         * @default ['Rate of Changeâ€™]\n                         * @type    {Array<string>}\n                         */\n                        roc: ['Rate of Change'],\n                        /**\n                         *  Relative Strength Index alias.\n                         *\n                         * @default ['Relative Strength Indexâ€™]\n                         * @type    {Array<string>}\n                         */\n                        rsi: ['Relative Strength Index'],\n                        /**\n                         *  Slow Stochastic alias.\n                         *\n                         * @default [â€˜Slow Stochasticâ€™]\n                         * @type    {Array<string>}\n                         */\n                        slowstochastic: ['Slow Stochastic'],\n                        /**\n                         *  Stochastic alias.\n                         *\n                         * @default [â€˜Stochasticâ€™]\n                         * @type    {Array<string>}\n                         */\n                        stochastic: ['Stochastic'],\n                        /**\n                         *  TRIX alias.\n                         *\n                         * @default [â€˜TRIXâ€™]\n                         * @type    {Array<string>}\n                         */\n                        trix: ['TRIX'],\n                        /**\n                         *  Williams %R alias.\n                         *\n                         * @default [â€˜Williams %Râ€™]\n                         * @type    {Array<string>}\n                         */\n                        williamsr: ['Williams %R']\n                    }\n                }\n            }\n        };\n        /**\n         * Configure the stockTools gui strings in the chart. Requires the\n         * [stockTools module]() to be loaded. For a description of the module\n         * and information on its features, see [Highcharts StockTools]().\n         *\n         * @product highstock\n         *\n         * @sample stock/demo/stock-tools-gui Stock Tools GUI\n         *\n         * @sample stock/demo/stock-tools-custom-gui Stock Tools customized GUI\n         *\n         * @since        7.0.0\n         * @optionparent stockTools\n         */\n        const stockTools = {\n            /**\n             * Definitions of buttons in Stock Tools GUI.\n             */\n            gui: {\n                /**\n                 * Path where Highcharts will look for icons. Change this to use\n                 * icons from a different server.\n                 *\n                 * Since 7.1.3 use [iconsURL](#navigation.iconsURL) for popup and\n                 * stock tools.\n                 *\n                 * @deprecated\n                 * @apioption stockTools.gui.iconsURL\n                 *\n                 */\n                /**\n                 * Enable or disable the stockTools gui.\n                 */\n                enabled: true,\n                /**\n                 * A CSS class name to apply to the stocktools' div,\n                 * allowing unique CSS styling for each chart.\n                 */\n                className: 'highcharts-bindings-wrapper',\n                /**\n                 * A CSS class name to apply to the container of buttons,\n                 * allowing unique CSS styling for each chart.\n                 */\n                toolbarClassName: 'stocktools-toolbar',\n                /**\n                 * A collection of strings pointing to config options for the\n                 * toolbar items. Each name refers to a unique key from the\n                 * definitions object.\n                 *\n                 * @type    {Array<string>}\n                 * @default [\n                 *   'indicators',\n                 *   'separator',\n                 *   'simpleShapes',\n                 *   'lines',\n                 *   'crookedLines',\n                 *   'measure',\n                 *   'advanced',\n                 *   'toggleAnnotations',\n                 *   'separator',\n                 *   'verticalLabels',\n                 *   'flags',\n                 *   'separator',\n                 *   'zoomChange',\n                 *   'fullScreen',\n                 *   'typeChange',\n                 *   'separator',\n                 *   'currentPriceIndicator',\n                 *   'saveChart'\n                 * ]\n                 */\n                buttons: [\n                    'indicators',\n                    'separator',\n                    'simpleShapes',\n                    'lines',\n                    'crookedLines',\n                    'measure',\n                    'advanced',\n                    'toggleAnnotations',\n                    'separator',\n                    'verticalLabels',\n                    'flags',\n                    'separator',\n                    'zoomChange',\n                    'fullScreen',\n                    'typeChange',\n                    'separator',\n                    'currentPriceIndicator',\n                    'saveChart'\n                ],\n                /**\n                 * An options object of the buttons definitions. Each name refers to\n                 * unique key from buttons array.\n                 */\n                definitions: {\n                    separator: {\n                        /**\n                         * A predefined background symbol for the button.\n                         */\n                        symbol: 'separator.svg'\n                    },\n                    simpleShapes: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'label',\n                         *   'circle',\n                         *   'ellipse',\n                         *   'rectangle'\n                         * ]\n                         *\n                         */\n                        items: [\n                            'label',\n                            'circle',\n                            'ellipse',\n                            'rectangle'\n                        ],\n                        circle: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'circle.svg'\n                        },\n                        ellipse: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'ellipse.svg'\n                        },\n                        rectangle: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'rectangle.svg'\n                        },\n                        label: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'label.svg'\n                        }\n                    },\n                    flags: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'flagCirclepin',\n                         *   'flagDiamondpin',\n                         *   'flagSquarepin',\n                         *   'flagSimplepin'\n                         * ]\n                         *\n                         */\n                        items: [\n                            'flagCirclepin',\n                            'flagDiamondpin',\n                            'flagSquarepin',\n                            'flagSimplepin'\n                        ],\n                        flagSimplepin: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'flag-basic.svg'\n                        },\n                        flagDiamondpin: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             *\n                             */\n                            symbol: 'flag-diamond.svg'\n                        },\n                        flagSquarepin: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'flag-trapeze.svg'\n                        },\n                        flagCirclepin: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'flag-elipse.svg'\n                        }\n                    },\n                    lines: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'segment',\n                         *   'arrowSegment',\n                         *   'ray',\n                         *   'arrowRay',\n                         *   'line',\n                         *   'arrowInfinityLine',\n                         *   'horizontalLine',\n                         *   'verticalLine'\n                         * ]\n                         */\n                        items: [\n                            'segment',\n                            'arrowSegment',\n                            'ray',\n                            'arrowRay',\n                            'line',\n                            'arrowInfinityLine',\n                            'horizontalLine',\n                            'verticalLine'\n                        ],\n                        segment: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'segment.svg'\n                        },\n                        arrowSegment: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'arrow-segment.svg'\n                        },\n                        ray: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'ray.svg'\n                        },\n                        arrowRay: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'arrow-ray.svg'\n                        },\n                        line: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'line.svg'\n                        },\n                        arrowInfinityLine: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'arrow-line.svg'\n                        },\n                        verticalLine: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'vertical-line.svg'\n                        },\n                        horizontalLine: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'horizontal-line.svg'\n                        }\n                    },\n                    crookedLines: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'elliott3',\n                         *   'elliott5',\n                         *   'crooked3',\n                         *   'crooked5'\n                         * ]\n                         *\n                         */\n                        items: [\n                            'elliott3',\n                            'elliott5',\n                            'crooked3',\n                            'crooked5'\n                        ],\n                        crooked3: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'crooked-3.svg'\n                        },\n                        crooked5: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'crooked-5.svg'\n                        },\n                        elliott3: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'elliott-3.svg'\n                        },\n                        elliott5: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'elliott-5.svg'\n                        }\n                    },\n                    verticalLabels: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'verticalCounter',\n                         *   'verticalLabel',\n                         *   'verticalArrow'\n                         * ]\n                         */\n                        items: [\n                            'verticalCounter',\n                            'verticalLabel',\n                            'verticalArrow'\n                        ],\n                        verticalCounter: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'vertical-counter.svg'\n                        },\n                        verticalLabel: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'vertical-label.svg'\n                        },\n                        verticalArrow: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'vertical-arrow.svg'\n                        }\n                    },\n                    advanced: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'fibonacci',\n                         *   'fibonacciTimeZones',\n                         *   'pitchfork',\n                         *   'parallelChannel',\n                         *   'timeCycles'\n                         * ]\n                         */\n                        items: [\n                            'fibonacci',\n                            'fibonacciTimeZones',\n                            'pitchfork',\n                            'parallelChannel',\n                            'timeCycles'\n                        ],\n                        pitchfork: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'pitchfork.svg'\n                        },\n                        fibonacci: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'fibonacci.svg'\n                        },\n                        fibonacciTimeZones: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'fibonacci-timezone.svg'\n                        },\n                        parallelChannel: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'parallel-channel.svg'\n                        },\n                        timeCycles: {\n                            /**\n                             * A predefined backgroud symbol for the button.\n                             *\n                             * @type {string}\n                             */\n                            symbol: 'time-cycles.svg'\n                        }\n                    },\n                    measure: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'measureXY',\n                         *   'measureX',\n                         *   'measureY'\n                         * ]\n                         */\n                        items: [\n                            'measureXY',\n                            'measureX',\n                            'measureY'\n                        ],\n                        measureX: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'measure-x.svg'\n                        },\n                        measureY: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'measure-y.svg'\n                        },\n                        measureXY: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'measure-xy.svg'\n                        }\n                    },\n                    toggleAnnotations: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'annotations-visible.svg'\n                    },\n                    currentPriceIndicator: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'current-price-show.svg'\n                    },\n                    indicators: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'indicators.svg'\n                    },\n                    zoomChange: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'zoomX',\n                         *   'zoomY',\n                         *   'zoomXY'\n                         * ]\n                         */\n                        items: [\n                            'zoomX',\n                            'zoomY',\n                            'zoomXY'\n                        ],\n                        zoomX: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'zoom-x.svg'\n                        },\n                        zoomY: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'zoom-y.svg'\n                        },\n                        zoomXY: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'zoom-xy.svg'\n                        }\n                    },\n                    typeChange: {\n                        /**\n                         * A collection of strings pointing to config options for\n                         * the items.\n                         *\n                         * @type {Array}\n                         * @default [\n                         *   'typeOHLC',\n                         *   'typeLine',\n                         *   'typeCandlestick'\n                         *   'typeHollowCandlestick'\n                         * ]\n                         */\n                        items: [\n                            'typeOHLC',\n                            'typeLine',\n                            'typeCandlestick',\n                            'typeHollowCandlestick',\n                            'typeHLC',\n                            'typeHeikinAshi'\n                        ],\n                        typeOHLC: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-ohlc.svg'\n                        },\n                        typeLine: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-line.svg'\n                        },\n                        typeCandlestick: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-candlestick.svg'\n                        },\n                        typeHLC: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-hlc.svg'\n                        },\n                        typeHeikinAshi: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-heikin-ashi.svg'\n                        },\n                        typeHollowCandlestick: {\n                            /**\n                             * A predefined background symbol for the button.\n                             *\n                             * @type   {string}\n                             */\n                            symbol: 'series-hollow-candlestick.svg'\n                        }\n                    },\n                    fullScreen: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'fullscreen.svg'\n                    },\n                    saveChart: {\n                        /**\n                         * A predefined background symbol for the button.\n                         *\n                         * @type   {string}\n                         */\n                        symbol: 'save-chart.svg'\n                    }\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Exports\n         *\n         * */\n        const StockToolsDefaults = {\n            lang,\n            stockTools\n        };\n\n        return StockToolsDefaults;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockTools.js', [_modules['Core/Defaults.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Stock/StockTools/StockToolsBindings.js'], _modules['Stock/StockTools/StockToolsDefaults.js'], _modules['Stock/StockTools/StockToolsUtilities.js'], _modules['Core/Utilities.js']], function (D, NBU, StockToolsBindings, StockToolsDefaults, STU, U) {\n        /**\n         *\n         *  Events generator for Stock tools\n         *\n         *  (c) 2009-2021 PaweÅ‚ Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { setOptions } = D;\n        const { getAssignedAxis } = NBU;\n        const { isNotNavigatorYAxis, isPriceIndicatorEnabled } = STU;\n        const { correctFloat, defined, isNumber, pick } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(NavigationBindingsClass) {\n            if (U.pushUnique(composedMembers, NavigationBindingsClass)) {\n                const navigationProto = NavigationBindingsClass.prototype;\n                // Extends NavigationBindings to support indicators and resizers:\n                navigationProto.getYAxisPositions = navigationGetYAxisPositions;\n                navigationProto.getYAxisResizers = navigationGetYAxisResizers;\n                navigationProto.recalculateYAxisPositions =\n                    navigationRecalculateYAxisPositions;\n                navigationProto.resizeYAxes = navigationResizeYAxes;\n                navigationProto.utils = {\n                    indicatorsWithAxes: STU.indicatorsWithAxes,\n                    indicatorsWithVolume: STU.indicatorsWithVolume,\n                    getAssignedAxis,\n                    isPriceIndicatorEnabled,\n                    manageIndicators: STU.manageIndicators\n                };\n            }\n            if (U.pushUnique(composedMembers, setOptions)) {\n                setOptions(StockToolsDefaults);\n                setOptions({\n                    navigation: {\n                        bindings: StockToolsBindings\n                    }\n                });\n            }\n        }\n        /**\n         * Get current positions for all yAxes. If new axis does not have position,\n         * returned is default height and last available top place.\n         *\n         * @private\n         * @function Highcharts.NavigationBindings#getYAxisPositions\n         *\n         * @param {Array<Highcharts.Axis>} yAxes\n         *        Array of yAxes available in the chart.\n         *\n         * @param {number} plotHeight\n         *        Available height in the chart.\n         *\n         * @param {number} defaultHeight\n         *        Default height in percents.\n         *\n         * @param {Highcharts.AxisPositions} removedYAxisProps\n         *        Height and top value of the removed yAxis in percents.\n         *\n         * @return {Highcharts.YAxisPositions}\n         *         An object containing an array of calculated positions\n         *         in percentages. Format: `{top: Number, height: Number}`\n         *         and maximum value of top + height of axes.\n         */\n        function navigationGetYAxisPositions(yAxes, plotHeight, defaultHeight, removedYAxisProps) {\n            let allAxesHeight = 0, previousAxisHeight, removedHeight, removedTop;\n            /** @private */\n            function isPercentage(prop) {\n                return defined(prop) && !isNumber(prop) && prop.match('%');\n            }\n            if (removedYAxisProps) {\n                removedTop = correctFloat((parseFloat(removedYAxisProps.top) / 100));\n                removedHeight = correctFloat((parseFloat(removedYAxisProps.height) / 100));\n            }\n            const positions = yAxes.map((yAxis, index) => {\n                let height = correctFloat(isPercentage(yAxis.options.height) ?\n                    parseFloat(yAxis.options.height) / 100 :\n                    yAxis.height / plotHeight), top = correctFloat(isPercentage(yAxis.options.top) ?\n                    parseFloat(yAxis.options.top) / 100 :\n                    (yAxis.top - yAxis.chart.plotTop) / plotHeight);\n                if (!removedHeight) {\n                    // New axis' height is NaN so we can check if\n                    // the axis is newly created this way\n                    if (!isNumber(height)) {\n                        // Check if the previous axis is the\n                        // indicator axis (every indicator inherits from sma)\n                        height = yAxes[index - 1].series\n                            .every((s) => s.is('sma')) ?\n                            previousAxisHeight : defaultHeight / 100;\n                    }\n                    if (!isNumber(top)) {\n                        top = allAxesHeight;\n                    }\n                    previousAxisHeight = height;\n                    allAxesHeight = correctFloat(Math.max(allAxesHeight, (top || 0) + (height || 0)));\n                }\n                else {\n                    // Move all axes which were below the removed axis up.\n                    if (top > removedTop) {\n                        top -= removedHeight;\n                    }\n                    allAxesHeight = Math.max(allAxesHeight, (top || 0) + (height || 0));\n                }\n                return {\n                    height: height * 100,\n                    top: top * 100\n                };\n            });\n            return { positions, allAxesHeight };\n        }\n        /**\n         * Get current resize options for each yAxis. Note that each resize is\n         * linked to the next axis, except the last one which shouldn't affect\n         * axes in the navigator. Because indicator can be removed with it's yAxis\n         * in the middle of yAxis array, we need to bind closest yAxes back.\n         *\n         * @private\n         * @function Highcharts.NavigationBindings#getYAxisResizers\n         *\n         * @param {Array<Highcharts.Axis>} yAxes\n         *        Array of yAxes available in the chart\n         *\n         * @return {Array<object>}\n         *         An array of resizer options.\n         *         Format: `{enabled: Boolean, controlledAxis: { next: [String]}}`\n         */\n        function navigationGetYAxisResizers(yAxes) {\n            const resizers = [];\n            yAxes.forEach(function (_yAxis, index) {\n                const nextYAxis = yAxes[index + 1];\n                // We have next axis, bind them:\n                if (nextYAxis) {\n                    resizers[index] = {\n                        enabled: true,\n                        controlledAxis: {\n                            next: [\n                                pick(nextYAxis.options.id, nextYAxis.index)\n                            ]\n                        }\n                    };\n                }\n                else {\n                    // Remove binding:\n                    resizers[index] = {\n                        enabled: false\n                    };\n                }\n            });\n            return resizers;\n        }\n        /**\n         * Utility to modify calculated positions according to the remaining/needed\n         * space. Later, these positions are used in `yAxis.update({ top, height })`\n         *\n         * @private\n         * @function Highcharts.NavigationBindings#recalculateYAxisPositions\n         * @param {Array<Highcharts.Dictionary<number>>} positions\n         * Default positions of all yAxes.\n         * @param {number} changedSpace\n         * How much space should be added or removed.\n         * @param {boolean} modifyHeight\n         * Update only `top` or both `top` and `height`.\n         * @param {number} adder\n         * `-1` or `1`, to determine whether we should add or remove space.\n         *\n         * @return {Array<object>}\n         *         Modified positions,\n         */\n        function navigationRecalculateYAxisPositions(positions, changedSpace, modifyHeight, adder) {\n            positions.forEach(function (position, index) {\n                const prevPosition = positions[index - 1];\n                position.top = !prevPosition ? 0 :\n                    correctFloat(prevPosition.height + prevPosition.top);\n                if (modifyHeight) {\n                    position.height = correctFloat(position.height + adder * changedSpace);\n                }\n            });\n            return positions;\n        }\n        /**\n         * Resize all yAxes (except navigator) to fit the plotting height. Method\n         * checks if new axis is added, if the new axis will fit under previous\n         * axes it is placed there. If not, current plot area is scaled\n         * to make room for new axis.\n         *\n         * If axis is removed, the current plot area streaches to fit into 100%\n         * of the plot area.\n         *\n         * @private\n         */\n        function navigationResizeYAxes(removedYAxisProps) {\n            // The height of the new axis before rescalling. In %, but as a number.\n            const defaultHeight = 20;\n            const chart = this.chart, \n            // Only non-navigator axes\n            yAxes = chart.yAxis.filter(isNotNavigatorYAxis), plotHeight = chart.plotHeight, \n            // Gather current heights (in %)\n            { positions, allAxesHeight } = this.getYAxisPositions(yAxes, plotHeight, defaultHeight, removedYAxisProps), resizers = this.getYAxisResizers(yAxes);\n            // check if the axis is being either added or removed and\n            // if the new indicator axis will fit under existing axes.\n            // if so, there is no need to scale them.\n            if (!removedYAxisProps &&\n                allAxesHeight <= correctFloat(0.8 + defaultHeight / 100)) {\n                positions[positions.length - 1] = {\n                    height: defaultHeight,\n                    top: correctFloat(allAxesHeight * 100 - defaultHeight)\n                };\n            }\n            else {\n                positions.forEach(function (position) {\n                    position.height = (position.height / (allAxesHeight * 100)) * 100;\n                    position.top = (position.top / (allAxesHeight * 100)) * 100;\n                });\n            }\n            positions.forEach(function (position, index) {\n                yAxes[index].update({\n                    height: position.height + '%',\n                    top: position.top + '%',\n                    resize: resizers[index],\n                    offset: 0\n                }, false);\n            });\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const StockTools = {\n            compose\n        };\n\n        return StockTools;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolbar.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  GUI generator for Stock tools\n         *\n         *  (c) 2009-2021 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { addEvent, createElement, css, fireEvent, getStyle, isArray, merge, pick } = U;\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * Toolbar Class\n         *\n         * @private\n         * @class\n         *\n         * @param {object} options\n         *        Options of toolbar\n         *\n         * @param {Highcharts.Dictionary<string>|undefined} langOptions\n         *        Language options\n         *\n         * @param {Highcharts.Chart} chart\n         *        Reference to chart\n         */\n        class Toolbar {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(options, langOptions, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.arrowDown = void 0;\n                this.arrowUp = void 0;\n                this.arrowWrapper = void 0;\n                this.listWrapper = void 0;\n                this.showhideBtn = void 0;\n                this.submenu = void 0;\n                this.toolbar = void 0;\n                this.wrapper = void 0;\n                this.chart = chart;\n                this.options = options;\n                this.lang = langOptions;\n                // set url for icons.\n                this.iconsURL = this.getIconsURL();\n                this.guiEnabled = options.enabled;\n                this.visible = pick(options.visible, true);\n                this.placed = pick(options.placed, false);\n                // General events collection which should be removed upon\n                // destroy/update:\n                this.eventsToUnbind = [];\n                if (this.guiEnabled) {\n                    this.createHTML();\n                    this.init();\n                    this.showHideNavigatorion();\n                }\n                fireEvent(this, 'afterInit');\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the toolbar. Create buttons and submenu for each option\n             * defined in `stockTools.gui`.\n             * @private\n             */\n            init() {\n                const lang = this.lang, guiOptions = this.options, toolbar = this.toolbar, buttons = guiOptions.buttons, defs = guiOptions.definitions, allButtons = toolbar.childNodes;\n                // create buttons\n                buttons.forEach((btnName) => {\n                    const button = this.addButton(toolbar, defs, btnName, lang);\n                    this.eventsToUnbind.push(addEvent(button.buttonWrapper, 'click', () => this.eraseActiveButtons(allButtons, button.buttonWrapper)));\n                    if (isArray(defs[btnName].items)) {\n                        // create submenu buttons\n                        this.addSubmenu(button, defs[btnName]);\n                    }\n                });\n            }\n            /**\n             * Create submenu (list of buttons) for the option. In example main button\n             * is Line, in submenu will be buttons with types of lines.\n             *\n             * @private\n             *\n             * @param {Highcharts.Dictionary<Highcharts.HTMLDOMElement>} parentBtn\n             *        Button which has submenu\n             *\n             * @param {Highcharts.StockToolsGuiDefinitionsButtonsOptions} button\n             *        List of all buttons\n             */\n            addSubmenu(parentBtn, button) {\n                const submenuArrow = parentBtn.submenuArrow, buttonWrapper = parentBtn.buttonWrapper, buttonWidth = getStyle(buttonWrapper, 'width'), wrapper = this.wrapper, menuWrapper = this.listWrapper, allButtons = this.toolbar.childNodes, \n                // create submenu container\n                submenuWrapper = this.submenu = createElement('ul', {\n                    className: 'highcharts-submenu-wrapper'\n                }, void 0, buttonWrapper);\n                // create submenu buttons and select the first one\n                this.addSubmenuItems(buttonWrapper, button);\n                // show / hide submenu\n                this.eventsToUnbind.push(addEvent(submenuArrow, 'click', (e) => {\n                    e.stopPropagation();\n                    // Erase active class on all other buttons\n                    this.eraseActiveButtons(allButtons, buttonWrapper);\n                    // hide menu\n                    if (buttonWrapper.className\n                        .indexOf('highcharts-current') >= 0) {\n                        menuWrapper.style.width =\n                            menuWrapper.startWidth + 'px';\n                        buttonWrapper.classList.remove('highcharts-current');\n                        submenuWrapper.style.display = 'none';\n                    }\n                    else {\n                        // show menu\n                        // to calculate height of element\n                        submenuWrapper.style.display = 'block';\n                        let topMargin = submenuWrapper.offsetHeight -\n                            buttonWrapper.offsetHeight - 3;\n                        // calculate position of submenu in the box\n                        // if submenu is inside, reset top margin\n                        if (\n                        // cut on the bottom\n                        !(submenuWrapper.offsetHeight +\n                            buttonWrapper.offsetTop >\n                            wrapper.offsetHeight &&\n                            // cut on the top\n                            buttonWrapper.offsetTop > topMargin)) {\n                            topMargin = 0;\n                        }\n                        // apply calculated styles\n                        css(submenuWrapper, {\n                            top: -topMargin + 'px',\n                            left: buttonWidth + 3 + 'px'\n                        });\n                        buttonWrapper.className += ' highcharts-current';\n                        menuWrapper.startWidth = wrapper.offsetWidth;\n                        menuWrapper.style.width = menuWrapper.startWidth +\n                            getStyle(menuWrapper, 'padding-left') +\n                            submenuWrapper.offsetWidth + 3 + 'px';\n                    }\n                }));\n            }\n            /**\n             * Create buttons in submenu\n             *\n             * @private\n             *\n             * @param {Highcharts.HTMLDOMElement} buttonWrapper\n             *        Button where submenu is placed\n             *\n             * @param {Highcharts.StockToolsGuiDefinitionsButtonsOptions} button\n             *        List of all buttons options\n             */\n            addSubmenuItems(buttonWrapper, button) {\n                const _self = this, submenuWrapper = this.submenu, lang = this.lang, menuWrapper = this.listWrapper, items = button.items;\n                let submenuBtn;\n                // add items to submenu\n                items.forEach((btnName) => {\n                    // add buttons to submenu\n                    submenuBtn = this.addButton(submenuWrapper, button, btnName, lang);\n                    this.eventsToUnbind.push(addEvent(submenuBtn.mainButton, 'click', function () {\n                        _self.switchSymbol(this, buttonWrapper, true);\n                        menuWrapper.style.width =\n                            menuWrapper.startWidth + 'px';\n                        submenuWrapper.style.display = 'none';\n                    }));\n                });\n                // select first submenu item\n                const firstSubmenuItem = submenuWrapper.querySelectorAll('li > .highcharts-menu-item-btn')[0];\n                // replace current symbol, in main button, with submenu's button style\n                this.switchSymbol(firstSubmenuItem, false);\n            }\n            /**\n             * Erase active class on all other buttons.\n             * @private\n             */\n            eraseActiveButtons(buttons, currentButton, submenuItems) {\n                [].forEach.call(buttons, (btn) => {\n                    if (btn !== currentButton) {\n                        btn.classList.remove('highcharts-current');\n                        btn.classList.remove('highcharts-active');\n                        submenuItems =\n                            btn.querySelectorAll('.highcharts-submenu-wrapper');\n                        // hide submenu\n                        if (submenuItems.length > 0) {\n                            submenuItems[0].style.display = 'none';\n                        }\n                    }\n                });\n            }\n            /**\n             * Create single button. Consist of HTML elements `li`, `span`, and (if\n             * exists) submenu container.\n             *\n             * @private\n             *\n             * @param {Highcharts.HTMLDOMElement} target\n             *        HTML reference, where button should be added\n             *\n             * @param {object} options\n             *        All options, by btnName refer to particular button\n             *\n             * @param {string} btnName\n             *        Button name of functionality mapped for specific class\n             *\n             * @param {Highcharts.Dictionary<string>} lang\n             *        All titles, by btnName refer to particular button\n             *\n             * @return {object}\n             *         References to all created HTML elements\n             */\n            addButton(target, options, btnName, lang = {}) {\n                const btnOptions = options[btnName], items = btnOptions.items, classMapping = Toolbar.prototype.classMapping, userClassName = btnOptions.className || '';\n                // main button wrapper\n                const buttonWrapper = createElement('li', {\n                    className: pick(classMapping[btnName], '') + ' ' + userClassName,\n                    title: lang[btnName] || btnName\n                }, void 0, target);\n                // single button\n                const mainButton = createElement('span', {\n                    className: 'highcharts-menu-item-btn'\n                }, void 0, buttonWrapper);\n                // submenu\n                if (items && items.length) {\n                    // arrow is a hook to show / hide submenu\n                    const submenuArrow = createElement('span', {\n                        className: 'highcharts-submenu-item-arrow ' +\n                            'highcharts-arrow-right'\n                    }, void 0, buttonWrapper);\n                    submenuArrow.style.backgroundImage = 'url(' +\n                        this.iconsURL + 'arrow-bottom.svg)';\n                    return {\n                        buttonWrapper,\n                        mainButton,\n                        submenuArrow\n                    };\n                }\n                mainButton.style.backgroundImage = 'url(' +\n                    this.iconsURL + btnOptions.symbol + ')';\n                return {\n                    buttonWrapper,\n                    mainButton\n                };\n            }\n            /**\n             * Create navigation's HTML elements: container and arrows.\n             * @private\n             */\n            addNavigation() {\n                const wrapper = this.wrapper;\n                // arrow wrapper\n                this.arrowWrapper = createElement('div', {\n                    className: 'highcharts-arrow-wrapper'\n                });\n                this.arrowUp = createElement('div', {\n                    className: 'highcharts-arrow-up'\n                }, void 0, this.arrowWrapper);\n                this.arrowUp.style.backgroundImage =\n                    'url(' + this.iconsURL + 'arrow-right.svg)';\n                this.arrowDown = createElement('div', {\n                    className: 'highcharts-arrow-down'\n                }, void 0, this.arrowWrapper);\n                this.arrowDown.style.backgroundImage =\n                    'url(' + this.iconsURL + 'arrow-right.svg)';\n                wrapper.insertBefore(this.arrowWrapper, wrapper.childNodes[0]);\n                // attach scroll events\n                this.scrollButtons();\n            }\n            /**\n             * Add events to navigation (two arrows) which allows user to scroll\n             * top/down GUI buttons, if container's height is not enough.\n             * @private\n             */\n            scrollButtons() {\n                const wrapper = this.wrapper, toolbar = this.toolbar, step = 0.1 * wrapper.offsetHeight; // 0.1 = 10%\n                let targetY = 0;\n                this.eventsToUnbind.push(addEvent(this.arrowUp, 'click', () => {\n                    if (targetY > 0) {\n                        targetY -= step;\n                        toolbar.style.marginTop = -targetY + 'px';\n                    }\n                }));\n                this.eventsToUnbind.push(addEvent(this.arrowDown, 'click', () => {\n                    if (wrapper.offsetHeight + targetY <=\n                        toolbar.offsetHeight + step) {\n                        targetY += step;\n                        toolbar.style.marginTop = -targetY + 'px';\n                    }\n                }));\n            }\n            /*\n             * Create stockTools HTML main elements.\n             *\n             */\n            createHTML() {\n                const chart = this.chart, guiOptions = this.options, container = chart.container, navigation = chart.options.navigation, bindingsClassName = navigation && navigation.bindingsClassName;\n                let listWrapper, toolbar;\n                // create main container\n                const wrapper = this.wrapper = createElement('div', {\n                    className: 'highcharts-stocktools-wrapper ' +\n                        guiOptions.className + ' ' + bindingsClassName\n                });\n                container.appendChild(wrapper);\n                // Mimic event behaviour of being outside chart.container\n                [\n                    'mousedown',\n                    'mousemove',\n                    'click',\n                    'touchstart'\n                ].forEach((eventType) => {\n                    addEvent(wrapper, eventType, (e) => e.stopPropagation());\n                });\n                addEvent(wrapper, 'mouseover', (e) => chart.pointer.onContainerMouseLeave(e));\n                // toolbar\n                this.toolbar = toolbar = createElement('ul', {\n                    className: 'highcharts-stocktools-toolbar ' +\n                        guiOptions.toolbarClassName\n                });\n                // add container for list of buttons\n                this.listWrapper = listWrapper = createElement('div', {\n                    className: 'highcharts-menu-wrapper'\n                });\n                wrapper.insertBefore(listWrapper, wrapper.childNodes[0]);\n                listWrapper.insertBefore(toolbar, listWrapper.childNodes[0]);\n                this.showHideToolbar();\n                // add navigation which allows user to scroll down / top GUI buttons\n                this.addNavigation();\n            }\n            /**\n             * Function called in redraw verifies if the navigation should be visible.\n             * @private\n             */\n            showHideNavigatorion() {\n                // arrows\n                // 50px space for arrows\n                if (this.visible &&\n                    this.toolbar.offsetHeight > (this.wrapper.offsetHeight - 50)) {\n                    this.arrowWrapper.style.display = 'block';\n                }\n                else {\n                    // reset margin if whole toolbar is visible\n                    this.toolbar.style.marginTop = '0px';\n                    // hide arrows\n                    this.arrowWrapper.style.display = 'none';\n                }\n            }\n            /**\n             * Create button which shows or hides GUI toolbar.\n             * @private\n             */\n            showHideToolbar() {\n                const chart = this.chart, wrapper = this.wrapper, toolbar = this.listWrapper, submenu = this.submenu, \n                // Show hide toolbar\n                showhideBtn = this.showhideBtn = createElement('div', {\n                    className: 'highcharts-toggle-toolbar highcharts-arrow-left'\n                }, void 0, wrapper);\n                let visible = this.visible;\n                showhideBtn.style.backgroundImage =\n                    'url(' + this.iconsURL + 'arrow-right.svg)';\n                if (!visible) {\n                    // hide\n                    if (submenu) {\n                        submenu.style.display = 'none';\n                    }\n                    showhideBtn.style.left = '0px';\n                    visible = this.visible = false;\n                    toolbar.classList.add('highcharts-hide');\n                    showhideBtn.classList.toggle('highcharts-arrow-right');\n                    wrapper.style.height = showhideBtn.offsetHeight + 'px';\n                }\n                else {\n                    wrapper.style.height = '100%';\n                    showhideBtn.style.top = getStyle(toolbar, 'padding-top') + 'px';\n                    showhideBtn.style.left = (wrapper.offsetWidth +\n                        getStyle(toolbar, 'padding-left')) + 'px';\n                }\n                // Toggle menu\n                this.eventsToUnbind.push(addEvent(showhideBtn, 'click', () => {\n                    chart.update({\n                        stockTools: {\n                            gui: {\n                                visible: !visible,\n                                placed: true\n                            }\n                        }\n                    });\n                }));\n            }\n            /*\n             * In main GUI button, replace icon and class with submenu button's\n             * class / symbol.\n             *\n             * @param {HTMLDOMElement} - submenu button\n             * @param {Boolean} - true or false\n             *\n             */\n            switchSymbol(button, redraw) {\n                const buttonWrapper = button.parentNode, buttonWrapperClass = buttonWrapper.className, \n                // main button in first level og GUI\n                mainNavButton = buttonWrapper.parentNode.parentNode;\n                // if the button is disabled, don't do anything\n                if (buttonWrapperClass.indexOf('highcharts-disabled-btn') > -1) {\n                    return;\n                }\n                // set class\n                mainNavButton.className = '';\n                if (buttonWrapperClass) {\n                    mainNavButton.classList.add(buttonWrapperClass.trim());\n                }\n                // set icon\n                mainNavButton\n                    .querySelectorAll('.highcharts-menu-item-btn')[0]\n                    .style.backgroundImage =\n                    button.style.backgroundImage;\n                // set active class\n                if (redraw) {\n                    this.toggleButtonActiveClass(mainNavButton);\n                }\n            }\n            /**\n             * Set select state (active class) on button.\n             * @private\n             */\n            toggleButtonActiveClass(button) {\n                const classList = button.classList;\n                if (classList.contains('highcharts-active')) {\n                    classList.remove('highcharts-active');\n                }\n                else {\n                    classList.add('highcharts-active');\n                }\n            }\n            /**\n             * Remove active class from all buttons except defined.\n             * @private\n             */\n            unselectAllButtons(button) {\n                const activeBtns = button.parentNode\n                    .querySelectorAll('.highcharts-active');\n                [].forEach.call(activeBtns, (activeBtn) => {\n                    if (activeBtn !== button) {\n                        activeBtn.classList.remove('highcharts-active');\n                    }\n                });\n            }\n            /**\n             * Update GUI with given options.\n             * @private\n             */\n            update(options, redraw) {\n                merge(true, this.chart.options.stockTools, options);\n                this.destroy();\n                this.chart.setStockTools(options);\n                // If Stock Tools are updated, then bindings should be updated too:\n                if (this.chart.navigationBindings) {\n                    this.chart.navigationBindings.update();\n                }\n                this.chart.isDirtyBox = true;\n                if (pick(redraw, true)) {\n                    this.chart.redraw();\n                }\n            }\n            /**\n             * Destroy all HTML GUI elements.\n             * @private\n             */\n            destroy() {\n                const stockToolsDiv = this.wrapper, parent = stockToolsDiv && stockToolsDiv.parentNode;\n                this.eventsToUnbind.forEach((unbinder) => unbinder());\n                // Remove the empty element\n                if (parent) {\n                    parent.removeChild(stockToolsDiv);\n                }\n            }\n            /**\n             * Redraw, GUI requires to verify if the navigation should be visible.\n             * @private\n             */\n            redraw() {\n                this.showHideNavigatorion();\n            }\n            /**\n             * @private\n             */\n            getIconsURL() {\n                return this.chart.options.navigation.iconsURL ||\n                    this.options.iconsURL ||\n                    'https://code.highcharts.com/11.2.0/gfx/stock-icons/';\n            }\n        }\n        Toolbar.prototype.classMapping = {\n            circle: 'highcharts-circle-annotation',\n            ellipse: 'highcharts-ellipse-annotation',\n            rectangle: 'highcharts-rectangle-annotation',\n            label: 'highcharts-label-annotation',\n            segment: 'highcharts-segment',\n            arrowSegment: 'highcharts-arrow-segment',\n            ray: 'highcharts-ray',\n            arrowRay: 'highcharts-arrow-ray',\n            line: 'highcharts-infinity-line',\n            arrowInfinityLine: 'highcharts-arrow-infinity-line',\n            verticalLine: 'highcharts-vertical-line',\n            horizontalLine: 'highcharts-horizontal-line',\n            crooked3: 'highcharts-crooked3',\n            crooked5: 'highcharts-crooked5',\n            elliott3: 'highcharts-elliott3',\n            elliott5: 'highcharts-elliott5',\n            pitchfork: 'highcharts-pitchfork',\n            fibonacci: 'highcharts-fibonacci',\n            fibonacciTimeZones: 'highcharts-fibonacci-time-zones',\n            parallelChannel: 'highcharts-parallel-channel',\n            measureX: 'highcharts-measure-x',\n            measureY: 'highcharts-measure-y',\n            measureXY: 'highcharts-measure-xy',\n            timeCycles: 'highcharts-time-cycles',\n            verticalCounter: 'highcharts-vertical-counter',\n            verticalLabel: 'highcharts-vertical-label',\n            verticalArrow: 'highcharts-vertical-arrow',\n            currentPriceIndicator: 'highcharts-current-price-indicator',\n            indicators: 'highcharts-indicators',\n            flagCirclepin: 'highcharts-flag-circlepin',\n            flagDiamondpin: 'highcharts-flag-diamondpin',\n            flagSquarepin: 'highcharts-flag-squarepin',\n            flagSimplepin: 'highcharts-flag-simplepin',\n            zoomX: 'highcharts-zoom-x',\n            zoomY: 'highcharts-zoom-y',\n            zoomXY: 'highcharts-zoom-xy',\n            typeLine: 'highcharts-series-type-line',\n            typeOHLC: 'highcharts-series-type-ohlc',\n            typeHLC: 'highcharts-series-type-hlc',\n            typeCandlestick: 'highcharts-series-type-candlestick',\n            typeHollowCandlestick: 'highcharts-series-type-hollowcandlestick',\n            typeHeikinAshi: 'highcharts-series-type-heikinashi',\n            fullScreen: 'highcharts-full-screen',\n            toggleAnnotations: 'highcharts-toggle-annotations',\n            saveChart: 'highcharts-save-chart',\n            separator: 'highcharts-separator'\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Toolbar;\n    });\n    _registerModule(_modules, 'Stock/StockTools/StockToolsGui.js', [_modules['Core/Defaults.js'], _modules['Stock/StockTools/StockToolsDefaults.js'], _modules['Stock/StockTools/StockToolbar.js'], _modules['Core/Utilities.js']], function (D, StockToolsDefaults, Toolbar, U) {\n        /* *\n         *\n         *  GUI generator for Stock tools\n         *\n         *  (c) 2009-2021 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { setOptions } = D;\n        const { addEvent, getStyle, merge, pick } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Verify if Toolbar should be added.\n         * @private\n         */\n        function chartSetStockTools(options) {\n            const chartOptions = this.options, lang = chartOptions.lang, guiOptions = merge(chartOptions.stockTools && chartOptions.stockTools.gui, options && options.gui), langOptions = lang && lang.stockTools && lang.stockTools.gui;\n            this.stockTools = new Toolbar(guiOptions, langOptions, this);\n            if (this.stockTools.guiEnabled) {\n                this.isDirtyBox = true;\n            }\n        }\n        /**\n         * @private\n         */\n        function compose(ChartClass, NavigationBindingsClass) {\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRedraw', onChartBeforeRedraw);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRedraw);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins, { order: 0 });\n                addEvent(ChartClass, 'redraw', onChartRedraw);\n                addEvent(ChartClass, 'render', onChartRender);\n                ChartClass.prototype.setStockTools = chartSetStockTools;\n            }\n            if (U.pushUnique(composedMembers, NavigationBindingsClass)) {\n                addEvent(NavigationBindingsClass, 'deselectButton', onNavigationBindingsDeselectButton);\n                addEvent(NavigationBindingsClass, 'selectButton', onNavigationBindingsSelectButton);\n            }\n            if (U.pushUnique(composedMembers, setOptions)) {\n                setOptions(StockToolsDefaults);\n            }\n        }\n        /**\n         * Run HTML generator\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            this.setStockTools();\n        }\n        /**\n         * Handle beforeRedraw and beforeRender\n         * @private\n         */\n        function onChartBeforeRedraw() {\n            if (this.stockTools) {\n                const optionsChart = this.options.chart;\n                const listWrapper = this.stockTools.listWrapper, offsetWidth = listWrapper && ((listWrapper.startWidth +\n                    getStyle(listWrapper, 'padding-left') +\n                    getStyle(listWrapper, 'padding-right')) || listWrapper.offsetWidth);\n                let dirty = false;\n                if (offsetWidth && offsetWidth < this.plotWidth) {\n                    const nextX = pick(optionsChart.spacingLeft, optionsChart.spacing && optionsChart.spacing[3], 0) + offsetWidth;\n                    const diff = nextX - this.spacingBox.x;\n                    this.spacingBox.x = nextX;\n                    this.spacingBox.width -= diff;\n                    dirty = true;\n                }\n                else if (offsetWidth === 0) {\n                    dirty = true;\n                }\n                if (offsetWidth !== this.stockTools.prevOffsetWidth) {\n                    this.stockTools.prevOffsetWidth = offsetWidth;\n                    if (dirty) {\n                        this.isDirtyLegend = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartDestroy() {\n            if (this.stockTools) {\n                this.stockTools.destroy();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartGetMargins() {\n            const listWrapper = this.stockTools && this.stockTools.listWrapper, offsetWidth = listWrapper && ((listWrapper.startWidth +\n                getStyle(listWrapper, 'padding-left') +\n                getStyle(listWrapper, 'padding-right')) || listWrapper.offsetWidth);\n            if (offsetWidth && offsetWidth < this.plotWidth) {\n                this.plotLeft += offsetWidth;\n                this.spacing[3] += offsetWidth;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRedraw() {\n            if (this.stockTools && this.stockTools.guiEnabled) {\n                this.stockTools.redraw();\n            }\n        }\n        /**\n         * Check if the correct price indicator button is displayed, #15029.\n         * @private\n         */\n        function onChartRender() {\n            const stockTools = this.stockTools, button = stockTools &&\n                stockTools.toolbar &&\n                stockTools.toolbar.querySelector('.highcharts-current-price-indicator');\n            // Change the initial button background.\n            if (stockTools &&\n                this.navigationBindings &&\n                this.options.series &&\n                button) {\n                if (this.navigationBindings.constructor.prototype.utils\n                    .isPriceIndicatorEnabled(this.series)) {\n                    button.firstChild.style['background-image'] =\n                        'url(\"' + stockTools.getIconsURL() + 'current-price-hide.svg\")';\n                }\n                else {\n                    button.firstChild.style['background-image'] =\n                        'url(\"' + stockTools.getIconsURL() + 'current-price-show.svg\")';\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsDeselectButton(event) {\n            const className = 'highcharts-submenu-wrapper', gui = this.chart.stockTools;\n            if (gui && gui.guiEnabled) {\n                let button = event.button;\n                // If deselecting a button from a submenu, select state for it's parent\n                if (button.parentNode.className.indexOf(className) >= 0) {\n                    button = button.parentNode.parentNode;\n                }\n                // Set active class on the current button\n                gui.toggleButtonActiveClass(button);\n            }\n        }\n        /**\n         * Communication with bindings\n         * @private\n         */\n        function onNavigationBindingsSelectButton(event) {\n            const className = 'highcharts-submenu-wrapper', gui = this.chart.stockTools;\n            if (gui && gui.guiEnabled) {\n                let button = event.button;\n                // Unslect other active buttons\n                gui.unselectAllButtons(event.button);\n                // If clicked on a submenu, select state for it's parent\n                if (button.parentNode.className.indexOf(className) >= 0) {\n                    button = button.parentNode.parentNode;\n                }\n                // Set active class on the current button\n                gui.toggleButtonActiveClass(button);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const StockToolsGui = {\n            compose\n        };\n\n        return StockToolsGui;\n    });\n    _registerModule(_modules, 'masters/modules/stock-tools.src.js', [_modules['Core/Globals.js'], _modules['Extensions/Annotations/NavigationBindings.js'], _modules['Stock/StockTools/StockTools.js'], _modules['Stock/StockTools/StockToolsGui.js'], _modules['Stock/StockTools/StockToolbar.js']], function (Highcharts, NavigationBindings, StockTools, StockToolsGui, Toolbar) {\n\n        const G = Highcharts;\n        G.Toolbar = Toolbar;\n        StockTools.compose(NavigationBindings);\n        StockToolsGui.compose(G.Chart, NavigationBindings);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","ChartNavigationComposition","compose","chart","navigation","Additions","constructor","updates","addUpdate","updateFn","push","update","options","redraw","forEach","call","NBU","U","getAssignedAxis","isNumber","merge","lang","popup","simpleShapes","lines","circle","ellipse","rectangle","label","shapeOptions","typeOptions","fill","format","strokeWidth","stroke","title","name","labelOptions","labels","backgroundColor","backgroundColors","borderColor","borderRadius","borderWidth","style","padding","fontSize","color","height","shapes","bindingsClassName","bindings","circleAnnotation","className","start","e","coords","pointer","getCoordinates","coordsX","xAxis","coordsY","yAxis","addAnnotation","langKey","type","point","x","value","y","axis","index","r","annotationsOptions","steps","annotation","distance","mockPointOpts","inverted","toPixels","Math","max","sqrt","pow","chartX","chartY","ellipseAnnotation","points","ry","annotationOptions","target","position","getAbsolutePosition","translatePoint","position2","newR","getDistanceFromLine","getYAxis","newRY","abs","toValue","setYRadius","rectangleAnnotation","command","labelAnnotation","overflow","crop","events","animation","defer","D","F","H","NavigationBindingDefaults","setOptions","doc","win","getFieldType","addEvent","attr","defined","fireEvent","isArray","isFunction","isObject","objectEach","pick","composedMembers","onAnnotationRemove","navigationBindings","deselectAnnotation","onChartDestroy","destroy","onChartLoad","NavigationBindings","initEvents","initUpdate","onChartRender","disabledClassName","buttonsEnabled","series","isInternal","visible","container","boundClassNames","key","buttonNode","querySelectorAll","i","length","button","cls","noDataState","indexOf","classList","remove","onNavigationBindingsClosePopup","onNavigationBindingsDeselectButton","selectedButtonElement","selectableAnnotation","annotationType","touchStartX","touchStartY","originalClick","prototype","defaultOptions","click","selectAndShowPopup","eventArguments","prevAnnotation","activeAnnotation","setControlPointsVisibility","formType","annotationToFields","onSubmit","data","actionType","removeAnnotation","config","fieldsToOptions","fields","crosshairY","enabled","crosshairX","touchstart","touches","clientX","clientY","touchend","hasMoved","changedTouches","AnnotationClass","ChartClass","pushUnique","types","selectedButton","eventsToUnbind","getElementsByClassName","bindingsContainer","subContainer","event","getButtonEvents","contains","bindingsButtonClick","callback","eventName","passive","cancelClick","isInsidePlot","plotLeft","plotTop","visiblePlotOnly","bindingsChartClick","isTouchDevice","bindingsContainerMouseMove","clickEvent","svgContainer","renderer","boxWrapper","shouldEventBeFired","nextEvent","currentUserDetails","coll","mouseMoveEvent","init","addClass","stockTools","toggleButtonActiveClass","removeClass","parentNode","closestPolyfill","el","s","ElementProto","Element","elementMatches","matches","msMatchesSelector","webkitMatchesSelector","ret","closest","parentElement","nodeType","setTimeout","stepIndex","end","_container","moveEvent","field","parsedValue","parseFloat","split","pathLength","match","parent","nextName","editables","annotationsEditable","nestedEditables","nestedOptions","nonEditables","annotationsNonEditable","visualOptions","traverse","option","parentEditables","parentKey","nextParent","arrayOption","nestedOption","nestedKey","toString","typeOption","typeKey","getClickedClassNames","element","classNames","elemClassName","tagName","concat","map","removeEvents","unbinder","background","innerBackground","outerBackground","line","connector","verticalLine","measure","fibonacci","tunnel","pitchfork","rect","crookedLine","basicAnnotation","Series","getOptions","uniqueKey","indicatorsWithAxes","indicatorsWithVolume","attractToPoint","distX","Number","MAX_VALUE","closestPoint","below","addFlagFromForm","toolbar","pointConfig","seriesOptions","onSeries","id","shape","updated","guiEnabled","addSeries","isNotNavigatorYAxis","userOptions","isPriceIndicatorEnabled","some","lastVisiblePrice","lastPrice","manageIndicators","parentSeries","seriesConfig","linkedTo","get","seriesId","linkedSeries","removedYAxisProps","top","resizeYAxes","plotOptions","getDGApproximation","dataGrouping","approximation","addAxis","offset","opposite","text","tickPixelInterval","showLastLabel","align","params","volumeSeriesID","filter","updateHeight","horiz","updateNthPoint","startIndex","updateRectSize","width","STU","StockToolsBindings","segment","arrowSegment","markerEnd","ray","arrowRay","infinityLine","arrowInfinityLine","horizontalLine","draggable","crooked3","crooked5","elliott3","elliott5","measureX","selectType","measureY","measureXY","parallelChannel","controlPoint","verticalCounter","timeCycles","verticalLabel","verticalArrow","fibonacciTimeZones","flagCirclepin","flagDiamondpin","flagSquarepin","flagSimplepin","zoomX","zooming","zoomY","zoomXY","seriesTypeLine","useOhlcData","seriesTypeOhlc","seriesTypeCandlestick","seriesTypeHeikinAshi","seriesTypeHLC","seriesTypeHollowCandlestick","fullScreen","fullscreen","toggle","currentPriceIndicator","gui","priceIndicatorEnabled","indicators","toggleAnnotations","iconsURL","getIconsURL","toggledAnnotations","annotations","setVisibility","firstChild","saveChart","flags","yAxes","is","localStorage","setItem","JSON","stringify","crookedLines","advanced","verticalLabels","zoomChange","typeChange","typeOHLC","typeLine","typeCandlestick","typeHLC","typeHollowCandlestick","typeHeikinAshi","addButton","saveButton","editButton","removeButton","volume","noFilterMatch","searchIndicators","clearFilter","period","periods","standardDeviation","periodTenkan","periodSenkouSpanB","periodATR","multiplierATR","shortPeriod","longPeriod","signalPeriod","decimals","algorithm","topBand","bottomBand","initialAccelerationFactor","maxAccelerationFactor","increment","multiplier","ranges","highIndex","lowIndex","deviation","xAxisUnit","factor","fastAvgPeriod","slowAvgPeriod","average","indicatorAliases","abands","bb","dema","ema","ikh","keltnerchannels","linearRegression","pivotpoints","pc","priceenvelopes","psar","sma","supertrend","tema","vbp","vwap","wma","zigzag","apo","ad","aroon","aroonoscillator","atr","ao","cci","chaikin","cmf","cmo","disparityindex","dmi","dpo","klinger","linearRegressionAngle","linearRegressionIntercept","linearRegressionSlope","macd","mfi","momentum","natr","obv","ppo","roc","rsi","slowstochastic","stochastic","trix","williamsr","toolbarClassName","buttons","definitions","separator","symbol","items","StockToolsDefaults","correctFloat","navigationGetYAxisPositions","plotHeight","defaultHeight","allAxesHeight","previousAxisHeight","removedHeight","removedTop","isPercentage","prop","positions","every","navigationGetYAxisResizers","resizers","_yAxis","nextYAxis","controlledAxis","next","navigationRecalculateYAxisPositions","changedSpace","modifyHeight","adder","prevPosition","navigationResizeYAxes","getYAxisPositions","getYAxisResizers","resize","NavigationBindingsClass","navigationProto","recalculateYAxisPositions","utils","createElement","css","getStyle","Toolbar","langOptions","arrowDown","arrowUp","arrowWrapper","listWrapper","showhideBtn","submenu","wrapper","placed","createHTML","showHideNavigatorion","guiOptions","defs","allButtons","childNodes","btnName","buttonWrapper","eraseActiveButtons","addSubmenu","parentBtn","submenuArrow","buttonWidth","menuWrapper","submenuWrapper","addSubmenuItems","stopPropagation","startWidth","display","topMargin","offsetHeight","offsetTop","left","offsetWidth","submenuBtn","_self","mainButton","switchSymbol","firstSubmenuItem","currentButton","submenuItems","btn","btnOptions","classMapping","userClassName","backgroundImage","addNavigation","insertBefore","scrollButtons","step","targetY","marginTop","appendChild","eventType","onContainerMouseLeave","showHideToolbar","add","buttonWrapperClass","mainNavButton","trim","unselectAllButtons","activeBtns","activeBtn","setStockTools","isDirtyBox","stockToolsDiv","removeChild","chartSetStockTools","chartOptions","onChartAfterGetContainer","onChartBeforeRedraw","optionsChart","dirty","plotWidth","nextX","spacingLeft","spacing","diff","spacingBox","prevOffsetWidth","isDirtyLegend","onChartGetMargins","onChartRedraw","querySelector","onNavigationBindingsSelectButton","order","StockTools","StockToolsGui","G","Chart"],"mappings":"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"}
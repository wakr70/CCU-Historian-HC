{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2021 Rafał Sebestjański\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/dema', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/DEMA/DEMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The DEMA series Type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dema\n         *\n         * @augments Highcharts.Series\n         */\n        class DEMAIndicator extends EMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.EMApercent = void 0;\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEMA(yVal, prevEMA, SMA, index, i, xVal) {\n                return super.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, this.EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getValues(series, params) {\n                const period = params.period, EMAvalues = [], doubledPeriod = 2 * period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, DEMA = [], xDataDema = [], yDataDema = [];\n                let accumulatePeriodPoints = 0, EMA = 0, \n                // EMA(EMA)\n                EMAlevel2, \n                // EMA of previous point\n                prevEMA, prevEMAlevel2, \n                // EMA values array\n                i, index = -1, DEMAPoint, SMA = 0;\n                this.EMApercent = (2 / (period + 1));\n                // Check period, if bigger than EMA points length, skip\n                if (yValLen < 2 * period - 1) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                accumulatePeriodPoints =\n                    super.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                SMA = accumulatePeriodPoints / period;\n                accumulatePeriodPoints = 0;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 2; i++) {\n                    if (i < yValLen + 1) {\n                        EMA = this.getEMA(yVal, prevEMA, SMA, index, i)[1];\n                        EMAvalues.push(EMA);\n                    }\n                    prevEMA = EMA;\n                    // Summing first period points for EMA(EMA)\n                    if (i < doubledPeriod) {\n                        accumulatePeriodPoints += EMA;\n                    }\n                    else {\n                        // Calculate DEMA\n                        // First DEMA point\n                        if (i === doubledPeriod) {\n                            SMA = accumulatePeriodPoints / period;\n                        }\n                        EMA = EMAvalues[i - period - 1];\n                        EMAlevel2 = this.getEMA([EMA], prevEMAlevel2, SMA)[1];\n                        DEMAPoint = [\n                            xVal[i - 2],\n                            correctFloat(2 * EMA - EMAlevel2)\n                        ];\n                        DEMA.push(DEMAPoint);\n                        xDataDema.push(DEMAPoint[0]);\n                        yDataDema.push(DEMAPoint[1]);\n                        prevEMAlevel2 = EMAlevel2;\n                    }\n                }\n                return {\n                    values: DEMA,\n                    xData: xDataDema,\n                    yData: yDataDema\n                };\n            }\n        }\n        /**\n         * Double exponential moving average (DEMA) indicator. This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/dema\n         *         DEMA indicator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dema\n         * @optionparent plotOptions.dema\n         */\n        DEMAIndicator.defaultOptions = merge(EMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('dema', DEMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `DEMA` series. If the [type](#series.dema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dema\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dema\n         * @apioption series.dema\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return DEMAIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/dema.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","SeriesRegistry","U","ema","EMAIndicator","seriesTypes","correctFloat","isArray","merge","DEMAIndicator","constructor","arguments","EMApercent","data","options","points","getEMA","yVal","prevEMA","SMA","index","i","xVal","calculateEma","getValues","series","params","period","EMAvalues","doubledPeriod","xData","yData","yValLen","length","DEMA","xDataDema","yDataDema","accumulatePeriodPoints","EMA","EMAlevel2","prevEMAlevel2","DEMAPoint","push","values","defaultOptions","registerSeriesType"],"mappings":"AAAA;;;;;;;;CAQC,GACA,SAAUA,CAAO,EACV,AAAkB,UAAlB,OAAOC,QAAuBA,OAAOC,OAAO,EAC5CF,EAAQ,OAAU,CAAGA,EACrBC,OAAOC,OAAO,CAAGF,GACV,AAAkB,YAAlB,OAAOG,QAAyBA,OAAOC,GAAG,CACjDD,OAAO,6BAA8B,CAAC,aAAc,2BAA2B,CAAE,SAAUE,CAAU,EAGjG,OAFAL,EAAQK,GACRL,EAAQK,UAAU,CAAGA,EACdL,CACX,GAEAA,EAAQ,AAAsB,aAAtB,OAAOK,WAA6BA,WAAaC,KAAAA,EAEjE,EAAE,SAAUD,CAAU,EAClB,aACA,IAAIE,EAAWF,EAAaA,EAAWE,QAAQ,CAAG,CAAC,EACnD,SAASC,EAAgBC,CAAG,CAAEC,CAAI,CAAEC,CAAI,CAAEC,CAAE,EACnCH,EAAII,cAAc,CAACH,KACpBD,CAAG,CAACC,EAAK,CAAGE,EAAGE,KAAK,CAAC,KAAMH,GAEA,YAAvB,OAAOI,aACPC,OAAOC,aAAa,CAAC,IAAIF,YACrB,yBACA,CAAEG,OAAQ,CAAER,KAAMA,EAAMT,OAAQQ,CAAG,CAACC,EAAK,AAAC,CAAE,IAI5D,CACAF,EAAgBD,EAAU,yCAA0C,CAACA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAc,CAAEC,CAAC,EAQvK,GAAM,CAAEC,IAAKC,CAAY,CAAE,CAAGH,EAAeI,WAAW,CAClD,CAAEC,aAAAA,CAAY,CAAEC,QAAAA,CAAO,CAAEC,MAAAA,CAAK,CAAE,CAAGN,CAezC,OAAMO,UAAsBL,EACxBM,aAAc,CAMV,KAAK,IAAIC,WAMT,IAAI,CAACC,UAAU,CAAG,KAAK,EACvB,IAAI,CAACC,IAAI,CAAG,KAAK,EACjB,IAAI,CAACC,OAAO,CAAG,KAAK,EACpB,IAAI,CAACC,MAAM,CAAG,KAAK,CACvB,CAMAC,OAAOC,CAAI,CAAEC,CAAO,CAAEC,CAAG,CAAEC,CAAK,CAAEC,CAAC,CAAEC,CAAI,CAAE,CACvC,OAAO,KAAK,CAACC,aAAaD,GAAQ,EAAE,CAAEL,EAAM,AAAa,KAAA,IAANI,EAAoB,EAAIA,EAAG,IAAI,CAACT,UAAU,CAAEM,EAAS,AAAiB,KAAA,IAAVE,EAAwB,GAAKA,EAAOD,EACvJ,CACAK,UAAUC,CAAM,CAAEC,CAAM,CAAE,CACtB,IAAMC,EAASD,EAAOC,MAAM,CAAEC,EAAY,EAAE,CAAEC,EAAgB,EAAIF,EAAQL,EAAOG,EAAOK,KAAK,CAAEb,EAAOQ,EAAOM,KAAK,CAAEC,EAAUf,EAAOA,EAAKgB,MAAM,CAAG,EAAGC,EAAO,EAAE,CAAEC,EAAY,EAAE,CAAEC,EAAY,EAAE,CAC3LC,EAAyB,EAAGC,EAAM,EAEtCC,EAEArB,EAASsB,EAETnB,EAAGD,EAAQ,GAAIqB,EAAWtB,EAAM,EAGhC,GAFA,IAAI,CAACP,UAAU,CAAI,EAAKe,CAAAA,EAAS,CAAA,GAE7BK,CAAAA,EAAU,EAAIL,EAAS,CAAA,GAc3B,IAVIpB,EAAQU,CAAI,CAAC,EAAE,GACfG,CAAAA,EAAQM,EAAON,KAAK,CAAGM,EAAON,KAAK,CAAG,CAAA,EAM1CD,EAAMkB,AAHNA,CAAAA,EACI,KAAK,CAACA,uBAAuBV,EAAQP,EAAOH,EAAI,EAErBU,EAC/BU,EAAyB,EAEpBhB,EAAIM,EAAQN,EAAIW,EAAU,EAAGX,IAC1BA,EAAIW,EAAU,IACdM,EAAM,IAAI,CAACtB,MAAM,CAACC,EAAMC,EAASC,EAAKC,EAAOC,EAAE,CAAC,EAAE,CAClDO,EAAUc,IAAI,CAACJ,IAEnBpB,EAAUoB,EAENjB,EAAIQ,EACJQ,GAA0BC,GAKtBjB,IAAMQ,GACNV,CAAAA,EAAMkB,EAAyBV,CAAK,EAExCW,EAAMV,CAAS,CAACP,EAAIM,EAAS,EAAE,CAC/BY,EAAY,IAAI,CAACvB,MAAM,CAAC,CAACsB,EAAI,CAAEE,EAAerB,EAAI,CAAC,EAAE,CACrDsB,EAAY,CACRnB,CAAI,CAACD,EAAI,EAAE,CACXf,EAAa,EAAIgC,EAAMC,GAC1B,CACDL,EAAKQ,IAAI,CAACD,GACVN,EAAUO,IAAI,CAACD,CAAS,CAAC,EAAE,EAC3BL,EAAUM,IAAI,CAACD,CAAS,CAAC,EAAE,EAC3BD,EAAgBD,GAGxB,MAAO,CACHI,OAAQT,EACRJ,MAAOK,EACPJ,MAAOK,CACX,EACJ,CACJ,CAgDA,OA5BA3B,EAAcmC,cAAc,CAAGpC,EAAMJ,EAAawC,cAAc,EAChE3C,EAAe4C,kBAAkB,CAAC,OAAQpC,GA2BnCA,CACX,GACAnB,EAAgBD,EAAU,iCAAkC,EAAE,CAAE,WAGhE,EACJ"}
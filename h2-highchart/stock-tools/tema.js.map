{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2021 Rafal Sebestjanski\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/tema', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/TEMA/TEMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The TEMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.tema\n         *\n         * @augments Highcharts.Series\n         */\n        class TEMAIndicator extends EMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.EMApercent = void 0;\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEMA(yVal, prevEMA, SMA, index, i, xVal) {\n                return super.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, this.EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getTemaPoint(xVal, tripledPeriod, EMAlevels, i) {\n                const TEMAPoint = [\n                    xVal[i - 3],\n                    correctFloat(3 * EMAlevels.level1 -\n                        3 * EMAlevels.level2 + EMAlevels.level3)\n                ];\n                return TEMAPoint;\n            }\n            getValues(series, params) {\n                const period = params.period, doubledPeriod = 2 * period, tripledPeriod = 3 * period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, tema = [], xDataTema = [], yDataTema = [], \n                // EMA values array\n                emaValues = [], emaLevel2Values = [], \n                // This object contains all EMA EMAlevels calculated like below\n                // EMA = level1\n                // EMA(EMA) = level2,\n                // EMA(EMA(EMA)) = level3,\n                emaLevels = {};\n                let index = -1, accumulatePeriodPoints = 0, sma = 0, \n                // EMA of previous point\n                prevEMA, prevEMAlevel2, i, temaPoint;\n                this.EMApercent = (2 / (period + 1));\n                // Check period, if bigger than EMA points length, skip\n                if (yValLen < 3 * period - 2) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                accumulatePeriodPoints = super.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                sma = accumulatePeriodPoints / period;\n                accumulatePeriodPoints = 0;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 3; i++) {\n                    if (i < yValLen + 1) {\n                        emaLevels.level1 = this.getEMA(yVal, prevEMA, sma, index, i)[1];\n                        emaValues.push(emaLevels.level1);\n                    }\n                    prevEMA = emaLevels.level1;\n                    // Summing first period points for ema(ema)\n                    if (i < doubledPeriod) {\n                        accumulatePeriodPoints += emaLevels.level1;\n                    }\n                    else {\n                        // Calculate dema\n                        // First dema point\n                        if (i === doubledPeriod) {\n                            sma = accumulatePeriodPoints / period;\n                            accumulatePeriodPoints = 0;\n                        }\n                        emaLevels.level1 = emaValues[i - period - 1];\n                        emaLevels.level2 = this.getEMA([emaLevels.level1], prevEMAlevel2, sma)[1];\n                        emaLevel2Values.push(emaLevels.level2);\n                        prevEMAlevel2 = emaLevels.level2;\n                        // Summing first period points for ema(ema(ema))\n                        if (i < tripledPeriod) {\n                            accumulatePeriodPoints += emaLevels.level2;\n                        }\n                        else {\n                            // Calculate tema\n                            // First tema point\n                            if (i === tripledPeriod) {\n                                sma = accumulatePeriodPoints / period;\n                            }\n                            if (i === yValLen + 1) {\n                                // Calculate the last ema and emaEMA points\n                                emaLevels.level1 = emaValues[i - period - 1];\n                                emaLevels.level2 = this.getEMA([emaLevels.level1], prevEMAlevel2, sma)[1];\n                                emaLevel2Values.push(emaLevels.level2);\n                            }\n                            emaLevels.level1 = emaValues[i - period - 2];\n                            emaLevels.level2 = emaLevel2Values[i - 2 * period - 1];\n                            emaLevels.level3 = this.getEMA([emaLevels.level2], emaLevels.prevLevel3, sma)[1];\n                            temaPoint = this.getTemaPoint(xVal, tripledPeriod, emaLevels, i);\n                            // Make sure that point exists (for TRIX oscillator)\n                            if (temaPoint) {\n                                tema.push(temaPoint);\n                                xDataTema.push(temaPoint[0]);\n                                yDataTema.push(temaPoint[1]);\n                            }\n                            emaLevels.prevLevel3 = emaLevels.level3;\n                        }\n                    }\n                }\n                return {\n                    values: tema,\n                    xData: xDataTema,\n                    yData: yDataTema\n                };\n            }\n        }\n        /**\n         * Triple exponential moving average (TEMA) indicator. This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/tema\n         *         TEMA indicator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/tema\n         * @optionparent plotOptions.tema\n         */\n        TEMAIndicator.defaultOptions = merge(EMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('tema', TEMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TEMA` series. If the [type](#series.tema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.tema\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/tema\n         * @apioption series.tema\n         */\n        ''; // to include the above in the js output\n\n        return TEMAIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/tema.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","SeriesRegistry","U","ema","EMAIndicator","seriesTypes","correctFloat","isArray","merge","TEMAIndicator","constructor","arguments","EMApercent","data","options","points","getEMA","yVal","prevEMA","SMA","index","i","xVal","calculateEma","getTemaPoint","tripledPeriod","EMAlevels","TEMAPoint","level1","level2","level3","getValues","series","params","period","doubledPeriod","xData","yData","yValLen","length","tema","xDataTema","yDataTema","emaValues","emaLevel2Values","emaLevels","accumulatePeriodPoints","sma","prevEMAlevel2","temaPoint","push","prevLevel3","values","defaultOptions","registerSeriesType"],"mappings":"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"}
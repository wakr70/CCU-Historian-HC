{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * All technical indicators for Highcharts Stock\n *\n * (c) 2010-2021 Pawel Fus\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/indicators-all', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/SMA/SMAIndicator.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Chart, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { line: LineSeries } = SeriesRegistry.seriesTypes;\n        const { addEvent, fireEvent, error, extend, isArray, merge, pick, splat } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         */\n        class SMAIndicator extends LineSeries {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.dataEventsToUnbind = void 0;\n                this.linkedParent = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            destroy() {\n                this.dataEventsToUnbind.forEach(function (unbinder) {\n                    unbinder();\n                });\n                super.destroy.apply(this, arguments);\n            }\n            /**\n             * @private\n             */\n            getName() {\n                const params = [];\n                let name = this.name;\n                if (!name) {\n                    (this.nameComponents || []).forEach(function (component, index) {\n                        params.push(this.options.params[component] +\n                            pick(this.nameSuffixes[index], ''));\n                    }, this);\n                    name = (this.nameBase || this.type.toUpperCase()) +\n                        (this.nameComponents ? ' (' + params.join(', ') + ')' : '');\n                }\n                return name;\n            }\n            /**\n             * @private\n             */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal.length, SMA = [], xData = [], yData = [];\n                let i, index = -1, range = 0, SMAPoint, sum = 0;\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                while (range < period - 1) {\n                    sum += index < 0 ? yVal[range] : yVal[range][index];\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    sum += index < 0 ? yVal[i] : yVal[i][index];\n                    SMAPoint = [xVal[i], sum / period];\n                    SMA.push(SMAPoint);\n                    xData.push(SMAPoint[0]);\n                    yData.push(SMAPoint[1]);\n                    sum -= (index < 0 ?\n                        yVal[i - range] :\n                        yVal[i - range][index]);\n                }\n                return {\n                    values: SMA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            /**\n             * @private\n             */\n            init(chart, options) {\n                const indicator = this;\n                super.init.call(indicator, chart, options);\n                // Only after series are linked indicator can be processed.\n                const linkedSeriesUnbiner = addEvent(Chart, 'afterLinkSeries', function ({ isUpdating }) {\n                    // #18643 indicator shouldn't recalculate\n                    // values while series updating.\n                    if (isUpdating) {\n                        return;\n                    }\n                    const hasEvents = !!indicator.dataEventsToUnbind.length;\n                    if (indicator.linkedParent) {\n                        if (!hasEvents) {\n                            // No matter which indicator, always recalculate after\n                            // updating the data.\n                            indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent, 'updatedData', function () {\n                                indicator.recalculateValues();\n                            }));\n                            // Some indicators (like VBP) requires an additional\n                            // event (afterSetExtremes) to properly show the data.\n                            if (indicator.calculateOn.xAxis) {\n                                indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent.xAxis, indicator.calculateOn.xAxis, function () {\n                                    indicator.recalculateValues();\n                                }));\n                            }\n                        }\n                        // Most indicators are being calculated on chart's init.\n                        if (indicator.calculateOn.chart === 'init') {\n                            if (!indicator.processedYData) {\n                                indicator.recalculateValues();\n                            }\n                        }\n                        else if (!hasEvents) {\n                            // Some indicators (like VBP) has to recalculate their\n                            // values after other chart's events (render).\n                            const unbinder = addEvent(indicator.chart, indicator.calculateOn.chart, function () {\n                                indicator.recalculateValues();\n                                // Call this just once.\n                                unbinder();\n                            });\n                        }\n                    }\n                    else {\n                        return error('Series ' +\n                            indicator.options.linkedTo +\n                            ' not found! Check `linkedTo`.', false, chart);\n                    }\n                }, {\n                    order: 0\n                });\n                // Make sure we find series which is a base for an indicator\n                // chart.linkSeries();\n                indicator.dataEventsToUnbind = [];\n                indicator.eventsToUnbind.push(linkedSeriesUnbiner);\n            }\n            /**\n             * @private\n             */\n            recalculateValues() {\n                const croppedDataValues = [], indicator = this, oldData = indicator.points || [], oldDataLength = (indicator.xData || []).length, emptySet = {\n                    values: [],\n                    xData: [],\n                    yData: []\n                };\n                let overwriteData = true, oldFirstPointIndex, oldLastPointIndex, croppedData, min, max, i;\n                // Updating an indicator with redraw=false may destroy data.\n                // If there will be a following update for the parent series,\n                // we will try to access Series object without any properties\n                // (except for prototyped ones). This is what happens\n                // for example when using Axis.setDataGrouping(). See #16670\n                const processedData = indicator.linkedParent.options &&\n                    indicator.linkedParent.yData && // #18176, #18177 indicators should\n                    indicator.linkedParent.yData.length ? // work with empty dataset\n                    (indicator.getValues(indicator.linkedParent, indicator.options.params) || emptySet) : emptySet;\n                // We need to update points to reflect changes in all,\n                // x and y's, values. However, do it only for non-grouped\n                // data - grouping does it for us (#8572)\n                if (oldDataLength &&\n                    !indicator.hasGroupedData &&\n                    indicator.visible &&\n                    indicator.points) {\n                    // When data is cropped update only avaliable points (#9493)\n                    if (indicator.cropped) {\n                        if (indicator.xAxis) {\n                            min = indicator.xAxis.min;\n                            max = indicator.xAxis.max;\n                        }\n                        croppedData = indicator.cropData(processedData.xData, processedData.yData, min, max);\n                        for (i = 0; i < croppedData.xData.length; i++) {\n                            // (#10774)\n                            croppedDataValues.push([\n                                croppedData.xData[i]\n                            ].concat(splat(croppedData.yData[i])));\n                        }\n                        oldFirstPointIndex = processedData.xData.indexOf(indicator.xData[0]);\n                        oldLastPointIndex = processedData.xData.indexOf(indicator.xData[indicator.xData.length - 1]);\n                        // Check if indicator points should be shifted (#8572)\n                        if (oldFirstPointIndex === -1 &&\n                            oldLastPointIndex === processedData.xData.length - 2) {\n                            if (croppedDataValues[0][0] === oldData[0].x) {\n                                croppedDataValues.shift();\n                            }\n                        }\n                        indicator.updateData(croppedDataValues);\n                    }\n                    else if (indicator.updateAllPoints || // #18710\n                        // Omit addPoint() and removePoint() cases\n                        processedData.xData.length !== oldDataLength - 1 &&\n                            processedData.xData.length !== oldDataLength + 1) {\n                        overwriteData = false;\n                        indicator.updateData(processedData.values);\n                    }\n                }\n                if (overwriteData) {\n                    indicator.xData = processedData.xData;\n                    indicator.yData = processedData.yData;\n                    indicator.options.data = processedData.values;\n                }\n                // Removal of processedXData property is required because on\n                // first translate processedXData array is empty\n                if (indicator.calculateOn.xAxis && indicator.processedXData) {\n                    delete indicator.processedXData;\n                    indicator.isDirty = true;\n                    indicator.redraw();\n                }\n                indicator.isDirtyData = !!indicator.linkedSeries.length;\n                fireEvent(indicator, 'updatedData'); // #18689\n            }\n            /**\n             * @private\n             */\n            processData() {\n                const series = this, compareToMain = series.options.compareToMain, linkedParent = series.linkedParent;\n                super.processData.apply(series, arguments);\n                if (series.dataModify &&\n                    linkedParent &&\n                    linkedParent.dataModify &&\n                    linkedParent.dataModify.compareValue &&\n                    compareToMain) {\n                    series.dataModify.compareValue =\n                        linkedParent.dataModify.compareValue;\n                }\n                return;\n            }\n        }\n        /**\n         * The parameter allows setting line series type and use OHLC indicators.\n         * Data in OHLC format is required.\n         *\n         * @sample {highstock} stock/indicators/use-ohlc-data\n         *         Use OHLC data format to plot line chart\n         *\n         * @type      {boolean}\n         * @product   highstock\n         * @apioption plotOptions.line.useOhlcData\n         */\n        /**\n         * Simple moving average indicator (SMA). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/sma\n         *         Simple moving average indicator\n         *\n         * @extends      plotOptions.line\n         * @since        6.0.0\n         * @excluding    allAreas, colorAxis, dragDrop, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking, useOhlcData\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @optionparent plotOptions.sma\n         */\n        SMAIndicator.defaultOptions = merge(LineSeries.defaultOptions, {\n            /**\n             * The name of the series as shown in the legend, tooltip etc. If not\n             * set, it will be based on a technical indicator type and default\n             * params.\n             *\n             * @type {string}\n             */\n            name: void 0,\n            tooltip: {\n                /**\n                 * Number of decimals in indicator series.\n                 */\n                valueDecimals: 4\n            },\n            /**\n             * The main series ID that indicator will be based on. Required for this\n             * indicator.\n             *\n             * @type {string}\n             */\n            linkedTo: void 0,\n            /**\n             * Whether to compare indicator to the main series values\n             * or indicator values.\n             *\n             * @sample {highstock} stock/plotoptions/series-comparetomain/\n             *         Difference between comparing SMA values to the main series\n             *         and its own values.\n             *\n             * @type {boolean}\n             */\n            compareToMain: false,\n            /**\n             * Paramters used in calculation of regression series' points.\n             */\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                index: 3,\n                /**\n                 * The base period for indicator calculations. This is the number of\n                 * data points which are taken into account for the indicator\n                 * calculations.\n                 */\n                period: 14\n            }\n        });\n        extend(SMAIndicator.prototype, {\n            calculateOn: {\n                chart: 'init'\n            },\n            hasDerivedData: true,\n            nameComponents: ['period'],\n            nameSuffixes: [],\n            useCommonDataGrouping: true\n        });\n        SeriesRegistry.registerSeriesType('sma', SMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `SMA` series. If the [type](#series.sma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.sma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, useOhlcData\n         * @requires  stock/indicators/indicators\n         * @apioption series.sma\n         */\n        (''); // adds doclet above to the transpiled file\n\n        return SMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/EMA/EMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The EMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ema\n         *\n         * @augments Highcharts.Series\n         */\n        class EMAIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            accumulatePeriodPoints(period, index, yVal) {\n                let sum = 0, i = 0, y = 0;\n                while (i < period) {\n                    y = index < 0 ? yVal[i] : yVal[i][index];\n                    sum = sum + y;\n                    i++;\n                }\n                return sum;\n            }\n            calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA) {\n                const x = xVal[i - 1], yValue = index < 0 ?\n                    yVal[i - 1] :\n                    yVal[i - 1][index], y = typeof calEMA === 'undefined' ?\n                    SMA : correctFloat((yValue * EMApercent) +\n                    (calEMA * (1 - EMApercent)));\n                return [x, y];\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, EMApercent = 2 / (period + 1), EMA = [], xData = [], yData = [];\n                let calEMA, EMAPoint, i, index = -1, sum = 0, SMA = 0;\n                // Check period, if bigger than points length, skip\n                if (yValLen < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                sum = this.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                SMA = sum / period;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 1; i++) {\n                    EMAPoint = this.calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA);\n                    EMA.push(EMAPoint);\n                    xData.push(EMAPoint[0]);\n                    yData.push(EMAPoint[1]);\n                    calEMA = EMAPoint[1];\n                }\n                return {\n                    values: EMA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Exponential moving average indicator (EMA). This series requires the\n         * `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/ema\n         * Exponential moving average indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @optionparent plotOptions.ema\n         */\n        EMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 *\n                 * By default index value used to be set to 0. Since\n                 * Highcharts Stock 7 by default index is set to 3\n                 * which means that the ema indicator will be\n                 * calculated using Close values.\n                 */\n                index: 3,\n                period: 9 // @merge 14 in v6.2\n            }\n        });\n        SeriesRegistry.registerSeriesType('ema', EMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `EMA` series. If the [type](#series.ema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ema\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @apioption series.ema\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return EMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/AD/ADIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { error, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AD series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ad\n         *\n         * @augments Highcharts.Series\n         */\n        class ADIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static populateAverage(xVal, yVal, yValVolume, i, _period) {\n                const high = yVal[i][1], low = yVal[i][2], close = yVal[i][3], volume = yValVolume[i], adY = close === high && close === low || high === low ?\n                    0 :\n                    ((2 * close - low - high) / (high - low)) * volume, adX = xVal[i];\n                return [adX, adY];\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, volumeSeriesID = params.volumeSeriesID, volumeSeries = series.chart.get(volumeSeriesID), yValVolume = volumeSeries && volumeSeries.yData, yValLen = yVal ? yVal.length : 0, AD = [], xData = [], yData = [];\n                let len, i, ADPoint;\n                if (xVal.length <= period &&\n                    yValLen &&\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                if (!volumeSeries) {\n                    error('Series ' +\n                        volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                // i = period <-- skip first N-points\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen; i++) {\n                    len = AD.length;\n                    ADPoint = ADIndicator.populateAverage(xVal, yVal, yValVolume, i, period);\n                    if (len > 0) {\n                        ADPoint[1] += AD[len - 1][1];\n                    }\n                    AD.push(ADPoint);\n                    xData.push(ADPoint[0]);\n                    yData.push(ADPoint[1]);\n                }\n                return {\n                    values: AD,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Accumulation Distribution (AD). This series requires `linkedTo` option to\n         * be set.\n         *\n         * @sample stock/indicators/accumulation-distribution\n         *         Accumulation/Distribution indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/accumulation-distribution\n         * @optionparent plotOptions.ad\n         */\n        ADIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 *\n                 * @since 6.0.0\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        extend(ADIndicator.prototype, {\n            nameComponents: false,\n            nameBase: 'Accumulation/Distribution'\n        });\n        SeriesRegistry.registerSeriesType('ad', ADIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `AD` series. If the [type](#series.ad.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ad\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/accumulation-distribution\n         * @apioption series.ad\n         */\n        ''; // add doclet above to transpiled file\n\n        return ADIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/AO/AOIndicator.js', [_modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { noop } = H;\n        const { column: { prototype: columnProto }, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, correctFloat, isArray } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AO series type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ao\n         *\n         * @augments Highcharts.Series\n         */\n        class AOIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            drawGraph() {\n                const indicator = this, options = indicator.options, points = indicator.points, userColor = indicator.userOptions.color, positiveColor = options.greaterBarColor, negativeColor = options.lowerBarColor, firstPoint = points[0];\n                let i;\n                if (!userColor && firstPoint) {\n                    firstPoint.color = positiveColor;\n                    for (i = 1; i < points.length; i++) {\n                        if (points[i].y > points[i - 1].y) {\n                            points[i].color = positiveColor;\n                        }\n                        else if (points[i].y < points[i - 1].y) {\n                            points[i].color = negativeColor;\n                        }\n                        else {\n                            points[i].color = points[i - 1].color;\n                        }\n                    }\n                }\n            }\n            getValues(series) {\n                const shortPeriod = 5, longPeriod = 34, xVal = series.xData || [], yVal = series.yData || [], yValLen = yVal.length, AO = [], // 0- date, 1- Awesome Oscillator\n                xData = [], yData = [], high = 1, low = 2;\n                let shortSMA, // Shorter Period SMA\n                longSMA, // Longer Period SMA\n                awesome, shortLastIndex, longLastIndex, price, i, j, longSum = 0, shortSum = 0;\n                if (xVal.length <= longPeriod ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = 0; i < longPeriod - 1; i++) {\n                    price = (yVal[i][high] + yVal[i][low]) / 2;\n                    if (i >= longPeriod - shortPeriod) {\n                        shortSum = correctFloat(shortSum + price);\n                    }\n                    longSum = correctFloat(longSum + price);\n                }\n                for (j = longPeriod - 1; j < yValLen; j++) {\n                    price = (yVal[j][high] + yVal[j][low]) / 2;\n                    shortSum = correctFloat(shortSum + price);\n                    longSum = correctFloat(longSum + price);\n                    shortSMA = shortSum / shortPeriod;\n                    longSMA = longSum / longPeriod;\n                    awesome = correctFloat(shortSMA - longSMA);\n                    AO.push([xVal[j], awesome]);\n                    xData.push(xVal[j]);\n                    yData.push(awesome);\n                    shortLastIndex = j + 1 - shortPeriod;\n                    longLastIndex = j + 1 - longPeriod;\n                    shortSum = correctFloat(shortSum -\n                        (yVal[shortLastIndex][high] +\n                            yVal[shortLastIndex][low]) / 2);\n                    longSum = correctFloat(longSum -\n                        (yVal[longLastIndex][high] +\n                            yVal[longLastIndex][low]) / 2);\n                }\n                return {\n                    values: AO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Awesome Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`\n         *\n         * @sample {highstock} stock/indicators/ao\n         *         Awesome\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               params, pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/ao\n         * @optionparent plotOptions.ao\n         */\n        AOIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0\n            },\n            /**\n             * Color of the Awesome oscillator series bar that is greater than the\n             * previous one. Note that if a `color` is defined, the `color`\n             * takes precedence and the `greaterBarColor` is ignored.\n             *\n             * @sample {highstock} stock/indicators/ao/\n             *         greaterBarColor\n             *\n             * @type  {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since 7.0.0\n             */\n            greaterBarColor: \"#06b535\" /* Palette.positiveColor */,\n            /**\n             * Color of the Awesome oscillator series bar that is lower than the\n             * previous one. Note that if a `color` is defined, the `color`\n             * takes precedence and the `lowerBarColor` is ignored.\n             *\n             * @sample {highstock} stock/indicators/ao/\n             *         lowerBarColor\n             *\n             * @type  {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since 7.0.0\n             */\n            lowerBarColor: \"#f21313\" /* Palette.negativeColor */,\n            threshold: 0,\n            groupPadding: 0.2,\n            pointPadding: 0.2,\n            crisp: false,\n            states: {\n                hover: {\n                    halo: {\n                        size: 0\n                    }\n                }\n            }\n        });\n        extend(AOIndicator.prototype, {\n            nameBase: 'AO',\n            nameComponents: false,\n            // Columns support:\n            markerAttribs: noop,\n            getColumnMetrics: columnProto.getColumnMetrics,\n            crispCol: columnProto.crispCol,\n            translate: columnProto.translate,\n            drawPoints: columnProto.drawPoints\n        });\n        SeriesRegistry.registerSeriesType('ao', AOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `AO` series. If the [type](#series.ao.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ao\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ao\n         * @apioption series.ao\n         */\n        ''; // for including the above in the doclets\n\n        return AOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MultipleLinesComposition.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2021 Wojciech Chmiel\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: { prototype: smaProto } } = SeriesRegistry.seriesTypes;\n        const { defined, error, merge } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var MultipleLinesComposition;\n        (function (MultipleLinesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n            *\n            *  Constants\n            *\n            * */\n            const composedMembers = [];\n            /**\n             * Additional lines DOCS names. Elements of linesApiNames array should\n             * be consistent with DOCS line names defined in your implementation.\n             * Notice that linesApiNames should have decreased amount of elements\n             * relative to pointArrayMap (without pointValKey).\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            const linesApiNames = ['bottomLine'];\n            /**\n             * Lines ids. Required to plot appropriate amount of lines.\n             * Notice that pointArrayMap should have more elements than\n             * linesApiNames, because it contains main line and additional lines ids.\n             * Also it should be consistent with amount of lines calculated in\n             * getValues method from your implementation.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            const pointArrayMap = ['top', 'bottom'];\n            /**\n             * Names of the lines, bewteen which the area should be plotted.\n             * If the drawing of the area should\n             * be disabled for some indicators, leave this option as an empty array.\n             * Names should be the same as the names in the pointArrayMap.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            const areaLinesNames = ['top'];\n            /**\n             * Main line id.\n             *\n             * @private\n             * @type {string}\n             */\n            const pointValKey = 'top';\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Composition useful for all indicators that have more than one line.\n             * Compose it with your implementation where you will provide the\n             * `getValues` method appropriate to your indicator and `pointArrayMap`,\n             * `pointValKey`, `linesApiNames` properties. Notice that `pointArrayMap`\n             * should be consistent with the amount of lines calculated in the\n             * `getValues` method.\n             *\n             * @private\n             */\n            function compose(IndicatorClass) {\n                if (U.pushUnique(composedMembers, IndicatorClass)) {\n                    const proto = IndicatorClass.prototype;\n                    proto.linesApiNames = (proto.linesApiNames ||\n                        linesApiNames.slice());\n                    proto.pointArrayMap = (proto.pointArrayMap ||\n                        pointArrayMap.slice());\n                    proto.pointValKey = (proto.pointValKey ||\n                        pointValKey);\n                    proto.areaLinesNames = (proto.areaLinesNames ||\n                        areaLinesNames.slice());\n                    proto.drawGraph = indicatorDrawGraph;\n                    proto.getGraphPath = indicatorGetGraphPath;\n                    proto.toYData = indicatorToYData;\n                    proto.translate = indicatorTranslate;\n                }\n                return IndicatorClass;\n            }\n            MultipleLinesComposition.compose = compose;\n            /**\n             * Generate the API name of the line\n             *\n             * @private\n             * @param propertyName name of the line\n             */\n            function getLineName(propertyName) {\n                return ('plot' +\n                    propertyName.charAt(0).toUpperCase() +\n                    propertyName.slice(1));\n            }\n            /**\n             * Create translatedLines Collection based on pointArrayMap.\n             *\n             * @private\n             * @param {string} [excludedValue]\n             *        Main line id\n             * @return {Array<string>}\n             *         Returns translated lines names without excluded value.\n             */\n            function getTranslatedLinesNames(indicator, excludedValue) {\n                const translatedLines = [];\n                (indicator.pointArrayMap || []).forEach((propertyName) => {\n                    if (propertyName !== excludedValue) {\n                        translatedLines.push(getLineName(propertyName));\n                    }\n                });\n                return translatedLines;\n            }\n            /**\n             * Draw main and additional lines.\n             *\n             * @private\n             */\n            function indicatorDrawGraph() {\n                const indicator = this, pointValKey = indicator.pointValKey, linesApiNames = indicator.linesApiNames, areaLinesNames = indicator.areaLinesNames, mainLinePoints = indicator.points, mainLineOptions = indicator.options, mainLinePath = indicator.graph, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, \n                // additional lines point place holders:\n                secondaryLines = [], secondaryLinesNames = getTranslatedLinesNames(indicator, pointValKey);\n                let pointsLength = mainLinePoints.length, point;\n                // Generate points for additional lines:\n                secondaryLinesNames.forEach((plotLine, index) => {\n                    // create additional lines point place holders\n                    secondaryLines[index] = [];\n                    while (pointsLength--) {\n                        point = mainLinePoints[pointsLength];\n                        secondaryLines[index].push({\n                            x: point.x,\n                            plotX: point.plotX,\n                            plotY: point[plotLine],\n                            isNull: !defined(point[plotLine])\n                        });\n                    }\n                    pointsLength = mainLinePoints.length;\n                });\n                // Modify options and generate area fill:\n                if (indicator.userOptions.fillColor && areaLinesNames.length) {\n                    const index = secondaryLinesNames.indexOf(getLineName(areaLinesNames[0])), secondLinePoints = secondaryLines[index], firstLinePoints = areaLinesNames.length === 1 ?\n                        mainLinePoints :\n                        secondaryLines[secondaryLinesNames.indexOf(getLineName(areaLinesNames[1]))], originalColor = indicator.color;\n                    indicator.points = firstLinePoints;\n                    indicator.nextPoints = secondLinePoints;\n                    indicator.color = indicator.userOptions.fillColor;\n                    indicator.options = merge(mainLinePoints, gappedExtend);\n                    indicator.graph = indicator.area;\n                    indicator.fillGraph = true;\n                    smaProto.drawGraph.call(indicator);\n                    indicator.area = indicator.graph;\n                    // Clean temporary properties:\n                    delete indicator.nextPoints;\n                    delete indicator.fillGraph;\n                    indicator.color = originalColor;\n                }\n                // Modify options and generate additional lines:\n                linesApiNames.forEach((lineName, i) => {\n                    if (secondaryLines[i]) {\n                        indicator.points = secondaryLines[i];\n                        if (mainLineOptions[lineName]) {\n                            indicator.options = merge(mainLineOptions[lineName].styles, gappedExtend);\n                        }\n                        else {\n                            error('Error: \"There is no ' + lineName +\n                                ' in DOCS options declared. Check if linesApiNames' +\n                                ' are consistent with your DOCS line names.\"');\n                        }\n                        indicator.graph = indicator['graph' + lineName];\n                        smaProto.drawGraph.call(indicator);\n                        // Now save lines:\n                        indicator['graph' + lineName] = indicator.graph;\n                    }\n                    else {\n                        error('Error: \"' + lineName + ' doesn\\'t have equivalent ' +\n                            'in pointArrayMap. To many elements in linesApiNames ' +\n                            'relative to pointArrayMap.\"');\n                    }\n                });\n                // Restore options and draw a main line:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.graph = mainLinePath;\n                smaProto.drawGraph.call(indicator);\n            }\n            /**\n             * Create the path based on points provided as argument.\n             * If indicator.nextPoints option is defined, create the areaFill.\n             *\n             * @private\n             * @param points Points on which the path should be created\n             */\n            function indicatorGetGraphPath(points) {\n                let areaPath, path = [], higherAreaPath = [];\n                points = points || this.points;\n                // Render Span\n                if (this.fillGraph && this.nextPoints) {\n                    areaPath = smaProto.getGraphPath.call(this, this.nextPoints);\n                    if (areaPath && areaPath.length) {\n                        areaPath[0][0] = 'L';\n                        path = smaProto.getGraphPath.call(this, points);\n                        higherAreaPath = areaPath.slice(0, path.length);\n                        // Reverse points, so that the areaFill will start from the end:\n                        for (let i = higherAreaPath.length - 1; i >= 0; i--) {\n                            path.push(higherAreaPath[i]);\n                        }\n                    }\n                }\n                else {\n                    path = smaProto.getGraphPath.apply(this, arguments);\n                }\n                return path;\n            }\n            /**\n             * @private\n             * @param {Highcharts.Point} point\n             *        Indicator point\n             * @return {Array<number>}\n             *         Returns point Y value for all lines\n             */\n            function indicatorToYData(point) {\n                const pointColl = [];\n                (this.pointArrayMap || []).forEach((propertyName) => {\n                    pointColl.push(point[propertyName]);\n                });\n                return pointColl;\n            }\n            /**\n             * Add lines plot pixel values.\n             *\n             * @private\n             */\n            function indicatorTranslate() {\n                const pointArrayMap = this.pointArrayMap;\n                let LinesNames = [], value;\n                LinesNames = getTranslatedLinesNames(this);\n                smaProto.translate.apply(this, arguments);\n                this.points.forEach((point) => {\n                    pointArrayMap.forEach((propertyName, i) => {\n                        value = point[propertyName];\n                        // If the modifier, like for example compare exists,\n                        // modified the original value by that method, #15867.\n                        if (this.dataModify) {\n                            value = this.dataModify.modifyValue(value);\n                        }\n                        if (value !== null) {\n                            point[LinesNames[i]] = this.yAxis.toPixels(value, true);\n                        }\n                    });\n                });\n            }\n        })(MultipleLinesComposition || (MultipleLinesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return MultipleLinesComposition;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Aroon/AroonIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils\n        // Index of element with extreme value from array (min or max)\n        /**\n         * @private\n         */\n        function getExtremeIndexInArray(arr, extreme) {\n            let extremeValue = arr[0], valueIndex = 0, i;\n            for (i = 1; i < arr.length; i++) {\n                if (extreme === 'max' && arr[i] >= extremeValue ||\n                    extreme === 'min' && arr[i] <= extremeValue) {\n                    extremeValue = arr[i];\n                    valueIndex = i;\n                }\n            }\n            return valueIndex;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Aroon series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.aroon\n         *\n         * @augments Highcharts.Series\n         */\n        class AroonIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1- Aroon Up, 2- Aroon Down\n                AR = [], xData = [], yData = [], low = 2, high = 1;\n                let aroonUp, aroonDown, xLow, xHigh, i, slicedY;\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = period - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - period + 1, i + 2);\n                    xLow = getExtremeIndexInArray(slicedY.map(function (elem) {\n                        return pick(elem[low], elem);\n                    }), 'min');\n                    xHigh = getExtremeIndexInArray(slicedY.map(function (elem) {\n                        return pick(elem[high], elem);\n                    }), 'max');\n                    aroonUp = (xHigh / period) * 100;\n                    aroonDown = (xLow / period) * 100;\n                    if (xVal[i + 1]) {\n                        AR.push([xVal[i + 1], aroonUp, aroonDown]);\n                        xData.push(xVal[i + 1]);\n                        yData.push([aroonUp, aroonDown]);\n                    }\n                }\n                return {\n                    values: AR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Aroon. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/aroon\n         *         Aroon\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/aroon\n         * @optionparent plotOptions.aroon\n         */\n        AroonIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of aroon series points.\n             *\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 25\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'\n            },\n            /**\n             * aroonDown line options.\n             */\n            aroonDown: {\n                /**\n                 * Styles for an aroonDown line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.aroon.color](#plotOptions.aroon.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(AroonIndicator.prototype, {\n            areaLinesNames: [],\n            linesApiNames: ['aroonDown'],\n            nameBase: 'Aroon',\n            pointArrayMap: ['y', 'aroonDown'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(AroonIndicator);\n        SeriesRegistry.registerSeriesType('aroon', AroonIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Aroon indicator. If the [type](#series.aroon.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.aroon\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/aroon\n         * @apioption series.aroon\n         */\n        ''; // to avoid removal of the above jsdoc\n\n        return AroonIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/AroonOscillator/AroonOscillatorIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { aroon: AroonIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Aroon Oscillator series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.aroonoscillator\n         *\n         * @augments Highcharts.Series\n         */\n        class AroonOscillatorIndicator extends AroonIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                // 0- date, 1- Aroon Oscillator\n                const ARO = [], xData = [], yData = [];\n                let aroonUp, aroonDown, oscillator, i;\n                const aroon = super.getValues.call(this, series, params);\n                for (i = 0; i < aroon.yData.length; i++) {\n                    aroonUp = aroon.yData[i][0];\n                    aroonDown = aroon.yData[i][1];\n                    oscillator = aroonUp - aroonDown;\n                    ARO.push([aroon.xData[i], oscillator]);\n                    xData.push(aroon.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: ARO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Aroon Oscillator. This series requires the `linkedTo` option to be set\n         * and should be loaded after the `stock/indicators/indicators.js` and\n         * `stock/indicators/aroon.js`.\n         *\n         * @sample {highstock} stock/indicators/aroon-oscillator\n         *         Aroon Oscillator\n         *\n         * @extends      plotOptions.aroon\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, aroonDown, colorAxis, compare, compareBase,\n         *               joinBy, keys, navigatorOptions, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *               showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/aroon\n         * @requires     stock/indicators/aroon-oscillator\n         * @optionparent plotOptions.aroonoscillator\n         */\n        AroonOscillatorIndicator.defaultOptions = merge(AroonIndicator.defaultOptions, {\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b>: {point.y}'\n            }\n        });\n        extend(AroonOscillatorIndicator.prototype, {\n            nameBase: 'Aroon Oscillator',\n            linesApiNames: [],\n            pointArrayMap: ['y'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(AroonIndicator);\n        SeriesRegistry.registerSeriesType('aroonoscillator', AroonOscillatorIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `Aroon Oscillator` series. If the [type](#series.aroonoscillator.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.aroonoscillator\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, aroonDown, colorAxis, compare, compareBase, dataParser,\n         *            dataURL, joinBy, keys, navigatorOptions, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *            showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/aroon\n         * @requires  stock/indicators/aroon-oscillator\n         * @apioption series.aroonoscillator\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return AroonOscillatorIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ATR/ATRIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulateAverage(points, xVal, yVal, i) {\n            const xValue = xVal[i], yValue = yVal[i];\n            points.push([xValue, yValue]);\n        }\n        /**\n         * @private\n         */\n        function getTR(currentPoint, prevPoint) {\n            const pointY = currentPoint, prevY = prevPoint, HL = pointY[1] - pointY[2], HCp = typeof prevY === 'undefined' ? 0 : Math.abs(pointY[1] - prevY[3]), LCp = typeof prevY === 'undefined' ? 0 : Math.abs(pointY[2] - prevY[3]), TR = Math.max(HL, HCp, LCp);\n            return TR;\n        }\n        /**\n         * @private\n         */\n        function populateAverage(points, xVal, yVal, i, period, prevATR) {\n            const x = xVal[i - 1], TR = getTR(yVal[i - 1], yVal[i - 2]), y = (((prevATR * (period - 1)) + TR) / period);\n            return [x, y];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ATR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.atr\n         *\n         * @augments Highcharts.Series\n         */\n        class ATRIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.points = void 0;\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, xValue = xVal[0], yValue = yVal[0], points = [[xValue, yValue]], ATR = [], xData = [], yData = [];\n                let point, i, prevATR = 0, range = 1, TR = 0;\n                if ((xVal.length <= period) ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = 1; i <= yValLen; i++) {\n                    accumulateAverage(points, xVal, yVal, i);\n                    if (period < range) {\n                        point = populateAverage(points, xVal, yVal, i, period, prevATR);\n                        prevATR = point[1];\n                        ATR.push(point);\n                        xData.push(point[0]);\n                        yData.push(point[1]);\n                    }\n                    else if (period === range) {\n                        prevATR = TR / (i - 1);\n                        ATR.push([xVal[i - 1], prevATR]);\n                        xData.push(xVal[i - 1]);\n                        yData.push(prevATR);\n                        range++;\n                    }\n                    else {\n                        TR += getTR(yVal[i - 1], yVal[i - 2]);\n                        range++;\n                    }\n                }\n                return {\n                    values: ATR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Average true range indicator (ATR). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/atr\n         *         ATR indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/atr\n         * @optionparent plotOptions.atr\n         */\n        ATRIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            }\n        });\n        SeriesRegistry.registerSeriesType('atr', ATRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `ATR` series. If the [type](#series.atr.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.atr\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/atr\n         * @apioption series.atr\n         */\n        ''; // to include the above in the js output\n\n        return ATRIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/BB/BBIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /**\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function getStandardDeviation(arr, index, isOHLC, mean) {\n            const arrLen = arr.length;\n            let i = 0, std = 0, value, variance = 0;\n            for (; i < arrLen; i++) {\n                value = (isOHLC ? arr[i][index] : arr[i]) - mean;\n                variance += value * value;\n            }\n            variance = variance / (arrLen - 1);\n            std = Math.sqrt(variance);\n            return std;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Bollinger Bands series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.bb\n         *\n         * @augments Highcharts.Series\n         */\n        class BBIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                SeriesRegistry.seriesTypes.sma.prototype.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    topLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    bottomLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const period = params.period, standardDeviation = params.standardDeviation, xData = [], yData = [], xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-middle line, 2-top line, 3-bottom line\n                BB = [];\n                // middle line, top line and bottom line\n                let ML, TL, BL, date, slicedX, slicedY, stdDev, point, i;\n                if (xVal.length < period) {\n                    return;\n                }\n                const isOHLC = isArray(yVal[0]);\n                for (i = period; i <= yValLen; i++) {\n                    slicedX = xVal.slice(i - period, i);\n                    slicedY = yVal.slice(i - period, i);\n                    point = SeriesRegistry.seriesTypes.sma.prototype.getValues.call(this, {\n                        xData: slicedX,\n                        yData: slicedY\n                    }, params);\n                    date = point.xData[0];\n                    ML = point.yData[0];\n                    stdDev = getStandardDeviation(slicedY, params.index, isOHLC, ML);\n                    TL = ML + standardDeviation * stdDev;\n                    BL = ML - standardDeviation * stdDev;\n                    BB.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: BB,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Bollinger bands (BB). This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/bollinger-bands\n         *         Bollinger bands\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/bollinger-bands\n         * @optionparent plotOptions.bb\n         */\n        BBIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Bollinger Bands Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type      {Highcharts.ColorType}\n             * @since     9.3.2\n             * @apioption plotOptions.bb.fillColor\n             */\n            /**\n             * Parameters used in calculation of the regression points.\n             */\n            params: {\n                period: 20,\n                /**\n                 * Standard deviation for top and bottom bands.\n                 */\n                standardDeviation: 2,\n                index: 3\n            },\n            /**\n             * Bottom line options.\n             */\n            bottomLine: {\n                /**\n                 * Styles for the bottom line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.bb.color](#plotOptions.bb.color).\n                     *\n                     * @type  {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * Top line options.\n             *\n             * @extends plotOptions.bb.bottomLine\n             */\n            topLine: {\n                /**\n                 * Styles for the top line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.bb.color](#plotOptions.bb.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'\n            },\n            marker: {\n                enabled: false\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(BBIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            nameComponents: ['period', 'standardDeviation'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(BBIndicator);\n        SeriesRegistry.registerSeriesType('bb', BBIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A bollinger bands indicator. If the [type](#series.bb.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.bb\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/bollinger-bands\n         * @apioption series.bb\n         */\n        ''; // to include the above in the js output\n\n        return BBIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/CCI/CCIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function sumArray(array) {\n            return array.reduce(function (prev, cur) {\n                return prev + cur;\n            }, 0);\n        }\n        /**\n         * @private\n         */\n        function meanDeviation(arr, sma) {\n            const len = arr.length;\n            let sum = 0, i;\n            for (i = 0; i < len; i++) {\n                sum += Math.abs(sma - (arr[i]));\n            }\n            return sum;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CCI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cci\n         *\n         * @augments Highcharts.Series\n         */\n        class CCIIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.points = void 0;\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, TP = [], CCI = [], xData = [], yData = [];\n                let CCIPoint, p, periodTP = [], len, range = 1, smaTP, TPtemp, meanDev, i;\n                // CCI requires close value\n                if (xVal.length <= period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // accumulate first N-points\n                while (range < period) {\n                    p = yVal[range - 1];\n                    TP.push((p[1] + p[2] + p[3]) / 3);\n                    range++;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    p = yVal[i - 1];\n                    TPtemp = (p[1] + p[2] + p[3]) / 3;\n                    len = TP.push(TPtemp);\n                    periodTP = TP.slice(len - period);\n                    smaTP = sumArray(periodTP) / period;\n                    meanDev = meanDeviation(periodTP, smaTP) / period;\n                    CCIPoint = ((TPtemp - smaTP) / (0.015 * meanDev));\n                    CCI.push([xVal[i - 1], CCIPoint]);\n                    xData.push(xVal[i - 1]);\n                    yData.push(CCIPoint);\n                }\n                return {\n                    values: CCI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Commodity Channel Index (CCI). This series requires `linkedTo` option to\n         * be set.\n         *\n         * @sample stock/indicators/cci\n         *         CCI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cci\n         * @optionparent plotOptions.cci\n         */\n        CCIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            }\n        });\n        SeriesRegistry.registerSeriesType('cci', CCIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CCI` series. If the [type](#series.cci.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cci\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cci\n         * @apioption series.cci\n         */\n        ''; // to include the above in the js output\n\n        return CCIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/CMF/CMFIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Highsoft AS\n         *\n         *  Author: Sebastian Domas\n         *\n         *  Chaikin Money Flow indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CMF series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cmf\n         *\n         * @augments Highcharts.Series\n         */\n        class CMFIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n                this.volumeSeries = void 0;\n                this.linkedParent = void 0;\n                this.yData = void 0;\n                this.nameBase = 'Chaikin Money Flow';\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Checks if the series and volumeSeries are accessible, number of\n             * points.x is longer than period, is series has OHLC data\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @return {boolean} True if series is valid and can be computed,\n             * otherwise false.\n             */\n            isValid() {\n                const chart = this.chart, options = this.options, series = this.linkedParent, volumeSeries = (this.volumeSeries ||\n                    (this.volumeSeries =\n                        chart.get(options.params.volumeSeriesID))), isSeriesOHLC = (series &&\n                    series.yData &&\n                    series.yData[0].length === 4);\n                /**\n                 * @private\n                 * @param {Highcharts.Series} serie to check length validity on.\n                 * @return {boolean|undefined} true if length is valid.\n                 */\n                function isLengthValid(serie) {\n                    return serie.xData &&\n                        serie.xData.length >= options.params.period;\n                }\n                return !!(series &&\n                    volumeSeries &&\n                    isLengthValid(series) &&\n                    isLengthValid(volumeSeries) && isSeriesOHLC);\n            }\n            /**\n             * Returns indicator's data.\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @param {Highcharts.Series} series to calculate values from\n             * @param {Highcharts.CMFIndicatorParamsOptions} params to pass\n             * @return {boolean|Highcharts.IndicatorNullableValuesObject} Returns false if the\n             * indicator is not valid, otherwise returns Values object.\n             */\n            getValues(series, params) {\n                if (!this.isValid()) {\n                    return;\n                }\n                return this.getMoneyFlow(series.xData, series.yData, this.volumeSeries.yData, params.period);\n            }\n            /**\n             * @private\n             *\n             * @param {Array<number>} xData\n             * x timestamp values\n             *\n             * @param {Array<number>} seriesYData\n             * yData of basic series\n             *\n             * @param {Array<number>} volumeSeriesYData\n             * yData of volume series\n             *\n             * @param {number} period\n             * indicator's param\n             *\n             * @return {Highcharts.IndicatorNullableValuesObject}\n             * object containing computed money flow data\n             */\n            getMoneyFlow(xData, seriesYData, volumeSeriesYData, period) {\n                const len = seriesYData.length, moneyFlowVolume = [], moneyFlowXData = [], moneyFlowYData = [], values = [];\n                let i, point, nullIndex = -1, sumVolume = 0, sumMoneyFlowVolume = 0;\n                /**\n                 * Calculates money flow volume, changes i, nullIndex vars from\n                 * upper scope!\n                 *\n                 * @private\n                 *\n                 * @param {Array<number>} ohlc\n                 * OHLC point\n                 *\n                 * @param {number} volume\n                 * Volume point's y value\n                 *\n                 * @return {number|null}\n                 * Volume * moneyFlowMultiplier\n                 */\n                function getMoneyFlowVolume(ohlc, volume) {\n                    const high = ohlc[1], low = ohlc[2], close = ohlc[3], isValid = volume !== null &&\n                        high !== null &&\n                        low !== null &&\n                        close !== null &&\n                        high !== low;\n                    /**\n                     * @private\n                     * @param {number} h\n                     * High value\n                     * @param {number} l\n                     * Low value\n                     * @param {number} c\n                     * Close value\n                     * @return {number}\n                     * Calculated multiplier for the point\n                     */\n                    function getMoneyFlowMultiplier(h, l, c) {\n                        return ((c - l) - (h - c)) / (h - l);\n                    }\n                    return isValid ?\n                        getMoneyFlowMultiplier(high, low, close) * volume :\n                        ((nullIndex = i), null);\n                }\n                if (period > 0 && period <= len) {\n                    for (i = 0; i < period; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                    }\n                    moneyFlowXData.push(xData[i - 1]);\n                    moneyFlowYData.push(i - nullIndex >= period && sumVolume !== 0 ?\n                        sumMoneyFlowVolume / sumVolume :\n                        null);\n                    values.push([moneyFlowXData[0], moneyFlowYData[0]]);\n                    for (; i < len; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume -= volumeSeriesYData[i - period];\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume -= moneyFlowVolume[i - period];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                        point = [\n                            xData[i],\n                            i - nullIndex >= period ?\n                                sumMoneyFlowVolume / sumVolume :\n                                null\n                        ];\n                        moneyFlowXData.push(point[0]);\n                        moneyFlowYData.push(point[1]);\n                        values.push([point[0], point[1]]);\n                    }\n                }\n                return {\n                    values: values,\n                    xData: moneyFlowXData,\n                    yData: moneyFlowYData\n                };\n            }\n        }\n        /**\n         * Chaikin Money Flow indicator (cmf).\n         *\n         * @sample stock/indicators/cmf/\n         *         Chaikin Money Flow indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @excluding    animationLimit\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cmf\n         * @optionparent plotOptions.cmf\n         */\n        CMFIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indiator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        SeriesRegistry.registerSeriesType('cmf', CMFIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CMF` series. If the [type](#series.cmf.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cmf\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cmf\n         * @apioption series.cmf\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return CMFIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DMI/DMIIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *  (c) 2010-2021 Rafal Sebestjanski\n         *\n         *  Directional Movement Index (DMI) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Directional Movement Index (DMI) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dmi\n         *\n         * @augments Highcharts.Series\n         */\n        class DMIIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            calculateDM(yVal, i, isPositiveDM) {\n                const currentHigh = yVal[i][1], currentLow = yVal[i][2], previousHigh = yVal[i - 1][1], previousLow = yVal[i - 1][2];\n                let DM;\n                if (currentHigh - previousHigh > previousLow - currentLow) {\n                    // for +DM\n                    DM = isPositiveDM ? Math.max(currentHigh - previousHigh, 0) : 0;\n                }\n                else {\n                    // for -DM\n                    DM = !isPositiveDM ? Math.max(previousLow - currentLow, 0) : 0;\n                }\n                return correctFloat(DM);\n            }\n            calculateDI(smoothedDM, tr) {\n                return smoothedDM / tr * 100;\n            }\n            calculateDX(plusDI, minusDI) {\n                return correctFloat(Math.abs(plusDI - minusDI) / Math.abs(plusDI + minusDI) * 100);\n            }\n            smoothValues(accumulatedValues, currentValue, period) {\n                return correctFloat(accumulatedValues - accumulatedValues / period + currentValue);\n            }\n            getTR(currentPoint, prevPoint) {\n                return correctFloat(Math.max(\n                // currentHigh - currentLow\n                currentPoint[1] - currentPoint[2], \n                // currentHigh - previousClose\n                !prevPoint ? 0 : Math.abs(currentPoint[1] - prevPoint[3]), \n                // currentLow - previousClose\n                !prevPoint ? 0 : Math.abs(currentPoint[2] - prevPoint[3])));\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, DMI = [], xData = [], yData = [];\n                if (\n                // Check period, if bigger than points length, skip\n                (xVal.length <= period) ||\n                    // Only ohlc data is valid\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                let prevSmoothedPlusDM = 0, prevSmoothedMinusDM = 0, prevSmoothedTR = 0, i;\n                for (i = 1; i < yValLen; i++) {\n                    let smoothedPlusDM, smoothedMinusDM, smoothedTR, plusDM, // +DM\n                    minusDM, // -DM\n                    TR, plusDI, // +DI\n                    minusDI, // -DI\n                    DX;\n                    if (i <= period) {\n                        plusDM = this.calculateDM(yVal, i, true);\n                        minusDM = this.calculateDM(yVal, i);\n                        TR = this.getTR(yVal[i], yVal[i - 1]);\n                        // Accumulate first period values to smooth them later\n                        prevSmoothedPlusDM += plusDM;\n                        prevSmoothedMinusDM += minusDM;\n                        prevSmoothedTR += TR;\n                        // Get all values for the first point\n                        if (i === period) {\n                            plusDI = this.calculateDI(prevSmoothedPlusDM, prevSmoothedTR);\n                            minusDI = this.calculateDI(prevSmoothedMinusDM, prevSmoothedTR);\n                            DX = this.calculateDX(prevSmoothedPlusDM, prevSmoothedMinusDM);\n                            DMI.push([xVal[i], DX, plusDI, minusDI]);\n                            xData.push(xVal[i]);\n                            yData.push([DX, plusDI, minusDI]);\n                        }\n                    }\n                    else {\n                        // Calculate current values\n                        plusDM = this.calculateDM(yVal, i, true);\n                        minusDM = this.calculateDM(yVal, i);\n                        TR = this.getTR(yVal[i], yVal[i - 1]);\n                        // Smooth +DM, -DM and TR\n                        smoothedPlusDM = this.smoothValues(prevSmoothedPlusDM, plusDM, period);\n                        smoothedMinusDM = this.smoothValues(prevSmoothedMinusDM, minusDM, period);\n                        smoothedTR = this.smoothValues(prevSmoothedTR, TR, period);\n                        // Save current smoothed values for the next step\n                        prevSmoothedPlusDM = smoothedPlusDM;\n                        prevSmoothedMinusDM = smoothedMinusDM;\n                        prevSmoothedTR = smoothedTR;\n                        // Get all next points (except the first one calculated above)\n                        plusDI = this.calculateDI(prevSmoothedPlusDM, prevSmoothedTR);\n                        minusDI = this.calculateDI(prevSmoothedMinusDM, prevSmoothedTR);\n                        DX = this.calculateDX(prevSmoothedPlusDM, prevSmoothedMinusDM);\n                        DMI.push([xVal[i], DX, plusDI, minusDI]);\n                        xData.push(xVal[i]);\n                        yData.push([DX, plusDI, minusDI]);\n                    }\n                }\n                return {\n                    values: DMI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Directional Movement Index (DMI).\n         * This series requires the `linkedTo` option to be set and should\n         * be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/dmi\n         *         DMI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dmi\n         * @optionparent plotOptions.dmi\n         */\n        DMIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color: {point.color}\">' +\n                    '\\u25CF</span><b> {series.name}</b><br/>' +\n                    '<span style=\"color: {point.color}\">DX</span>: {point.y}<br/>' +\n                    '<span style=\"color: ' +\n                    '{point.series.options.plusDILine.styles.lineColor}\">' +\n                    '+DI</span>: {point.plusDI}<br/>' +\n                    '<span style=\"color: ' +\n                    '{point.series.options.minusDILine.styles.lineColor}\">' +\n                    '-DI</span>: {point.minusDI}<br/>'\n            },\n            /**\n             * +DI line options.\n             */\n            plusDILine: {\n                /**\n                 * Styles for the +DI line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: \"#06b535\" /* Palette.positiveColor */ // green-ish\n                }\n            },\n            /**\n             * -DI line options.\n             */\n            minusDILine: {\n                /**\n                 * Styles for the -DI line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: \"#f21313\" /* Palette.negativeColor */ // red-ish\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(DMIIndicator.prototype, {\n            areaLinesNames: [],\n            nameBase: 'DMI',\n            linesApiNames: ['plusDILine', 'minusDILine'],\n            pointArrayMap: ['y', 'plusDI', 'minusDI'],\n            parallelArrays: ['x', 'y', 'plusDI', 'minusDI'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(DMIIndicator);\n        SeriesRegistry.registerSeriesType('dmi', DMIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The Directional Movement Index (DMI) indicator series.\n         * If the [type](#series.dmi.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dmi\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dmi\n         * @apioption series.dmi\n         */\n        ''; // to include the above in the js output\n\n        return DMIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DPO/DPOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, correctFloat, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulatePoints(sum, yVal, i, index, subtract) {\n            const price = pick(yVal[i][index], yVal[i]);\n            if (subtract) {\n                return correctFloat(sum - price);\n            }\n            return correctFloat(sum + price);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The DPO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dpo\n         *\n         * @augments Highcharts.Series\n         */\n        class DPOIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *   Properties\n                 *\n                 * */\n                this.options = void 0;\n                this.data = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, index = params.index, offset = Math.floor(period / 2 + 1), range = period + offset, xVal = series.xData || [], yVal = series.yData || [], yValLen = yVal.length, \n                // 0- date, 1- Detrended Price Oscillator\n                DPO = [], xData = [], yData = [];\n                let oscillator, periodIndex, rangeIndex, price, i, j, sum = 0;\n                if (xVal.length <= range) {\n                    return;\n                }\n                // Accumulate first N-points for SMA\n                for (i = 0; i < period - 1; i++) {\n                    sum = accumulatePoints(sum, yVal, i, index);\n                }\n                // Detrended Price Oscillator formula:\n                // DPO = Price - Simple moving average [from (n / 2 + 1) days ago]\n                for (j = 0; j <= yValLen - range; j++) {\n                    periodIndex = j + period - 1;\n                    rangeIndex = j + range - 1;\n                    // adding the last period point\n                    sum = accumulatePoints(sum, yVal, periodIndex, index);\n                    price = pick(yVal[rangeIndex][index], yVal[rangeIndex]);\n                    oscillator = price - sum / period;\n                    // substracting the first period point\n                    sum = accumulatePoints(sum, yVal, j, index, true);\n                    DPO.push([xVal[rangeIndex], oscillator]);\n                    xData.push(xVal[rangeIndex]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: DPO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Detrended Price Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/dpo\n         *         Detrended Price Oscillator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dpo\n         * @optionparent plotOptions.dpo\n         */\n        DPOIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of Detrended Price Oscillator series\n             * points.\n             */\n            params: {\n                index: 0,\n                /**\n                 * Period for Detrended Price Oscillator\n                 */\n                period: 21\n            }\n        });\n        extend(DPOIndicator.prototype, {\n            nameBase: 'DPO'\n        });\n        SeriesRegistry.registerSeriesType('dpo', DPOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Detrended Price Oscillator. If the [type](#series.dpo.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dpo\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dpo\n         * @apioption series.dpo\n         */\n        ''; // to include the above in the js output'\n\n        return DPOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Chaikin/ChaikinIndicator.js', [_modules['Stock/Indicators/AD/ADIndicator.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AD, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge, error } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Chaikin series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.chaikin\n         *\n         * @augments Highcharts.Series\n         */\n        class ChaikinIndicator extends EMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, period = params.period, \n                // 0- date, 1- Chaikin Oscillator\n                CHA = [], xData = [], yData = [];\n                let oscillator, i;\n                // Check if periods are correct\n                if (periods.length !== 2 || periods[1] <= periods[0]) {\n                    error('Error: \"Chaikin requires two periods. Notice, first ' +\n                        'period should be lower than the second one.\"');\n                    return;\n                }\n                // Accumulation Distribution Line data\n                const ADL = AD.prototype.getValues.call(this, series, {\n                    volumeSeriesID: params.volumeSeriesID,\n                    period: period\n                });\n                // Check if adl is calculated properly, if not skip\n                if (!ADL) {\n                    return;\n                }\n                // Shorter Period EMA\n                const SPE = super.getValues.call(this, ADL, {\n                    period: periods[0]\n                });\n                // Longer Period EMA\n                const LPE = super.getValues.call(this, ADL, {\n                    period: periods[1]\n                });\n                // Check if ema is calculated properly, if not skip\n                if (!SPE || !LPE) {\n                    return;\n                }\n                const periodsOffset = periods[1] - periods[0];\n                for (i = 0; i < LPE.yData.length; i++) {\n                    oscillator = correctFloat(SPE.yData[i + periodsOffset] -\n                        LPE.yData[i]);\n                    CHA.push([LPE.xData[i], oscillator]);\n                    xData.push(LPE.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: CHA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Chaikin Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/chaikin\n         *         Chaikin Oscillator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/chaikin\n         * @optionparent plotOptions.chaikin\n         */\n        ChaikinIndicator.defaultOptions = merge(EMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Chaikin Oscillator\n             * series points.\n             *\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume',\n                /**\n                 * Parameter used indirectly for calculating the `AD` indicator.\n                 * Decides about the number of data points that are taken\n                 * into account for the indicator calculations.\n                 */\n                period: 9,\n                /**\n                 * Periods for Chaikin Oscillator calculations.\n                 *\n                 * @type    {Array<number>}\n                 * @default [3, 10]\n                 */\n                periods: [3, 10]\n            }\n        });\n        extend(ChaikinIndicator.prototype, {\n            nameBase: 'Chaikin Osc',\n            nameComponents: ['periods']\n        });\n        SeriesRegistry.registerSeriesType('chaikin', ChaikinIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Chaikin Oscillator` series. If the [type](#series.chaikin.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.chaikin\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, stacking, showInNavigator\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/chaikin\n         * @apioption series.chaikin\n         */\n        ''; // to include the above in the js output\n\n        return ChaikinIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/CMO/CMOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isNumber, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CMO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cmo\n         *\n         * @augments Highcharts.Series\n         */\n        class CMOIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, CMO = [], xData = [], yData = [];\n                let i, index = params.index, values;\n                if (xVal.length < period) {\n                    return;\n                }\n                if (isNumber(yVal[0])) {\n                    values = yVal;\n                }\n                else {\n                    // In case of the situation, where the series type has data length\n                    // shorter then 4 (HLC, range), this ensures that we are not trying\n                    // to reach the index out of bounds\n                    index = Math.min(index, yVal[0].length - 1);\n                    values = yVal.map((value) => value[index]);\n                }\n                let firstAddedSum = 0, sumOfHigherValues = 0, sumOfLowerValues = 0, y;\n                // Calculate first point, check if the first value\n                // was added to sum of higher/lower values, and what was the value.\n                for (let j = period; j > 0; j--) {\n                    if (values[j] > values[j - 1]) {\n                        sumOfHigherValues += values[j] - values[j - 1];\n                    }\n                    else if (values[j] < values[j - 1]) {\n                        sumOfLowerValues += values[j - 1] - values[j];\n                    }\n                }\n                // You might devide by 0 if all values are equal,\n                // so return 0 in this case.\n                y =\n                    sumOfHigherValues + sumOfLowerValues > 0 ?\n                        (100 * (sumOfHigherValues - sumOfLowerValues)) /\n                            (sumOfHigherValues + sumOfLowerValues) :\n                        0;\n                xData.push(xVal[period]);\n                yData.push(y);\n                CMO.push([xVal[period], y]);\n                for (i = period + 1; i < yValLen; i++) {\n                    firstAddedSum = Math.abs(values[i - period - 1] - values[i - period]);\n                    if (values[i] > values[i - 1]) {\n                        sumOfHigherValues += values[i] - values[i - 1];\n                    }\n                    else if (values[i] < values[i - 1]) {\n                        sumOfLowerValues += values[i - 1] - values[i];\n                    }\n                    // Check, to which sum was the first value added to,\n                    // and substract this value from given sum.\n                    if (values[i - period] > values[i - period - 1]) {\n                        sumOfHigherValues -= firstAddedSum;\n                    }\n                    else {\n                        sumOfLowerValues -= firstAddedSum;\n                    }\n                    // Same as above.\n                    y =\n                        sumOfHigherValues + sumOfLowerValues > 0 ?\n                            (100 * (sumOfHigherValues - sumOfLowerValues)) /\n                                (sumOfHigherValues + sumOfLowerValues) :\n                            0;\n                    xData.push(xVal[i]);\n                    yData.push(y);\n                    CMO.push([xVal[i], y]);\n                }\n                return {\n                    values: CMO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Chande Momentum Oscilator (CMO) technical indicator. This series\n         * requires the `linkedTo` option to be set and should be loaded after\n         * the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/cmo\n         *         CMO indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cmo\n         * @optionparent plotOptions.cmo\n         */\n        CMOIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                period: 20,\n                index: 3\n            }\n        });\n        SeriesRegistry.registerSeriesType('cmo', CMOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CMO` series. If the [type](#series.cmo.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cmo\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cmo\n         * @apioption series.cmo\n         */\n        (''); // to include the above in the js output\n\n        return CMOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DEMA/DEMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The DEMA series Type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dema\n         *\n         * @augments Highcharts.Series\n         */\n        class DEMAIndicator extends EMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.EMApercent = void 0;\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEMA(yVal, prevEMA, SMA, index, i, xVal) {\n                return super.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, this.EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getValues(series, params) {\n                const period = params.period, EMAvalues = [], doubledPeriod = 2 * period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, DEMA = [], xDataDema = [], yDataDema = [];\n                let accumulatePeriodPoints = 0, EMA = 0, \n                // EMA(EMA)\n                EMAlevel2, \n                // EMA of previous point\n                prevEMA, prevEMAlevel2, \n                // EMA values array\n                i, index = -1, DEMAPoint, SMA = 0;\n                this.EMApercent = (2 / (period + 1));\n                // Check period, if bigger than EMA points length, skip\n                if (yValLen < 2 * period - 1) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                accumulatePeriodPoints =\n                    super.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                SMA = accumulatePeriodPoints / period;\n                accumulatePeriodPoints = 0;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 2; i++) {\n                    if (i < yValLen + 1) {\n                        EMA = this.getEMA(yVal, prevEMA, SMA, index, i)[1];\n                        EMAvalues.push(EMA);\n                    }\n                    prevEMA = EMA;\n                    // Summing first period points for EMA(EMA)\n                    if (i < doubledPeriod) {\n                        accumulatePeriodPoints += EMA;\n                    }\n                    else {\n                        // Calculate DEMA\n                        // First DEMA point\n                        if (i === doubledPeriod) {\n                            SMA = accumulatePeriodPoints / period;\n                        }\n                        EMA = EMAvalues[i - period - 1];\n                        EMAlevel2 = this.getEMA([EMA], prevEMAlevel2, SMA)[1];\n                        DEMAPoint = [\n                            xVal[i - 2],\n                            correctFloat(2 * EMA - EMAlevel2)\n                        ];\n                        DEMA.push(DEMAPoint);\n                        xDataDema.push(DEMAPoint[0]);\n                        yDataDema.push(DEMAPoint[1]);\n                        prevEMAlevel2 = EMAlevel2;\n                    }\n                }\n                return {\n                    values: DEMA,\n                    xData: xDataDema,\n                    yData: yDataDema\n                };\n            }\n        }\n        /**\n         * Double exponential moving average (DEMA) indicator. This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/dema\n         *         DEMA indicator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dema\n         * @optionparent plotOptions.dema\n         */\n        DEMAIndicator.defaultOptions = merge(EMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('dema', DEMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `DEMA` series. If the [type](#series.dema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dema\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dema\n         * @apioption series.dema\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return DEMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/TEMA/TEMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The TEMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.tema\n         *\n         * @augments Highcharts.Series\n         */\n        class TEMAIndicator extends EMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.EMApercent = void 0;\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEMA(yVal, prevEMA, SMA, index, i, xVal) {\n                return super.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, this.EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getTemaPoint(xVal, tripledPeriod, EMAlevels, i) {\n                const TEMAPoint = [\n                    xVal[i - 3],\n                    correctFloat(3 * EMAlevels.level1 -\n                        3 * EMAlevels.level2 + EMAlevels.level3)\n                ];\n                return TEMAPoint;\n            }\n            getValues(series, params) {\n                const period = params.period, doubledPeriod = 2 * period, tripledPeriod = 3 * period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, tema = [], xDataTema = [], yDataTema = [], \n                // EMA values array\n                emaValues = [], emaLevel2Values = [], \n                // This object contains all EMA EMAlevels calculated like below\n                // EMA = level1\n                // EMA(EMA) = level2,\n                // EMA(EMA(EMA)) = level3,\n                emaLevels = {};\n                let index = -1, accumulatePeriodPoints = 0, sma = 0, \n                // EMA of previous point\n                prevEMA, prevEMAlevel2, i, temaPoint;\n                this.EMApercent = (2 / (period + 1));\n                // Check period, if bigger than EMA points length, skip\n                if (yValLen < 3 * period - 2) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                accumulatePeriodPoints = super.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                sma = accumulatePeriodPoints / period;\n                accumulatePeriodPoints = 0;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 3; i++) {\n                    if (i < yValLen + 1) {\n                        emaLevels.level1 = this.getEMA(yVal, prevEMA, sma, index, i)[1];\n                        emaValues.push(emaLevels.level1);\n                    }\n                    prevEMA = emaLevels.level1;\n                    // Summing first period points for ema(ema)\n                    if (i < doubledPeriod) {\n                        accumulatePeriodPoints += emaLevels.level1;\n                    }\n                    else {\n                        // Calculate dema\n                        // First dema point\n                        if (i === doubledPeriod) {\n                            sma = accumulatePeriodPoints / period;\n                            accumulatePeriodPoints = 0;\n                        }\n                        emaLevels.level1 = emaValues[i - period - 1];\n                        emaLevels.level2 = this.getEMA([emaLevels.level1], prevEMAlevel2, sma)[1];\n                        emaLevel2Values.push(emaLevels.level2);\n                        prevEMAlevel2 = emaLevels.level2;\n                        // Summing first period points for ema(ema(ema))\n                        if (i < tripledPeriod) {\n                            accumulatePeriodPoints += emaLevels.level2;\n                        }\n                        else {\n                            // Calculate tema\n                            // First tema point\n                            if (i === tripledPeriod) {\n                                sma = accumulatePeriodPoints / period;\n                            }\n                            if (i === yValLen + 1) {\n                                // Calculate the last ema and emaEMA points\n                                emaLevels.level1 = emaValues[i - period - 1];\n                                emaLevels.level2 = this.getEMA([emaLevels.level1], prevEMAlevel2, sma)[1];\n                                emaLevel2Values.push(emaLevels.level2);\n                            }\n                            emaLevels.level1 = emaValues[i - period - 2];\n                            emaLevels.level2 = emaLevel2Values[i - 2 * period - 1];\n                            emaLevels.level3 = this.getEMA([emaLevels.level2], emaLevels.prevLevel3, sma)[1];\n                            temaPoint = this.getTemaPoint(xVal, tripledPeriod, emaLevels, i);\n                            // Make sure that point exists (for TRIX oscillator)\n                            if (temaPoint) {\n                                tema.push(temaPoint);\n                                xDataTema.push(temaPoint[0]);\n                                yDataTema.push(temaPoint[1]);\n                            }\n                            emaLevels.prevLevel3 = emaLevels.level3;\n                        }\n                    }\n                }\n                return {\n                    values: tema,\n                    xData: xDataTema,\n                    yData: yDataTema\n                };\n            }\n        }\n        /**\n         * Triple exponential moving average (TEMA) indicator. This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/tema\n         *         TEMA indicator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/tema\n         * @optionparent plotOptions.tema\n         */\n        TEMAIndicator.defaultOptions = merge(EMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('tema', TEMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TEMA` series. If the [type](#series.tema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.tema\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/tema\n         * @apioption series.tema\n         */\n        ''; // to include the above in the js output\n\n        return TEMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/TRIX/TRIXIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { tema: TEMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The TRIX series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.trix\n         *\n         * @augments Highcharts.Series\n         */\n        class TRIXIndicator extends TEMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            // TRIX is calculated using TEMA so we just extend getTemaPoint method.\n            getTemaPoint(xVal, tripledPeriod, EMAlevels, i) {\n                if (i > tripledPeriod) {\n                    return [\n                        xVal[i - 3],\n                        EMAlevels.prevLevel3 !== 0 ?\n                            correctFloat(EMAlevels.level3 - EMAlevels.prevLevel3) /\n                                EMAlevels.prevLevel3 * 100 : null\n                    ];\n                }\n            }\n        }\n        /**\n         * Triple exponential average (TRIX) oscillator. This series requires\n         * `linkedTo` option to be set.\n         *\n         * @sample {highstock} stock/indicators/trix\n         * TRIX indicator\n         *\n         * @extends      plotOptions.tema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/tema\n         * @requires     stock/indicators/trix\n         * @optionparent plotOptions.trix\n         */\n        TRIXIndicator.defaultOptions = merge(TEMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('trix', TRIXIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TRIX` series. If the [type](#series.trix.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.trix\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/tema\n         * @apioption series.trix\n         */\n        ''; // to include the above in the js output\n\n        return TRIXIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/APO/APOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, error } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The APO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.apo\n         *\n         * @augments Highcharts.Series\n         */\n        class APOIndicator extends EMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, index = params.index, \n                // 0- date, 1- Absolute price oscillator\n                APO = [], xData = [], yData = [];\n                let oscillator, i;\n                // Check if periods are correct\n                if (periods.length !== 2 || periods[1] <= periods[0]) {\n                    error('Error: \"APO requires two periods. Notice, first period ' +\n                        'should be lower than the second one.\"');\n                    return;\n                }\n                // Shorter Period EMA\n                const SPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[0]\n                });\n                // Longer Period EMA\n                const LPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[1]\n                });\n                // Check if ema is calculated properly, if not skip\n                if (!SPE || !LPE) {\n                    return;\n                }\n                const periodsOffset = periods[1] - periods[0];\n                for (i = 0; i < LPE.yData.length; i++) {\n                    oscillator = (SPE.yData[i + periodsOffset] -\n                        LPE.yData[i]);\n                    APO.push([LPE.xData[i], oscillator]);\n                    xData.push(LPE.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: APO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Absolute Price Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/apo\n         *         Absolute Price Oscillator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/apo\n         * @optionparent plotOptions.apo\n         */\n        APOIndicator.defaultOptions = merge(EMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Absolute Price Oscillator\n             * series points.\n             *\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * Periods for Absolute Price Oscillator calculations.\n                 *\n                 * @type    {Array<number>}\n                 * @default [10, 20]\n                 * @since   7.0.0\n                 */\n                periods: [10, 20]\n            }\n        });\n        extend(APOIndicator.prototype, {\n            nameBase: 'APO',\n            nameComponents: ['periods']\n        });\n        SeriesRegistry.registerSeriesType('apo', APOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `Absolute Price Oscillator` series. If the [type](#series.apo.type) option\n         * is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.apo\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/apo\n         * @apioption series.apo\n         */\n        ''; // to include the above in the js output\n\n        return APOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/IKH/IKHIndicator.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, Color, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { parse: color } = Color;\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { defined, extend, isArray, isNumber, getClosestDistance, merge, objectEach } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function maxHigh(arr) {\n            return arr.reduce(function (max, res) {\n                return Math.max(max, res[1]);\n            }, -Infinity);\n        }\n        /**\n         * @private\n         */\n        function minLow(arr) {\n            return arr.reduce(function (min, res) {\n                return Math.min(min, res[2]);\n            }, Infinity);\n        }\n        /**\n         * @private\n         */\n        function highlowLevel(arr) {\n            return {\n                high: maxHigh(arr),\n                low: minLow(arr)\n            };\n        }\n        /**\n         * Check two lines intersection (line a1-a2 and b1-b2)\n         * Source: https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\n         * @private\n         */\n        function checkLineIntersection(a1, a2, b1, b2) {\n            if (a1 && a2 && b1 && b2) {\n                const saX = a2.plotX - a1.plotX, // Auxiliary section a2-a1 X\n                saY = a2.plotY - a1.plotY, // Auxiliary section a2-a1 Y\n                sbX = b2.plotX - b1.plotX, // Auxiliary section b2-b1 X\n                sbY = b2.plotY - b1.plotY, // Auxiliary section b2-b1 Y\n                sabX = a1.plotX - b1.plotX, // Auxiliary section a1-b1 X\n                sabY = a1.plotY - b1.plotY, // Auxiliary section a1-b1 Y\n                // First degree Bézier parameters\n                u = (-saY * sabX + saX * sabY) / (-sbX * saY + saX * sbY), t = (sbX * sabY - sbY * sabX) / (-sbX * saY + saX * sbY);\n                if (u >= 0 && u <= 1 && t >= 0 && t <= 1) {\n                    return {\n                        plotX: a1.plotX + t * saX,\n                        plotY: a1.plotY + t * saY\n                    };\n                }\n            }\n        }\n        /**\n         * Parameter opt (indicator options object) include indicator, points,\n         * nextPoints, color, options, gappedExtend and graph properties\n         * @private\n         */\n        function drawSenkouSpan(opt) {\n            const indicator = opt.indicator;\n            indicator.points = opt.points;\n            indicator.nextPoints = opt.nextPoints;\n            indicator.color = opt.color;\n            indicator.options = merge(opt.options.senkouSpan.styles, opt.gap);\n            indicator.graph = opt.graph;\n            indicator.fillGraph = true;\n            SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n        }\n        /**\n         * Data integrity in Ichimoku is different than default 'averages':\n         * Point: [undefined, value, value, ...] is correct\n         * Point: [undefined, undefined, undefined, ...] is incorrect\n         * @private\n         */\n        function ichimokuAverages() {\n            const ret = [];\n            let isEmptyRange;\n            [].forEach.call(arguments, function (arr, i) {\n                ret.push(ApproximationRegistry.average(arr));\n                isEmptyRange = !isEmptyRange && typeof ret[i] === 'undefined';\n            });\n            // Return undefined when first elem. is undefined and let\n            // sum method handle null (#7377)\n            return isEmptyRange ? void 0 : ret;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The IKH series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ikh\n         *\n         * @augments Highcharts.Series\n         */\n        class IKHIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = [];\n                this.options = {};\n                this.points = [];\n                this.graphCollection = [];\n            }\n            /* *\n             *\n             * Functions\n             *\n             * */\n            init() {\n                super.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    tenkanLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    kijunLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    chikouLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    senkouSpanA: {\n                        styles: {\n                            lineColor: this.color,\n                            fill: color(this.color).setOpacity(0.5).get()\n                        }\n                    },\n                    senkouSpanB: {\n                        styles: {\n                            lineColor: this.color,\n                            fill: color(this.color).setOpacity(0.5).get()\n                        }\n                    },\n                    senkouSpan: {\n                        styles: {\n                            fill: color(this.color).setOpacity(0.2).get()\n                        }\n                    }\n                }, this.options);\n            }\n            toYData(point) {\n                return [\n                    point.tenkanSen,\n                    point.kijunSen,\n                    point.chikouSpan,\n                    point.senkouSpanA,\n                    point.senkouSpanB\n                ];\n            }\n            translate() {\n                const indicator = this;\n                SeriesRegistry.seriesTypes.sma.prototype.translate.apply(indicator);\n                for (const point of indicator.points) {\n                    for (const key of indicator.pointArrayMap) {\n                        const pointValue = point[key];\n                        if (isNumber(pointValue)) {\n                            point['plot' + key] = indicator.yAxis.toPixels(pointValue, true);\n                            // Add extra parameters for support tooltip in moved\n                            // lines\n                            point.plotY = point['plot' + key];\n                            point.tooltipPos = [\n                                point.plotX,\n                                point['plot' + key]\n                            ];\n                            point.isNull = false;\n                        }\n                    }\n                }\n            }\n            drawGraph() {\n                const indicator = this, mainLinePoints = indicator.points, mainLineOptions = indicator.options, mainLinePath = indicator.graph, mainColor = indicator.color, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, pointArrayMapLength = indicator.pointArrayMap.length, allIchimokuPoints = [\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    []\n                ], ikhMap = {\n                    tenkanLine: allIchimokuPoints[0],\n                    kijunLine: allIchimokuPoints[1],\n                    chikouLine: allIchimokuPoints[2],\n                    senkouSpanA: allIchimokuPoints[3],\n                    senkouSpanB: allIchimokuPoints[4],\n                    senkouSpan: allIchimokuPoints[5]\n                }, intersectIndexColl = [], senkouSpanOptions = indicator\n                    .options.senkouSpan, color = senkouSpanOptions.color ||\n                    senkouSpanOptions.styles.fill, negativeColor = senkouSpanOptions.negativeColor, \n                // Points to create color and negativeColor senkouSpan\n                points = [\n                    [],\n                    [] // Points negative color\n                ], \n                // For span, we need an access to the next points, used in\n                // getGraphPath()\n                nextPoints = [\n                    [],\n                    [] // NextPoints negative color\n                ];\n                let pointsLength = mainLinePoints.length, lineIndex = 0, position, point, i, startIntersect, endIntersect, sectionPoints, sectionNextPoints, pointsPlotYSum, nextPointsPlotYSum, senkouSpanTempColor, concatArrIndex, j, k;\n                indicator.ikhMap = ikhMap;\n                // Generate points for all lines and spans lines:\n                while (pointsLength--) {\n                    point = mainLinePoints[pointsLength];\n                    for (i = 0; i < pointArrayMapLength; i++) {\n                        position = indicator.pointArrayMap[i];\n                        if (defined(point[position])) {\n                            allIchimokuPoints[i].push({\n                                plotX: point.plotX,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            });\n                        }\n                    }\n                    if (negativeColor && pointsLength !== mainLinePoints.length - 1) {\n                        // Check if lines intersect\n                        const index = ikhMap.senkouSpanB.length - 1, intersect = checkLineIntersection(ikhMap.senkouSpanA[index - 1], ikhMap.senkouSpanA[index], ikhMap.senkouSpanB[index - 1], ikhMap.senkouSpanB[index]);\n                        if (intersect) {\n                            const intersectPointObj = {\n                                plotX: intersect.plotX,\n                                plotY: intersect.plotY,\n                                isNull: false,\n                                intersectPoint: true\n                            };\n                            // Add intersect point to ichimoku points collection\n                            // Create senkouSpan sections\n                            ikhMap.senkouSpanA.splice(index, 0, intersectPointObj);\n                            ikhMap.senkouSpanB.splice(index, 0, intersectPointObj);\n                            intersectIndexColl.push(index);\n                        }\n                    }\n                }\n                // Modify options and generate lines:\n                objectEach(ikhMap, (values, lineName) => {\n                    if (mainLineOptions[lineName] &&\n                        lineName !== 'senkouSpan') {\n                        // First line is rendered by default option\n                        indicator.points = allIchimokuPoints[lineIndex];\n                        indicator.options = merge(mainLineOptions[lineName].styles, gappedExtend);\n                        indicator.graph = indicator['graph' + lineName];\n                        indicator.fillGraph = false;\n                        indicator.color = mainColor;\n                        SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n                        // Now save line\n                        indicator['graph' + lineName] = indicator.graph;\n                    }\n                    lineIndex++;\n                });\n                // Generate senkouSpan area:\n                // If graphCollection exist then remove svg\n                // element and indicator property\n                if (indicator.graphCollection) {\n                    for (const graphName of indicator.graphCollection) {\n                        indicator[graphName].destroy();\n                        delete indicator[graphName];\n                    }\n                }\n                // Clean graphCollection or initialize it\n                indicator.graphCollection = [];\n                // When user set negativeColor property\n                if (negativeColor && ikhMap.senkouSpanA[0] && ikhMap.senkouSpanB[0]) {\n                    // Add first and last point to senkouSpan area sections\n                    intersectIndexColl.unshift(0);\n                    intersectIndexColl.push(ikhMap.senkouSpanA.length - 1);\n                    // Populate points and nextPoints arrays\n                    for (j = 0; j < intersectIndexColl.length - 1; j++) {\n                        startIntersect = intersectIndexColl[j];\n                        endIntersect = intersectIndexColl[j + 1];\n                        sectionPoints = ikhMap.senkouSpanB.slice(startIntersect, endIntersect + 1);\n                        sectionNextPoints = ikhMap.senkouSpanA.slice(startIntersect, endIntersect + 1);\n                        // Add points to color or negativeColor arrays\n                        // Check the middle point (if exist)\n                        if (Math.floor(sectionPoints.length / 2) >= 1) {\n                            const x = Math.floor(sectionPoints.length / 2);\n                            // When middle points has equal values\n                            // Compare all points plotY value sum\n                            if (sectionPoints[x].plotY === sectionNextPoints[x].plotY) {\n                                pointsPlotYSum = 0;\n                                nextPointsPlotYSum = 0;\n                                for (k = 0; k < sectionPoints.length; k++) {\n                                    pointsPlotYSum += sectionPoints[k].plotY;\n                                    nextPointsPlotYSum += sectionNextPoints[k].plotY;\n                                }\n                                concatArrIndex =\n                                    pointsPlotYSum > nextPointsPlotYSum ? 0 : 1;\n                                points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                                nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                            }\n                            else {\n                                // Compare middle point of the section\n                                concatArrIndex = (sectionPoints[x].plotY > sectionNextPoints[x].plotY) ? 0 : 1;\n                                points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                                nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                            }\n                        }\n                        else {\n                            // Compare first point of the section\n                            concatArrIndex = (sectionPoints[0].plotY > sectionNextPoints[0].plotY) ? 0 : 1;\n                            points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                            nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                        }\n                    }\n                    // Render color and negativeColor paths\n                    ['graphsenkouSpanColor', 'graphsenkouSpanNegativeColor'].forEach(function (areaName, i) {\n                        if (points[i].length && nextPoints[i].length) {\n                            senkouSpanTempColor = i === 0 ? color : negativeColor;\n                            drawSenkouSpan({\n                                indicator: indicator,\n                                points: points[i],\n                                nextPoints: nextPoints[i],\n                                color: senkouSpanTempColor,\n                                options: mainLineOptions,\n                                gap: gappedExtend,\n                                graph: indicator[areaName]\n                            });\n                            // Now save line\n                            indicator[areaName] = indicator.graph;\n                            indicator.graphCollection.push(areaName);\n                        }\n                    });\n                }\n                else {\n                    // When user set only senkouSpan style.fill property\n                    drawSenkouSpan({\n                        indicator: indicator,\n                        points: ikhMap.senkouSpanB,\n                        nextPoints: ikhMap.senkouSpanA,\n                        color: color,\n                        options: mainLineOptions,\n                        gap: gappedExtend,\n                        graph: indicator.graphsenkouSpan\n                    });\n                    // Now save line\n                    indicator.graphsenkouSpan = indicator.graph;\n                }\n                // Clean temporary properties:\n                delete indicator.nextPoints;\n                delete indicator.fillGraph;\n                // Restore options and draw the Tenkan line:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.graph = mainLinePath;\n                indicator.color = mainColor;\n            }\n            getGraphPath(points) {\n                const indicator = this;\n                let path = [], spanA, spanAarr = [];\n                points = points || this.points;\n                // Render Senkou Span\n                if (indicator.fillGraph && indicator.nextPoints) {\n                    spanA = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath.call(indicator, \n                    // Reverse points, so Senkou Span A will start from the end:\n                    indicator.nextPoints);\n                    if (spanA && spanA.length) {\n                        spanA[0][0] = 'L';\n                        path = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath\n                            .call(indicator, points);\n                        spanAarr = spanA.slice(0, path.length);\n                        for (let i = spanAarr.length - 1; i >= 0; i--) {\n                            path.push(spanAarr[i]);\n                        }\n                    }\n                }\n                else {\n                    path = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath\n                        .apply(indicator, arguments);\n                }\n                return path;\n            }\n            getValues(series, params) {\n                const period = params.period, periodTenkan = params.periodTenkan, periodSenkouSpanB = params.periodSenkouSpanB, xVal = series.xData, yVal = series.yData, xAxis = series.xAxis, yValLen = (yVal && yVal.length) || 0, closestPointRange = getClosestDistance(xAxis.series.map((s) => s.xData || [])), IKH = [], xData = [];\n                let date, slicedTSY, slicedKSY, slicedSSBY, pointTS, pointKS, pointSSB, i, TS, KS, CS, SSA, SSB;\n                // Ikh requires close value\n                if (xVal.length <= period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // Add timestamps at the beginning\n                const dateStart = xVal[0] - period * closestPointRange;\n                for (i = 0; i < period; i++) {\n                    xData.push(dateStart + i * closestPointRange);\n                }\n                for (i = 0; i < yValLen; i++) {\n                    // Tenkan Sen\n                    if (i >= periodTenkan) {\n                        slicedTSY = yVal.slice(i - periodTenkan, i);\n                        pointTS = highlowLevel(slicedTSY);\n                        TS = (pointTS.high + pointTS.low) / 2;\n                    }\n                    if (i >= period) {\n                        slicedKSY = yVal.slice(i - period, i);\n                        pointKS = highlowLevel(slicedKSY);\n                        KS = (pointKS.high + pointKS.low) / 2;\n                        SSA = (TS + KS) / 2;\n                    }\n                    if (i >= periodSenkouSpanB) {\n                        slicedSSBY = yVal.slice(i - periodSenkouSpanB, i);\n                        pointSSB = highlowLevel(slicedSSBY);\n                        SSB = (pointSSB.high + pointSSB.low) / 2;\n                    }\n                    CS = yVal[i][3];\n                    date = xVal[i];\n                    if (typeof IKH[i] === 'undefined') {\n                        IKH[i] = [];\n                    }\n                    if (typeof IKH[i + period - 1] === 'undefined') {\n                        IKH[i + period - 1] = [];\n                    }\n                    IKH[i + period - 1][0] = TS;\n                    IKH[i + period - 1][1] = KS;\n                    IKH[i + period - 1][2] = void 0;\n                    if (typeof IKH[i + 1] === 'undefined') {\n                        IKH[i + 1] = [];\n                    }\n                    IKH[i + 1][2] = CS;\n                    if (i <= period) {\n                        IKH[i + period - 1][3] = void 0;\n                        IKH[i + period - 1][4] = void 0;\n                    }\n                    if (typeof IKH[i + 2 * period - 2] === 'undefined') {\n                        IKH[i + 2 * period - 2] = [];\n                    }\n                    IKH[i + 2 * period - 2][3] = SSA;\n                    IKH[i + 2 * period - 2][4] = SSB;\n                    xData.push(date);\n                }\n                // Add timestamps for further points\n                for (i = 1; i <= period; i++) {\n                    xData.push(date + i * closestPointRange);\n                }\n                return {\n                    values: IKH,\n                    xData: xData,\n                    yData: IKH\n                };\n            }\n        }\n        /**\n         * Ichimoku Kinko Hyo (IKH). This series requires `linkedTo` option to be\n         * set.\n         *\n         * @sample stock/indicators/ichimoku-kinko-hyo\n         *         Ichimoku Kinko Hyo indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/ichimoku-kinko-hyo\n         * @optionparent plotOptions.ikh\n         */\n        IKHIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 26,\n                /**\n                 * The base period for Tenkan calculations.\n                 */\n                periodTenkan: 9,\n                /**\n                 * The base period for Senkou Span B calculations\n                 */\n                periodSenkouSpanB: 52\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {series.name}</b><br/>' +\n                    'TENKAN SEN: {point.tenkanSen:.3f}<br/>' +\n                    'KIJUN SEN: {point.kijunSen:.3f}<br/>' +\n                    'CHIKOU SPAN: {point.chikouSpan:.3f}<br/>' +\n                    'SENKOU SPAN A: {point.senkouSpanA:.3f}<br/>' +\n                    'SENKOU SPAN B: {point.senkouSpanB:.3f}<br/>'\n            },\n            /**\n             * The styles for Tenkan line\n             */\n            tenkanLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Kijun line\n             */\n            kijunLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Chikou line\n             */\n            chikouLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Senkou Span A line\n             */\n            senkouSpanA: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Senkou Span B line\n             */\n            senkouSpanB: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for area between Senkou Span A and B.\n             */\n            senkouSpan: {\n                /**\n                 * Color of the area between Senkou Span A and B,\n                 * when Senkou Span A is above Senkou Span B. Note that if\n                 * a `style.fill` is defined, the `color` takes precedence and\n                 * the `style.fill` is ignored.\n                 *\n                 * @see [senkouSpan.styles.fill](#series.ikh.senkouSpan.styles.fill)\n                 *\n                 * @sample stock/indicators/ichimoku-kinko-hyo\n                 *         Ichimoku Kinko Hyo color\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @since     7.0.0\n                 * @apioption plotOptions.ikh.senkouSpan.color\n                 */\n                /**\n                 * Color of the area between Senkou Span A and B,\n                 * when Senkou Span A is under Senkou Span B.\n                 *\n                 * @sample stock/indicators/ikh-negative-color\n                 *         Ichimoku Kinko Hyo negativeColor\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @since     7.0.0\n                 * @apioption plotOptions.ikh.senkouSpan.negativeColor\n                 */\n                styles: {\n                    /**\n                     * Color of the area between Senkou Span A and B.\n                     *\n                     * @deprecated\n                     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     */\n                    fill: 'rgba(255, 0, 0, 0.5)'\n                }\n            },\n            dataGrouping: {\n                approximation: 'ichimoku-averages'\n            }\n        });\n        extend(IKHIndicator.prototype, {\n            pointArrayMap: [\n                'tenkanSen',\n                'kijunSen',\n                'chikouSpan',\n                'senkouSpanA',\n                'senkouSpanB'\n            ],\n            pointValKey: 'tenkanSen',\n            nameComponents: ['periodSenkouSpanB', 'period', 'periodTenkan']\n        });\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        ApproximationRegistry['ichimoku-averages'] = ichimokuAverages;\n        SeriesRegistry.registerSeriesType('ikh', IKHIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `IKH` series. If the [type](#series.ikh.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ikh\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ichimoku-kinko-hyo\n         * @apioption series.ikh\n         */\n        (''); // add doclet above to transpiled file\n\n        return IKHIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/KeltnerChannels/KeltnerChannelsIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Keltner Channels series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.keltnerchannels\n         *\n         * @augments Highcharts.Series\n         */\n        class KeltnerChannelsIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                SeriesRegistry.seriesTypes.sma.prototype.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    topLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    bottomLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const period = params.period, periodATR = params.periodATR, multiplierATR = params.multiplierATR, index = params.index, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // Keltner Channels array structure:\n                // 0-date, 1-top line, 2-middle line, 3-bottom line\n                KC = [], seriesEMA = SeriesRegistry.seriesTypes.ema.prototype.getValues(series, {\n                    period: period,\n                    index: index\n                }), seriesATR = SeriesRegistry.seriesTypes.atr.prototype.getValues(series, {\n                    period: periodATR\n                }), xData = [], yData = [];\n                // middle line, top line and bottom lineI\n                let ML, TL, BL, date, pointEMA, pointATR, i;\n                if (yValLen < period) {\n                    return;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    pointEMA = seriesEMA.values[i - period];\n                    pointATR = seriesATR.values[i - periodATR];\n                    date = pointEMA[0];\n                    TL = correctFloat(pointEMA[1] + (multiplierATR * pointATR[1]));\n                    BL = correctFloat(pointEMA[1] - (multiplierATR * pointATR[1]));\n                    ML = pointEMA[1];\n                    KC.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: KC,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Keltner Channels. This series requires the `linkedTo` option to be set\n         * and should be loaded after the `stock/indicators/indicators.js`,\n         * `stock/indicators/atr.js`, and `stock/ema/.js`.\n         *\n         * @sample {highstock} stock/indicators/keltner-channels\n         *         Keltner Channels\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart,showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/keltner-channels\n         * @optionparent plotOptions.keltnerchannels\n         */\n        KeltnerChannelsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Keltner Channels Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type {Highcharts.Color}\n             * @since 9.3.2\n             * @apioption plotOptions.keltnerchannels.fillColor\n             *\n             */\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                index: 0,\n                period: 20,\n                /**\n                 * The ATR period.\n                 */\n                periodATR: 10,\n                /**\n                 * The ATR multiplier.\n                 */\n                multiplierATR: 2\n            },\n            /**\n             * Bottom line options.\n             *\n             */\n            bottomLine: {\n                /**\n                 * Styles for a bottom line.\n                 *\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * `plotOptions.keltnerchannels.color`\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * Top line options.\n             *\n             * @extends plotOptions.keltnerchannels.bottomLine\n             */\n            topLine: {\n                styles: {\n                    lineWidth: 1,\n                    lineColor: void 0\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'\n            },\n            marker: {\n                enabled: false\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            },\n            lineWidth: 1\n        });\n        extend(KeltnerChannelsIndicator.prototype, {\n            nameBase: 'Keltner Channels',\n            areaLinesNames: ['top', 'bottom'],\n            nameComponents: ['period', 'periodATR', 'multiplierATR'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(KeltnerChannelsIndicator);\n        SeriesRegistry.registerSeriesType('keltnerchannels', KeltnerChannelsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Keltner Channels indicator. If the [type](#series.keltnerchannels.type)\n         * option is not specified, it is inherited from[chart.type](#chart.type).\n         *\n         * @extends      series,plotOptions.keltnerchannels\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *               joinBy, keys, navigatorOptions, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *               stacking, showInNavigator\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/keltner-channels\n         * @apioption    series.keltnerchannels\n         */\n        ''; // to include the above in the js output\n\n        return KeltnerChannelsIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Klinger/KlingerIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, error, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Klinger oscillator series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.klinger\n         *\n         * @augments Highcharts.Series\n         */\n        class KlingerIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.points = void 0;\n                this.options = void 0;\n                this.volumeSeries = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            calculateTrend(yVal, i) {\n                const isUpward = yVal[i][1] + yVal[i][2] + yVal[i][3] >\n                    yVal[i - 1][1] + yVal[i - 1][2] + yVal[i - 1][3];\n                return isUpward ? 1 : -1;\n            }\n            // Checks if the series and volumeSeries are accessible, number of\n            // points.x is longer than period, is series has OHLC data\n            isValidData(firstYVal) {\n                const chart = this.chart, options = this.options, series = this.linkedParent, isSeriesOHLC = isArray(firstYVal) &&\n                    firstYVal.length === 4, volumeSeries = this.volumeSeries ||\n                    (this.volumeSeries =\n                        chart.get(options.params.volumeSeriesID));\n                if (!volumeSeries) {\n                    error('Series ' +\n                        options.params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                }\n                const isLengthValid = [series, volumeSeries].every(function (series) {\n                    return series && series.xData && series.xData.length >=\n                        options.params.slowAvgPeriod;\n                });\n                return !!(isLengthValid && isSeriesOHLC);\n            }\n            getCM(previousCM, DM, trend, previousTrend, prevoiusDM) {\n                return correctFloat(DM + (trend === previousTrend ? previousCM : prevoiusDM));\n            }\n            getDM(high, low) {\n                return correctFloat(high - low);\n            }\n            getVolumeForce(yVal) {\n                const volumeForce = [];\n                let CM = 0, // cumulative measurement\n                DM, // daily measurement\n                force, i = 1, // start from second point\n                previousCM = 0, previousDM = yVal[0][1] - yVal[0][2], // initial DM\n                previousTrend = 0, trend;\n                for (i; i < yVal.length; i++) {\n                    trend = this.calculateTrend(yVal, i);\n                    DM = this.getDM(yVal[i][1], yVal[i][2]);\n                    // For the first iteration when the previousTrend doesn't exist,\n                    // previousCM doesn't exist either, but it doesn't matter becouse\n                    // it's filltered out in the getCM method in else statement,\n                    // (in this iteration, previousCM can be raplaced with the DM).\n                    CM = this.getCM(previousCM, DM, trend, previousTrend, previousDM);\n                    force = this.volumeSeries.yData[i] *\n                        trend * Math.abs(2 * ((DM / CM) - 1)) * 100;\n                    volumeForce.push([force]);\n                    // Before next iteration, assign the current as the previous.\n                    previousTrend = trend;\n                    previousCM = CM;\n                    previousDM = DM;\n                }\n                return volumeForce;\n            }\n            getEMA(yVal, prevEMA, SMA, EMApercent, index, i, xVal) {\n                return EMAIndicator.prototype.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getSMA(period, index, values) {\n                return EMAIndicator.prototype\n                    .accumulatePeriodPoints(period, index, values) / period;\n            }\n            getValues(series, params) {\n                const Klinger = [], xVal = series.xData, yVal = series.yData, xData = [], yData = [], calcSingal = [];\n                let KO, i = 0, fastEMA = 0, slowEMA, \n                // signalEMA: number|undefined = void 0,\n                previousFastEMA = void 0, previousSlowEMA = void 0, signal = null;\n                // If the necessary conditions are not fulfilled, don't proceed.\n                if (!this.isValidData(yVal[0])) {\n                    return;\n                }\n                // Calculate the Volume Force array.\n                const volumeForce = this.getVolumeForce(yVal);\n                // Calculate SMA for the first points.\n                const SMAFast = this.getSMA(params.fastAvgPeriod, 0, volumeForce), SMASlow = this.getSMA(params.slowAvgPeriod, 0, volumeForce);\n                // Calculate EMApercent for the first points.\n                const fastEMApercent = 2 / (params.fastAvgPeriod + 1), slowEMApercent = 2 / (params.slowAvgPeriod + 1);\n                // Calculate KO\n                for (i; i < yVal.length; i++) {\n                    // Get EMA for fast period.\n                    if (i >= params.fastAvgPeriod) {\n                        fastEMA = this.getEMA(volumeForce, previousFastEMA, SMAFast, fastEMApercent, 0, i, xVal)[1];\n                        previousFastEMA = fastEMA;\n                    }\n                    // Get EMA for slow period.\n                    if (i >= params.slowAvgPeriod) {\n                        slowEMA = this.getEMA(volumeForce, previousSlowEMA, SMASlow, slowEMApercent, 0, i, xVal)[1];\n                        previousSlowEMA = slowEMA;\n                        KO = correctFloat(fastEMA - slowEMA);\n                        calcSingal.push(KO);\n                        // Calculate signal SMA\n                        if (calcSingal.length >= params.signalPeriod) {\n                            signal = calcSingal.slice(-params.signalPeriod)\n                                .reduce((prev, curr) => prev + curr) / params.signalPeriod;\n                        }\n                        Klinger.push([xVal[i], KO, signal]);\n                        xData.push(xVal[i]);\n                        yData.push([KO, signal]);\n                    }\n                }\n                return {\n                    values: Klinger,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Klinger oscillator. This series requires the `linkedTo` option to be set\n         * and should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/klinger\n         *         Klinger oscillator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/klinger\n         * @optionparent plotOptions.klinger\n         */\n        KlingerIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Klinger Oscillator.\n             *\n             * @excluding index, period\n             */\n            params: {\n                /**\n                 * The fast period for indicator calculations.\n                 */\n                fastAvgPeriod: 34,\n                /**\n                 * The slow period for indicator calculations.\n                 */\n                slowAvgPeriod: 55,\n                /**\n                 * The base period for signal calculations.\n                 */\n                signalPeriod: 13,\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indiator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            signalLine: {\n                /**\n                 * Styles for a signal line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.klinger.color\n                     * ](#plotOptions.klinger.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: '#ff0000'\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color: {point.color}\">\\u25CF</span>' +\n                    '<b> {series.name}</b><br/>' +\n                    '<span style=\"color: {point.color}\">Klinger</span>: ' +\n                    '{point.y}<br/>' +\n                    '<span style=\"color: ' +\n                    '{point.series.options.signalLine.styles.lineColor}\">' +\n                    'Signal</span>' +\n                    ': {point.signal}<br/>'\n            }\n        });\n        extend(KlingerIndicator.prototype, {\n            areaLinesNames: [],\n            linesApiNames: ['signalLine'],\n            nameBase: 'Klinger',\n            nameComponents: ['fastAvgPeriod', 'slowAvgPeriod'],\n            pointArrayMap: ['y', 'signal'],\n            parallelArrays: ['x', 'y', 'signal'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(KlingerIndicator);\n        SeriesRegistry.registerSeriesType('klinger', KlingerIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Klinger oscillator. If the [type](#series.klinger.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.klinger\n         * @since 9.1.0\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/klinger\n         * @apioption series.klinger\n         */\n        ''; // to include the above in the js output\n\n        return KlingerIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MACD/MACDIndicator.js', [_modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { noop } = H;\n        const { column: ColumnSeries, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, correctFloat, defined, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MACD series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.macd\n         *\n         * @augments Highcharts.Series\n         */\n        class MACDIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.data = void 0;\n                this.macdZones = void 0;\n                this.options = void 0;\n                this.points = void 0;\n                this.signalZones = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                SeriesRegistry.seriesTypes.sma.prototype.init.apply(this, arguments);\n                const originalColor = this.color;\n                // Check whether series is initialized. It may be not initialized,\n                // when any of required indicators is missing.\n                if (this.options) {\n                    // If the default colour doesn't set, get the next available from\n                    // the array and apply it #15608.\n                    if (defined(this.colorIndex)) {\n                        if (this.options.signalLine &&\n                            this.options.signalLine.styles &&\n                            !this.options.signalLine.styles.lineColor) {\n                            this.options.colorIndex = this.colorIndex + 1;\n                            this.getCyclic('color', void 0, this.chart.options.colors);\n                            this.options.signalLine.styles.lineColor =\n                                this.color;\n                        }\n                        if (this.options.macdLine &&\n                            this.options.macdLine.styles &&\n                            !this.options.macdLine.styles.lineColor) {\n                            this.options.colorIndex = this.colorIndex + 1;\n                            this.getCyclic('color', void 0, this.chart.options.colors);\n                            this.options.macdLine.styles.lineColor =\n                                this.color;\n                        }\n                    }\n                    // Zones have indexes automatically calculated, we need to\n                    // translate them to support multiple lines within one indicator\n                    this.macdZones = {\n                        zones: this.options.macdLine.zones,\n                        startIndex: 0\n                    };\n                    this.signalZones = {\n                        zones: this.macdZones.zones.concat(this.options.signalLine.zones),\n                        startIndex: this.macdZones.zones.length\n                    };\n                    this.resetZones = true;\n                }\n                // Reset color and index #15608.\n                this.color = originalColor;\n            }\n            toYData(point) {\n                return [point.y, point.signal, point.MACD];\n            }\n            translate() {\n                const indicator = this, plotNames = ['plotSignal', 'plotMACD'];\n                H.seriesTypes.column.prototype.translate.apply(indicator);\n                indicator.points.forEach(function (point) {\n                    [point.signal, point.MACD].forEach(function (value, i) {\n                        if (value !== null) {\n                            point[plotNames[i]] =\n                                indicator.yAxis.toPixels(value, true);\n                        }\n                    });\n                });\n            }\n            destroy() {\n                // this.graph is null due to removing two times the same SVG element\n                this.graph = null;\n                this.graphmacd = this.graphmacd && this.graphmacd.destroy();\n                this.graphsignal = this.graphsignal && this.graphsignal.destroy();\n                SeriesRegistry.seriesTypes.sma.prototype.destroy.apply(this, arguments);\n            }\n            drawGraph() {\n                const indicator = this, mainLinePoints = indicator.points, mainLineOptions = indicator.options, histogramZones = indicator.zones, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, otherSignals = [[], []];\n                let point, pointsLength = mainLinePoints.length;\n                // Generate points for top and bottom lines:\n                while (pointsLength--) {\n                    point = mainLinePoints[pointsLength];\n                    if (defined(point.plotMACD)) {\n                        otherSignals[0].push({\n                            plotX: point.plotX,\n                            plotY: point.plotMACD,\n                            isNull: !defined(point.plotMACD)\n                        });\n                    }\n                    if (defined(point.plotSignal)) {\n                        otherSignals[1].push({\n                            plotX: point.plotX,\n                            plotY: point.plotSignal,\n                            isNull: !defined(point.plotMACD)\n                        });\n                    }\n                }\n                // Modify options and generate smoothing line:\n                ['macd', 'signal'].forEach(function (lineName, i) {\n                    indicator.points = otherSignals[i];\n                    indicator.options = merge(mainLineOptions[lineName + 'Line'].styles, gappedExtend);\n                    indicator.graph = indicator['graph' + lineName];\n                    // Zones extension:\n                    indicator.currentLineZone = lineName + 'Zones';\n                    indicator.zones =\n                        indicator[indicator.currentLineZone].zones;\n                    SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n                    indicator['graph' + lineName] = indicator.graph;\n                });\n                // Restore options:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.zones = histogramZones;\n                indicator.currentLineZone = void 0;\n                // indicator.graph = null;\n            }\n            getZonesGraphs(props) {\n                const allZones = super.getZonesGraphs(props);\n                let currentZones = allZones;\n                if (this.currentLineZone) {\n                    currentZones = allZones.splice(this[this.currentLineZone].startIndex + 1);\n                    if (!currentZones.length) {\n                        // Line has no zones, return basic graph \"zone\"\n                        currentZones = [props[0]];\n                    }\n                    else {\n                        // Add back basic prop:\n                        currentZones.splice(0, 0, props[0]);\n                    }\n                }\n                return currentZones;\n            }\n            applyZones() {\n                // Histogram zones are handled by drawPoints method\n                // Here we need to apply zones for all lines\n                const histogramZones = this.zones;\n                // signalZones.zones contains all zones:\n                this.zones = this.signalZones.zones;\n                SeriesRegistry.seriesTypes.sma.prototype.applyZones.call(this);\n                // applyZones hides only main series.graph, hide macd line manually\n                if (this.graphmacd && this.options.macdLine.zones.length) {\n                    this.graphmacd.hide();\n                }\n                this.zones = histogramZones;\n            }\n            getValues(series, params) {\n                const indexToShift = (params.longPeriod - params.shortPeriod), // #14197\n                MACD = [], xMACD = [], yMACD = [];\n                let shortEMA, longEMA, i, j = 0, signalLine = [];\n                if (series.xData.length <\n                    params.longPeriod + params.signalPeriod) {\n                    return;\n                }\n                // Calculating the short and long EMA used when calculating the MACD\n                shortEMA = SeriesRegistry.seriesTypes.ema.prototype.getValues(series, {\n                    period: params.shortPeriod,\n                    index: params.index\n                });\n                longEMA = SeriesRegistry.seriesTypes.ema.prototype.getValues(series, {\n                    period: params.longPeriod,\n                    index: params.index\n                });\n                shortEMA = shortEMA.values;\n                longEMA = longEMA.values;\n                // Subtract each Y value from the EMA's and create the new dataset\n                // (MACD)\n                for (i = 0; i <= shortEMA.length; i++) {\n                    if (defined(longEMA[i]) &&\n                        defined(longEMA[i][1]) &&\n                        defined(shortEMA[i + indexToShift]) &&\n                        defined(shortEMA[i + indexToShift][0])) {\n                        MACD.push([\n                            shortEMA[i + indexToShift][0],\n                            0,\n                            null,\n                            shortEMA[i + indexToShift][1] -\n                                longEMA[i][1]\n                        ]);\n                    }\n                }\n                // Set the Y and X data of the MACD. This is used in calculating the\n                // signal line.\n                for (i = 0; i < MACD.length; i++) {\n                    xMACD.push(MACD[i][0]);\n                    yMACD.push([0, null, MACD[i][3]]);\n                }\n                // Setting the signalline (Signal Line: X-day EMA of MACD line).\n                signalLine = SeriesRegistry.seriesTypes.ema.prototype.getValues({\n                    xData: xMACD,\n                    yData: yMACD\n                }, {\n                    period: params.signalPeriod,\n                    index: 2\n                });\n                signalLine = signalLine.values;\n                // Setting the MACD Histogram. In comparison to the loop with pure\n                // MACD this loop uses MACD x value not xData.\n                for (i = 0; i < MACD.length; i++) {\n                    // detect the first point\n                    if (MACD[i][0] >= signalLine[0][0]) {\n                        MACD[i][2] = signalLine[j][1];\n                        yMACD[i] = [0, signalLine[j][1], MACD[i][3]];\n                        if (MACD[i][3] === null) {\n                            MACD[i][1] = 0;\n                            yMACD[i][0] = 0;\n                        }\n                        else {\n                            MACD[i][1] = correctFloat(MACD[i][3] -\n                                signalLine[j][1]);\n                            yMACD[i][0] = correctFloat(MACD[i][3] -\n                                signalLine[j][1]);\n                        }\n                        j++;\n                    }\n                }\n                return {\n                    values: MACD,\n                    xData: xMACD,\n                    yData: yMACD\n                };\n            }\n        }\n        /**\n         * Moving Average Convergence Divergence (MACD). This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample stock/indicators/macd\n         *         MACD indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/macd\n         * @optionparent plotOptions.macd\n         */\n        MACDIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The short period for indicator calculations.\n                 */\n                shortPeriod: 12,\n                /**\n                 * The long period for indicator calculations.\n                 */\n                longPeriod: 26,\n                /**\n                 * The base period for signal calculations.\n                 */\n                signalPeriod: 9,\n                period: 26\n            },\n            /**\n             * The styles for signal line\n             */\n            signalLine: {\n                /**\n                 * @sample stock/indicators/macd-zones\n                 *         Zones in MACD\n                 *\n                 * @extends plotOptions.macd.zones\n                 */\n                zones: [],\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type  {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for macd line\n             */\n            macdLine: {\n                /**\n                 * @sample stock/indicators/macd-zones\n                 *         Zones in MACD\n                 *\n                 * @extends plotOptions.macd.zones\n                 */\n                zones: [],\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type  {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: 0,\n            groupPadding: 0.1,\n            pointPadding: 0.1,\n            crisp: false,\n            states: {\n                hover: {\n                    halo: {\n                        size: 0\n                    }\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {series.name}</b><br/>' +\n                    'Value: {point.MACD}<br/>' +\n                    'Signal: {point.signal}<br/>' +\n                    'Histogram: {point.y}<br/>'\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            },\n            minPointLength: 0\n        });\n        extend(MACDIndicator.prototype, {\n            nameComponents: ['longPeriod', 'shortPeriod', 'signalPeriod'],\n            // \"y\" value is treated as Histogram data\n            pointArrayMap: ['y', 'signal', 'MACD'],\n            parallelArrays: ['x', 'y', 'signal', 'MACD'],\n            pointValKey: 'y',\n            // Columns support:\n            markerAttribs: noop,\n            getColumnMetrics: H.seriesTypes.column.prototype.getColumnMetrics,\n            crispCol: H.seriesTypes.column.prototype.crispCol,\n            drawPoints: H.seriesTypes.column.prototype.drawPoints\n        });\n        SeriesRegistry.registerSeriesType('macd', MACDIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `MACD` series. If the [type](#series.macd.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.macd\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/macd\n         * @apioption series.macd\n         */\n        ''; // to include the above in the js output\n\n        return MACDIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MFI/MFIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Money Flow Index indicator for Highcharts Stock\n         *\n         *  (c) 2010-2021 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, error, isArray } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function sumArray(array) {\n            return array.reduce(function (prev, cur) {\n                return prev + cur;\n            });\n        }\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        function calculateTypicalPrice(point) {\n            return (point[1] + point[2] + point[3]) / 3;\n        }\n        function calculateRawMoneyFlow(typicalPrice, volume) {\n            return typicalPrice * volume;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MFI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.mfi\n         *\n         * @augments Highcharts.Series\n         */\n        class MFIIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, decimals = params.decimals, volumeSeries = series.chart.get(params.volumeSeriesID), yValVolume = (volumeSeries && volumeSeries.yData), MFI = [], xData = [], yData = [], positiveMoneyFlow = [], negativeMoneyFlow = [];\n                let newTypicalPrice, oldTypicalPrice, rawMoneyFlow, negativeMoneyFlowSum, positiveMoneyFlowSum, moneyFlowRatio, MFIPoint, i, isUp = false, \n                // MFI starts calculations from the second point\n                // Cause we need to calculate change between two points\n                range = 1;\n                if (!volumeSeries) {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                // MFI requires high low and close values\n                if ((xVal.length <= period) || !isArray(yVal[0]) ||\n                    yVal[0].length !== 4 ||\n                    !yValVolume) {\n                    return;\n                }\n                // Calculate first typical price\n                newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                // Accumulate first N-points\n                while (range < period + 1) {\n                    // Calculate if up or down\n                    oldTypicalPrice = newTypicalPrice;\n                    newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                    isUp = newTypicalPrice >= oldTypicalPrice;\n                    // Calculate raw money flow\n                    rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[range]);\n                    // Add to array\n                    positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                    negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    range++;\n                }\n                for (i = range - 1; i < yValLen; i++) {\n                    if (i > range - 1) {\n                        // Remove first point from array\n                        positiveMoneyFlow.shift();\n                        negativeMoneyFlow.shift();\n                        // Calculate if up or down\n                        oldTypicalPrice = newTypicalPrice;\n                        newTypicalPrice = calculateTypicalPrice(yVal[i]);\n                        isUp = newTypicalPrice > oldTypicalPrice;\n                        // Calculate raw money flow\n                        rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[i]);\n                        // Add to array\n                        positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                        negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    }\n                    // Calculate sum of negative and positive money flow:\n                    negativeMoneyFlowSum = sumArray(negativeMoneyFlow);\n                    positiveMoneyFlowSum = sumArray(positiveMoneyFlow);\n                    moneyFlowRatio = positiveMoneyFlowSum / negativeMoneyFlowSum;\n                    MFIPoint = toFixed(100 - (100 / (1 + moneyFlowRatio)), decimals);\n                    MFI.push([xVal[i], MFIPoint]);\n                    xData.push(xVal[i]);\n                    yData.push(MFIPoint);\n                }\n                return {\n                    values: MFI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Money Flow Index. This series requires `linkedTo` option to be set and\n         * should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/mfi\n         *         Money Flow Index Indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/mfi\n         * @optionparent plotOptions.mfi\n         */\n        MFIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume',\n                /**\n                 * Number of maximum decimals that are used in MFI calculations.\n                 */\n                decimals: 4\n            }\n        });\n        extend(MFIIndicator.prototype, {\n            nameBase: 'Money Flow Index'\n        });\n        SeriesRegistry.registerSeriesType('mfi', MFIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `MFI` series. If the [type](#series.mfi.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.mfi\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/mfi\n         * @apioption series.mfi\n         */\n        ''; // to include the above in the js output\n\n        return MFIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Momentum/MomentumIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function populateAverage(xVal, yVal, i, period, index) {\n            const mmY = yVal[i - 1][index] - yVal[i - period - 1][index], mmX = xVal[i - 1];\n            return [mmX, mmY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Momentum series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.momentum\n         *\n         * @augments Highcharts.Series\n         */\n        class MomentumIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, index = params.index, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, MM = [], xData = [], yData = [];\n                let i, MMPoint;\n                if (xVal.length <= period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (!isArray(yVal[0])) {\n                    return;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = (period + 1); i < yValLen; i++) {\n                    MMPoint = populateAverage(xVal, yVal, i, period, index);\n                    MM.push(MMPoint);\n                    xData.push(MMPoint[0]);\n                    yData.push(MMPoint[1]);\n                }\n                MMPoint = populateAverage(xVal, yVal, i, period, index);\n                MM.push(MMPoint);\n                xData.push(MMPoint[0]);\n                yData.push(MMPoint[1]);\n                return {\n                    values: MM,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Momentum. This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/momentum\n         *         Momentum indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/momentum\n         * @optionparent plotOptions.momentum\n         */\n        MomentumIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3\n            }\n        });\n        extend(MomentumIndicator.prototype, {\n            nameBase: 'Momentum'\n        });\n        SeriesRegistry.registerSeriesType('momentum', MomentumIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Momentum` series. If the [type](#series.momentum.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.momentum\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/momentum\n         * @apioption series.momentum\n         */\n        ''; // to include the above in the js output\n\n        return MomentumIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/NATR/NATRIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { atr: ATRIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The NATR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.natr\n         *\n         * @augments Highcharts.Series\n         */\n        class NATRIndicator extends ATRIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /**\n                 * @lends Highcharts.Series#\n                 */\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.points = void 0;\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const atrData = (super.getValues.apply(this, arguments)), atrLength = atrData.values.length, yVal = series.yData;\n                let i = 0, period = params.period - 1;\n                if (!atrData) {\n                    return;\n                }\n                for (; i < atrLength; i++) {\n                    atrData.yData[i] = (atrData.values[i][1] / yVal[period][3] * 100);\n                    atrData.values[i][1] = atrData.yData[i];\n                    period++;\n                }\n                return atrData;\n            }\n        }\n        /**\n         * Normalized average true range indicator (NATR). This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js` and `stock/indicators/atr.js`.\n         *\n         * @sample {highstock} stock/indicators/natr\n         *         NATR indicator\n         *\n         * @extends      plotOptions.atr\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/natr\n         * @optionparent plotOptions.natr\n         */\n        NATRIndicator.defaultOptions = merge(ATRIndicator.defaultOptions, {\n            tooltip: {\n                valueSuffix: '%'\n            }\n        });\n        SeriesRegistry.registerSeriesType('natr', NATRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `NATR` series. If the [type](#series.natr.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.natr\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/atr\n         * @requires  stock/indicators/natr\n         * @apioption series.natr\n         */\n        ''; // to include the above in the js output'\n\n        return NATRIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/OBV/OBVIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isNumber, error, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The OBV series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.obv\n         *\n         * @augments Highcharts.Series\n         */\n        class OBVIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.points = void 0;\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const volumeSeries = series.chart.get(params.volumeSeriesID), xVal = series.xData, yVal = series.yData, OBV = [], xData = [], yData = [], hasOHLC = !isNumber(yVal[0]);\n                let OBVPoint = [], i = 1, previousOBV = 0, curentOBV = 0, previousClose = 0, curentClose = 0, volume;\n                // Checks if volume series exists.\n                if (volumeSeries) {\n                    volume = volumeSeries.yData;\n                    // Add first point and get close value.\n                    OBVPoint = [xVal[0], previousOBV];\n                    previousClose = hasOHLC ?\n                        yVal[0][3] : yVal[0];\n                    OBV.push(OBVPoint);\n                    xData.push(xVal[0]);\n                    yData.push(OBVPoint[1]);\n                    for (i; i < yVal.length; i++) {\n                        curentClose = hasOHLC ?\n                            yVal[i][3] : yVal[i];\n                        if (curentClose > previousClose) { // up\n                            curentOBV = previousOBV + volume[i];\n                        }\n                        else if (curentClose === previousClose) { // constant\n                            curentOBV = previousOBV;\n                        }\n                        else { // down\n                            curentOBV = previousOBV - volume[i];\n                        }\n                        // Add point.\n                        OBVPoint = [xVal[i], curentOBV];\n                        // Assign current as previous for next iteration.\n                        previousOBV = curentOBV;\n                        previousClose = curentClose;\n                        OBV.push(OBVPoint);\n                        xData.push(xVal[i]);\n                        yData.push(OBVPoint[1]);\n                    }\n                }\n                else {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                return {\n                    values: OBV,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * On-Balance Volume (OBV) technical indicator. This series\n         * requires the `linkedTo` option to be set and should be loaded after\n         * the `stock/indicators/indicators.js` file. Through the `volumeSeriesID`\n         * there also should be linked the volume series.\n         *\n         * @sample stock/indicators/obv\n         *         OBV indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/obv\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @optionparent plotOptions.obv\n         */\n        OBVIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            marker: {\n                enabled: false\n            },\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indiator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            tooltip: {\n                valueDecimals: 0\n            }\n        });\n        extend(OBVIndicator.prototype, {\n            nameComponents: void 0\n        });\n        SeriesRegistry.registerSeriesType('obv', OBVIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `OBV` series. If the [type](#series.obv.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.obv\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/obv\n         * @apioption series.obv\n         */\n        ''; // to include the above in the js output\n\n        return OBVIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PivotPoints/PivotPointsPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const SMAPoint = SeriesRegistry.seriesTypes.sma.prototype.pointClass;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function destroyExtraLabels(point, functionName) {\n            const props = point.series.pointArrayMap;\n            let prop, i = props.length;\n            SeriesRegistry.seriesTypes.sma.prototype.pointClass.prototype[functionName].call(point);\n            while (i--) {\n                prop = 'dataLabel' + props[i];\n                // S4 dataLabel could be removed by parent method:\n                if (point[prop] && point[prop].element) {\n                    point[prop].destroy();\n                }\n                point[prop] = null;\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class PivotPointsPoint extends SMAPoint {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.P = void 0;\n                this.pivotLine = void 0;\n                this.series = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            destroyElements() {\n                destroyExtraLabels(this, 'destroyElements');\n            }\n            // This method is called when removing points, e.g. series.update()\n            destroy() {\n                destroyExtraLabels(this, 'destroyElements');\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return PivotPointsPoint;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PivotPoints/PivotPointsIndicator.js', [_modules['Stock/Indicators/PivotPoints/PivotPointsPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (PivotPointsPoint, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend, defined, isArray } = U;\n        /**\n         *\n         *  Class\n         *\n         **/\n        /**\n         * The Pivot Points series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pivotpoints\n         *\n         * @augments Highcharts.Series\n         */\n        class PivotPointsIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n                this.endPoint = void 0;\n                this.plotEndPoint = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            toYData(point) {\n                return [point.P]; // The rest should not affect extremes\n            }\n            translate() {\n                const indicator = this;\n                super.translate.apply(indicator);\n                indicator.points.forEach(function (point) {\n                    indicator.pointArrayMap.forEach(function (value) {\n                        if (defined(point[value])) {\n                            point['plot' + value] = (indicator.yAxis.toPixels(point[value], true));\n                        }\n                    });\n                });\n                // Pivot points are rendered as horizontal lines\n                // And last point start not from the next one (as it's the last one)\n                // But from the approximated last position in a given range\n                indicator.plotEndPoint = indicator.xAxis.toPixels(indicator.endPoint, true);\n            }\n            getGraphPath(points) {\n                const indicator = this, allPivotPoints = ([[], [], [], [], [], [], [], [], []]), pointArrayMapLength = indicator.pointArrayMap.length;\n                let endPoint = indicator.plotEndPoint, path = [], position, point, pointsLength = points.length, i;\n                while (pointsLength--) {\n                    point = points[pointsLength];\n                    for (i = 0; i < pointArrayMapLength; i++) {\n                        position = indicator.pointArrayMap[i];\n                        if (defined(point[position])) {\n                            allPivotPoints[i].push({\n                                // Start left:\n                                plotX: point.plotX,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            }, {\n                                // Go to right:\n                                plotX: endPoint,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            }, {\n                                // And add null points in path to generate breaks:\n                                plotX: endPoint,\n                                plotY: null,\n                                isNull: true\n                            });\n                        }\n                    }\n                    endPoint = point.plotX;\n                }\n                allPivotPoints.forEach((pivotPoints) => {\n                    path = path.concat(super.getGraphPath.call(indicator, pivotPoints));\n                });\n                return path;\n            }\n            // TODO: Rewrite this logic to use multiple datalabels\n            drawDataLabels() {\n                const indicator = this, pointMapping = indicator.pointArrayMap;\n                let currentLabel, pointsLength, point, i;\n                if (indicator.options.dataLabels.enabled) {\n                    pointsLength = indicator.points.length;\n                    // For every Ressitance/Support group we need to render labels.\n                    // Add one more item, which will just store dataLabels from\n                    // previous iteration\n                    pointMapping.concat([false]).forEach((position, k) => {\n                        i = pointsLength;\n                        while (i--) {\n                            point = indicator.points[i];\n                            if (!position) {\n                                // Store S4 dataLabel too:\n                                point['dataLabel' + pointMapping[k - 1]] =\n                                    point.dataLabel;\n                            }\n                            else {\n                                point.y = point[position];\n                                point.pivotLine = position;\n                                point.plotY = point['plot' + position];\n                                currentLabel = point['dataLabel' + position];\n                                // Store previous label\n                                if (k) {\n                                    point['dataLabel' + pointMapping[k - 1]] = point.dataLabel;\n                                }\n                                if (!point.dataLabels) {\n                                    point.dataLabels = [];\n                                }\n                                point.dataLabels[0] = point.dataLabel =\n                                    currentLabel =\n                                        currentLabel && currentLabel.element ?\n                                            currentLabel :\n                                            null;\n                            }\n                        }\n                        super.drawDataLabels\n                            .call(indicator);\n                    });\n                }\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, placement = this[params.algorithm + 'Placement'], \n                // 0- from, 1- to, 2- R1, 3- R2, 4- pivot, 5- S1 etc.\n                PP = [], xData = [], yData = [];\n                let endTimestamp, slicedXLen, slicedX, slicedY, lastPP, pivot, avg, i;\n                // Pivot Points requires high, low and close values\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = period + 1; i <= yValLen + period; i += period) {\n                    slicedX = xVal.slice(i - period - 1, i);\n                    slicedY = yVal.slice(i - period - 1, i);\n                    slicedXLen = slicedX.length;\n                    endTimestamp = slicedX[slicedXLen - 1];\n                    pivot = this.getPivotAndHLC(slicedY);\n                    avg = placement(pivot);\n                    lastPP = PP.push([endTimestamp]\n                        .concat(avg));\n                    xData.push(endTimestamp);\n                    yData.push(PP[lastPP - 1].slice(1));\n                }\n                // We don't know exact position in ordinal axis\n                // So we use simple logic:\n                // Get first point in last range, calculate visible average range\n                // and multiply by period\n                this.endPoint = slicedX[0] + ((endTimestamp - slicedX[0]) /\n                    slicedXLen) * period;\n                return {\n                    values: PP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            getPivotAndHLC(values) {\n                const close = values[values.length - 1][3];\n                let high = -Infinity, low = Infinity;\n                values.forEach(function (p) {\n                    high = Math.max(high, p[1]);\n                    low = Math.min(low, p[2]);\n                });\n                const pivot = (high + low + close) / 3;\n                return [pivot, high, low, close];\n            }\n            standardPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    null,\n                    null,\n                    values[0] + diff,\n                    values[0] * 2 - values[2],\n                    values[0],\n                    values[0] * 2 - values[1],\n                    values[0] - diff,\n                    null,\n                    null\n                ];\n                return avg;\n            }\n            camarillaPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    values[3] + diff * 1.5,\n                    values[3] + diff * 1.25,\n                    values[3] + diff * 1.1666,\n                    values[3] + diff * 1.0833,\n                    values[0],\n                    values[3] - diff * 1.0833,\n                    values[3] - diff * 1.1666,\n                    values[3] - diff * 1.25,\n                    values[3] - diff * 1.5\n                ];\n                return avg;\n            }\n            fibonacciPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    null,\n                    values[0] + diff,\n                    values[0] + diff * 0.618,\n                    values[0] + diff * 0.382,\n                    values[0],\n                    values[0] - diff * 0.382,\n                    values[0] - diff * 0.618,\n                    values[0] - diff,\n                    null\n                ];\n                return avg;\n            }\n        }\n        /**\n         * Pivot points indicator. This series requires the `linkedTo` option to be\n         * set and should be loaded after `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/pivot-points\n         *         Pivot points\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/pivotpoints\n         * @optionparent plotOptions.pivotpoints\n         */\n        PivotPointsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 28,\n                /**\n                 * Algorithm used to calculate ressistance and support lines based\n                 * on pivot points. Implemented algorithms: `'standard'`,\n                 * `'fibonacci'` and `'camarilla'`\n                 */\n                algorithm: 'standard'\n            },\n            marker: {\n                enabled: false\n            },\n            enableMouseTracking: false,\n            dataLabels: {\n                enabled: true,\n                format: '{point.pivotLine}'\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(PivotPointsIndicator.prototype, {\n            nameBase: 'Pivot Points',\n            pointArrayMap: ['R4', 'R3', 'R2', 'R1', 'P', 'S1', 'S2', 'S3', 'S4'],\n            pointValKey: 'P',\n            pointClass: PivotPointsPoint\n        });\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        SeriesRegistry.registerSeriesType('pivotpoints', PivotPointsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A pivot points indicator. If the [type](#series.pivotpoints.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.pivotpoints\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/pivotpoints\n         * @apioption series.pivotpoints\n         */\n        ''; // to include the above in the js output'\n\n        return PivotPointsIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PPO/PPOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge, error } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The PPO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ppo\n         *\n         * @augments Highcharts.Series\n         */\n        class PPOIndicator extends EMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *   Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, index = params.index, \n                // 0- date, 1- Percentage Price Oscillator\n                PPO = [], xData = [], yData = [];\n                let oscillator, i;\n                // Check if periods are correct\n                if (periods.length !== 2 || periods[1] <= periods[0]) {\n                    error('Error: \"PPO requires two periods. Notice, first period ' +\n                        'should be lower than the second one.\"');\n                    return;\n                }\n                // Shorter Period EMA\n                const SPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[0]\n                });\n                // Longer Period EMA\n                const LPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[1]\n                });\n                // Check if ema is calculated properly, if not skip\n                if (!SPE || !LPE) {\n                    return;\n                }\n                const periodsOffset = periods[1] - periods[0];\n                for (i = 0; i < LPE.yData.length; i++) {\n                    oscillator = correctFloat((SPE.yData[i + periodsOffset] -\n                        LPE.yData[i]) /\n                        LPE.yData[i] *\n                        100);\n                    PPO.push([LPE.xData[i], oscillator]);\n                    xData.push(LPE.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: PPO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Percentage Price Oscillator. This series requires the\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/ppo\n         *         Percentage Price Oscillator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/ppo\n         * @optionparent plotOptions.ppo\n         */\n        PPOIndicator.defaultOptions = merge(EMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Percentage Price Oscillator series\n             * points.\n             *\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * Periods for Percentage Price Oscillator calculations.\n                 *\n                 * @type    {Array<number>}\n                 * @default [12, 26]\n                 */\n                periods: [12, 26]\n            }\n        });\n        extend(PPOIndicator.prototype, {\n            nameBase: 'PPO',\n            nameComponents: ['periods']\n        });\n        SeriesRegistry.registerSeriesType('ppo', PPOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Percentage Price Oscillator` series. If the [type](#series.ppo.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ppo\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ppo\n         * @apioption series.ppo\n         */\n        ''; // to include the above in the js output\n\n        return PPOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ArrayUtilities.js', [], function () {\n        /**\n         *\n         *  (c) 2010-2021 Pawel Fus & Daniel Studencki\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get extremes of array filled by OHLC data.\n         *\n         * @private\n         *\n         * @param {Array<Array<number>>} arr\n         * Array of OHLC points (arrays).\n         *\n         * @param {number} minIndex\n         * Index of \"low\" value in point array.\n         *\n         * @param {number} maxIndex\n         * Index of \"high\" value in point array.\n         *\n         * @return {Array<number,number>}\n         * Returns array with min and max value.\n         */\n        function getArrayExtremes(arr, minIndex, maxIndex) {\n            return arr.reduce((prev, target) => [\n                Math.min(prev[0], target[minIndex]),\n                Math.max(prev[1], target[maxIndex])\n            ], [Number.MAX_VALUE, -Number.MAX_VALUE]);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const ArrayUtilities = {\n            getArrayExtremes\n        };\n\n        return ArrayUtilities;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PC/PCIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Color/Palettes.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, MultipleLinesComposition, Palettes, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Price Channel series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pc\n         *\n         * @augments Highcharts.Series\n         */\n        class PCIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-top line, 2-middle line, 3-bottom line\n                PC = [], \n                // middle line, top line and bottom line\n                low = 2, high = 1, xData = [], yData = [];\n                let ML, TL, BL, date, slicedY, extremes, i;\n                if (yValLen < period) {\n                    return;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    date = xVal[i - 1];\n                    slicedY = yVal.slice(i - period, i);\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    TL = extremes[1];\n                    BL = extremes[0];\n                    ML = (TL + BL) / 2;\n                    PC.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: PC,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Price channel (PC). This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/price-channel\n         *         Price Channel\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/price-channel\n         * @optionparent plotOptions.pc\n         */\n        PCIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Price channel Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      background fill between lines\n             *\n             * @type {Highcharts.Color}\n             * @apioption plotOptions.pc.fillColor\n             *\n             */\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 20\n            },\n            lineWidth: 1,\n            topLine: {\n                styles: {\n                    /**\n                     * Color of the top line. If not set, it's inherited from\n                     * [plotOptions.pc.color](#plotOptions.pc.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: Palettes.colors[2],\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            bottomLine: {\n                styles: {\n                    /**\n                     * Color of the bottom line. If not set, it's inherited from\n                     * [plotOptions.pc.color](#plotOptions.pc.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: Palettes.colors[8],\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(PCIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            nameBase: 'Price Channel',\n            nameComponents: ['period'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(PCIndicator);\n        SeriesRegistry.registerSeriesType('pc', PCIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Price channel indicator. If the [type](#series.pc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends      series,plotOptions.pc\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *               joinBy, keys, navigatorOptions, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *               showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/price-channel\n         * @apioption    series.pc\n         */\n        ''; // to include the above in the js output\n\n        return PCIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PriceEnvelopes/PriceEnvelopesIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Price Envelopes series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.priceenvelopes\n         *\n         * @augments Highcharts.Series\n         */\n        class PriceEnvelopesIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                super.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    topLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    bottomLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const period = params.period, topPercent = params.topBand, botPercent = params.bottomBand, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-top line, 2-middle line, 3-bottom line\n                PE = [], \n                // middle line, top line and bottom line\n                xData = [], yData = [];\n                let ML, TL, BL, date, slicedX, slicedY, point, i;\n                // Price envelopes requires close value\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    slicedX = xVal.slice(i - period, i);\n                    slicedY = yVal.slice(i - period, i);\n                    point = super.getValues({\n                        xData: slicedX,\n                        yData: slicedY\n                    }, params);\n                    date = point.xData[0];\n                    ML = point.yData[0];\n                    TL = ML * (1 + topPercent);\n                    BL = ML * (1 - botPercent);\n                    PE.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: PE,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Price envelopes indicator based on [SMA](#plotOptions.sma) calculations.\n         * This series requires the `linkedTo` option to be set and should be loaded\n         * after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/price-envelopes\n         *         Price envelopes\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/price-envelopes\n         * @optionparent plotOptions.priceenvelopes\n         */\n        PriceEnvelopesIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'\n            },\n            params: {\n                period: 20,\n                /**\n                 * Percentage above the moving average that should be displayed.\n                 * 0.1 means 110%. Relative to the calculated value.\n                 */\n                topBand: 0.1,\n                /**\n                 * Percentage below the moving average that should be displayed.\n                 * 0.1 means 90%. Relative to the calculated value.\n                 */\n                bottomBand: 0.1\n            },\n            /**\n             * Bottom line options.\n             */\n            bottomLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.priceenvelopes.color](\n                     * #plotOptions.priceenvelopes.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * Top line options.\n             *\n             * @extends plotOptions.priceenvelopes.bottomLine\n             */\n            topLine: {\n                styles: {\n                    lineWidth: 1\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n            /**\n             * Option for fill color between lines in Price Envelopes Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type      {Highcharts.Color}\n             * @since 11.0.0\n             * @apioption plotOptions.priceenvelopes.fillColor\n             *\n             */\n        });\n        extend(PriceEnvelopesIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            nameComponents: ['period', 'topBand', 'bottomBand'],\n            nameBase: 'Price envelopes',\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            parallelArrays: ['x', 'y', 'top', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(PriceEnvelopesIndicator);\n        SeriesRegistry.registerSeriesType('priceenvelopes', PriceEnvelopesIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A price envelopes indicator. If the [type](#series.priceenvelopes.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.priceenvelopes\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/price-envelopes\n         * @apioption series.priceenvelopes\n         */\n        ''; // to include the above in the js output\n\n        return PriceEnvelopesIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PSAR/PSARIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Parabolic SAR indicator for Highcharts Stock\n         *\n         *  (c) 2010-2021 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        function calculateDirection(previousDirection, low, high, PSAR) {\n            if ((previousDirection === 1 && low > PSAR) ||\n                (previousDirection === -1 && high > PSAR)) {\n                return 1;\n            }\n            return -1;\n        }\n        /* *\n         * Method for calculating acceleration factor\n         * dir - direction\n         * pDir - previous Direction\n         * eP - extreme point\n         * pEP - previous extreme point\n         * inc - increment for acceleration factor\n         * maxAcc - maximum acceleration factor\n         * initAcc - initial acceleration factor\n         */\n        function getAccelerationFactor(dir, pDir, eP, pEP, pAcc, inc, maxAcc, initAcc) {\n            if (dir === pDir) {\n                if (dir === 1 && (eP > pEP)) {\n                    return (pAcc === maxAcc) ? maxAcc : toFixed(pAcc + inc, 2);\n                }\n                if (dir === -1 && (eP < pEP)) {\n                    return (pAcc === maxAcc) ? maxAcc : toFixed(pAcc + inc, 2);\n                }\n                return pAcc;\n            }\n            return initAcc;\n        }\n        function getExtremePoint(high, low, previousDirection, previousExtremePoint) {\n            if (previousDirection === 1) {\n                return (high > previousExtremePoint) ? high : previousExtremePoint;\n            }\n            return (low < previousExtremePoint) ? low : previousExtremePoint;\n        }\n        function getEPMinusPSAR(EP, PSAR) {\n            return EP - PSAR;\n        }\n        function getAccelerationFactorMultiply(accelerationFactor, EPMinusSAR) {\n            return accelerationFactor * EPMinusSAR;\n        }\n        /* *\n         * Method for calculating PSAR\n         * pdir - previous direction\n         * sDir - second previous Direction\n         * PSAR - previous PSAR\n         * pACCMultiply - previous acceleration factor multiply\n         * sLow - second previous low\n         * pLow - previous low\n         * sHigh - second previous high\n         * pHigh - previous high\n         * pEP - previous extreme point\n         */\n        function getPSAR(pdir, sDir, PSAR, pACCMulti, sLow, pLow, pHigh, sHigh, pEP) {\n            if (pdir === sDir) {\n                if (pdir === 1) {\n                    return (PSAR + pACCMulti < Math.min(sLow, pLow)) ?\n                        PSAR + pACCMulti :\n                        Math.min(sLow, pLow);\n                }\n                return (PSAR + pACCMulti > Math.max(sHigh, pHigh)) ?\n                    PSAR + pACCMulti :\n                    Math.max(sHigh, pHigh);\n            }\n            return pEP;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Parabolic SAR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.psar\n         *\n         * @augments Highcharts.Series\n         */\n        class PSARIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.nameComponents = void 0;\n                this.points = void 0;\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const xVal = series.xData, yVal = series.yData, maxAccelerationFactor = params.maxAccelerationFactor, increment = params.increment, \n                // Set initial acc factor (for every new trend!)\n                initialAccelerationFactor = params.initialAccelerationFactor, decimals = params.decimals, index = params.index, PSARArr = [], xData = [], yData = [];\n                let accelerationFactor = params.initialAccelerationFactor, direction, \n                // Extreme point is the lowest low for falling and highest high\n                // for rising psar - and we are starting with falling\n                extremePoint = yVal[0][1], EPMinusPSAR, accelerationFactorMultiply, newDirection, previousDirection = 1, prevLow, prevPrevLow, prevHigh, prevPrevHigh, PSAR = yVal[0][2], newExtremePoint, high, low, ind;\n                if (index >= yVal.length) {\n                    return;\n                }\n                for (ind = 0; ind < index; ind++) {\n                    extremePoint = Math.max(yVal[ind][1], extremePoint);\n                    PSAR = Math.min(yVal[ind][2], toFixed(PSAR, decimals));\n                }\n                direction = (yVal[ind][1] > PSAR) ? 1 : -1;\n                EPMinusPSAR = getEPMinusPSAR(extremePoint, PSAR);\n                accelerationFactor = params.initialAccelerationFactor;\n                accelerationFactorMultiply = getAccelerationFactorMultiply(accelerationFactor, EPMinusPSAR);\n                PSARArr.push([xVal[index], PSAR]);\n                xData.push(xVal[index]);\n                yData.push(toFixed(PSAR, decimals));\n                for (ind = index + 1; ind < yVal.length; ind++) {\n                    prevLow = yVal[ind - 1][2];\n                    prevPrevLow = yVal[ind - 2][2];\n                    prevHigh = yVal[ind - 1][1];\n                    prevPrevHigh = yVal[ind - 2][1];\n                    high = yVal[ind][1];\n                    low = yVal[ind][2];\n                    // Null points break PSAR\n                    if (prevPrevLow !== null &&\n                        prevPrevHigh !== null &&\n                        prevLow !== null &&\n                        prevHigh !== null &&\n                        high !== null &&\n                        low !== null) {\n                        PSAR = getPSAR(direction, previousDirection, PSAR, accelerationFactorMultiply, prevPrevLow, prevLow, prevHigh, prevPrevHigh, extremePoint);\n                        newExtremePoint = getExtremePoint(high, low, direction, extremePoint);\n                        newDirection = calculateDirection(previousDirection, low, high, PSAR);\n                        accelerationFactor = getAccelerationFactor(newDirection, direction, newExtremePoint, extremePoint, accelerationFactor, increment, maxAccelerationFactor, initialAccelerationFactor);\n                        EPMinusPSAR = getEPMinusPSAR(newExtremePoint, PSAR);\n                        accelerationFactorMultiply = getAccelerationFactorMultiply(accelerationFactor, EPMinusPSAR);\n                        PSARArr.push([xVal[ind], toFixed(PSAR, decimals)]);\n                        xData.push(xVal[ind]);\n                        yData.push(toFixed(PSAR, decimals));\n                        previousDirection = direction;\n                        direction = newDirection;\n                        extremePoint = newExtremePoint;\n                    }\n                }\n                return {\n                    values: PSARArr,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Parabolic SAR. This series requires `linkedTo`\n         * option to be set and should be loaded\n         * after `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/psar\n         *         Parabolic SAR Indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/psar\n         * @optionparent plotOptions.psar\n         */\n        PSARIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            lineWidth: 0,\n            marker: {\n                enabled: true\n            },\n            states: {\n                hover: {\n                    lineWidthPlus: 0\n                }\n            },\n            /**\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * The initial value for acceleration factor.\n                 * Acceleration factor is starting with this value\n                 * and increases by specified increment each time\n                 * the extreme point makes a new high.\n                 * AF can reach a maximum of maxAccelerationFactor,\n                 * no matter how long the uptrend extends.\n                 */\n                initialAccelerationFactor: 0.02,\n                /**\n                 * The Maximum value for acceleration factor.\n                 * AF can reach a maximum of maxAccelerationFactor,\n                 * no matter how long the uptrend extends.\n                 */\n                maxAccelerationFactor: 0.2,\n                /**\n                 * Acceleration factor increases by increment each time\n                 * the extreme point makes a new high.\n                 *\n                 * @since 6.0.0\n                 */\n                increment: 0.02,\n                /**\n                 * Index from which PSAR is starting calculation\n                 *\n                 * @since 6.0.0\n                 */\n                index: 2,\n                /**\n                 * Number of maximum decimals that are used in PSAR calculations.\n                 *\n                 * @since 6.0.0\n                 */\n                decimals: 4\n            }\n        });\n        SeriesRegistry.registerSeriesType('psar', PSARIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `PSAR` series. If the [type](#series.psar.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.psar\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/psar\n         * @apioption series.psar\n         */\n        ''; // to include the above in the js output\n\n        return PSARIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ROC/ROCIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge, extend } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function populateAverage(xVal, yVal, i, period, index) {\n            /* Calculated as:\n\n               (Closing Price [today] - Closing Price [n days ago]) /\n                Closing Price [n days ago] * 100\n\n               Return y as null when avoiding division by zero */\n            let nDaysAgoY, rocY;\n            if (index < 0) {\n                // y data given as an array of values\n                nDaysAgoY = yVal[i - period];\n                rocY = nDaysAgoY ?\n                    (yVal[i] - nDaysAgoY) / nDaysAgoY * 100 :\n                    null;\n            }\n            else {\n                // y data given as an array of arrays and the index should be used\n                nDaysAgoY = yVal[i - period][index];\n                rocY = nDaysAgoY ?\n                    (yVal[i][index] - nDaysAgoY) / nDaysAgoY * 100 :\n                    null;\n            }\n            return [xVal[i], rocY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ROC series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.roc\n         *\n         * @augments Highcharts.Series\n         */\n        class ROCIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, ROC = [], xData = [], yData = [];\n                let i, index = -1, ROCPoint;\n                // Period is used as a number of time periods ago, so we need more\n                // (at least 1 more) data than the period value\n                if (xVal.length <= period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index;\n                }\n                // i = period <-- skip first N-points\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen; i++) {\n                    ROCPoint = populateAverage(xVal, yVal, i, period, index);\n                    ROC.push(ROCPoint);\n                    xData.push(ROCPoint[0]);\n                    yData.push(ROCPoint[1]);\n                }\n                return {\n                    values: ROC,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Rate of change indicator (ROC). The indicator value for each point\n         * is defined as:\n         *\n         * `(C - Cn) / Cn * 100`\n         *\n         * where: `C` is the close value of the point of the same x in the\n         * linked series and `Cn` is the close value of the point `n` periods\n         * ago. `n` is set through [period](#plotOptions.roc.params.period).\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/roc\n         *         Rate of change indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/roc\n         * @optionparent plotOptions.roc\n         */\n        ROCIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3,\n                period: 9\n            }\n        });\n        extend(ROCIndicator.prototype, {\n            nameBase: 'Rate of Change'\n        });\n        SeriesRegistry.registerSeriesType('roc', ROCIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `ROC` series. If the [type](#series.wma.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * Rate of change indicator (ROC). The indicator value for each point\n         * is defined as:\n         *\n         * `(C - Cn) / Cn * 100`\n         *\n         * where: `C` is the close value of the point of the same x in the\n         * linked series and `Cn` is the close value of the point `n` periods\n         * ago. `n` is set through [period](#series.roc.params.period).\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @extends   series,plotOptions.roc\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/roc\n         * @apioption series.roc\n         */\n        ''; // to include the above in the js output\n\n        return ROCIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/RSI/RSIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isNumber, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The RSI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.rsi\n         *\n         * @augments Highcharts.Series\n         */\n        class RSIIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.points = void 0;\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, decimals = params.decimals, \n                // RSI starts calculations from the second point\n                // Cause we need to calculate change between two points\n                RSI = [], xData = [], yData = [];\n                let gain = 0, loss = 0, index = params.index, range = 1, RSIPoint, change, avgGain, avgLoss, i, values;\n                if ((xVal.length < period)) {\n                    return;\n                }\n                if (isNumber(yVal[0])) {\n                    values = yVal;\n                }\n                else {\n                    // in case of the situation, where the series type has data length\n                    // longer then 4 (HLC, range), this ensures that we are not trying\n                    // to reach the index out of bounds\n                    index = Math.min(index, yVal[0].length - 1);\n                    values = yVal\n                        .map((value) => value[index]);\n                }\n                // Calculate changes for first N points\n                while (range < period) {\n                    change = toFixed(values[range] - values[range - 1], decimals);\n                    if (change > 0) {\n                        gain += change;\n                    }\n                    else {\n                        loss += Math.abs(change);\n                    }\n                    range++;\n                }\n                // Average for first n-1 points:\n                avgGain = toFixed(gain / (period - 1), decimals);\n                avgLoss = toFixed(loss / (period - 1), decimals);\n                for (i = range; i < yValLen; i++) {\n                    change = toFixed(values[i] - values[i - 1], decimals);\n                    if (change > 0) {\n                        gain = change;\n                        loss = 0;\n                    }\n                    else {\n                        gain = 0;\n                        loss = Math.abs(change);\n                    }\n                    // Calculate smoothed averages, RS, RSI values:\n                    avgGain = toFixed((avgGain * (period - 1) + gain) / period, decimals);\n                    avgLoss = toFixed((avgLoss * (period - 1) + loss) / period, decimals);\n                    // If average-loss is equal zero, then by definition RSI is set\n                    // to 100:\n                    if (avgLoss === 0) {\n                        RSIPoint = 100;\n                        // If average-gain is equal zero, then by definition RSI is set\n                        // to 0:\n                    }\n                    else if (avgGain === 0) {\n                        RSIPoint = 0;\n                    }\n                    else {\n                        RSIPoint = toFixed(100 - (100 / (1 + (avgGain / avgLoss))), decimals);\n                    }\n                    RSI.push([xVal[i], RSIPoint]);\n                    xData.push(xVal[i]);\n                    yData.push(RSIPoint);\n                }\n                return {\n                    values: RSI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Relative strength index (RSI) technical indicator. This series\n         * requires the `linkedTo` option to be set and should be loaded after\n         * the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/rsi\n         *         RSI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/rsi\n         * @optionparent plotOptions.rsi\n         */\n        RSIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                decimals: 4,\n                index: 3\n            }\n        });\n        SeriesRegistry.registerSeriesType('rsi', RSIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `RSI` series. If the [type](#series.rsi.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.rsi\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/rsi\n         * @apioption series.rsi\n         */\n        ''; // to include the above in the js output\n\n        return RSIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Stochastic/StochasticIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Stochastic series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.stochastic\n         *\n         * @augments Highcharts.Series\n         */\n        class StochasticIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                super.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    smoothedLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const periodK = params.periods[0], periodD = params.periods[1], xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-%K, 2-%D\n                SO = [], xData = [], yData = [], close = 3, low = 2, high = 1;\n                let slicedY, CL, HL, LL, K, D = null, points, extremes, i;\n                // Stochastic requires close value\n                if (yValLen < periodK ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // If the value of initial points is constant, wait until it changes\n                // to calculate correct Stochastic values\n                let constantValues = true, j = 0;\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = periodK - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - periodK + 1, i + 1);\n                    // Calculate %K\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    LL = extremes[0]; // Lowest low in %K periods\n                    CL = yVal[i][close] - LL;\n                    HL = extremes[1] - LL;\n                    K = CL / HL * 100;\n                    if (isNaN(K) && constantValues) {\n                        j++;\n                        continue;\n                    }\n                    else if (constantValues && !isNaN(K)) {\n                        constantValues = false;\n                    }\n                    const length = xData.push(xVal[i]);\n                    // If N-period previous values are constant which results in NaN %K,\n                    // we need to use previous %K value if it is a number,\n                    // otherwise we should use null\n                    if (isNaN(K)) {\n                        yData.push([\n                            yData[length - 2] &&\n                                typeof yData[length - 2][0] === 'number' ?\n                                yData[length - 2][0] : null,\n                            null\n                        ]);\n                    }\n                    else {\n                        yData.push([K, null]);\n                    }\n                    // Calculate smoothed %D, which is SMA of %K\n                    if (i >= j + (periodK - 1) + (periodD - 1)) {\n                        points = super.getValues({\n                            xData: xData.slice(-periodD),\n                            yData: yData.slice(-periodD)\n                        }, {\n                            period: periodD\n                        });\n                        D = points.yData[0];\n                    }\n                    SO.push([xVal[i], K, D]);\n                    yData[length - 1][1] = D;\n                }\n                return {\n                    values: SO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Stochastic oscillator. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/stochastic\n         *         Stochastic oscillator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/stochastic\n         * @optionparent plotOptions.stochastic\n         */\n        StochasticIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * Periods for Stochastic oscillator: [%K, %D].\n                 *\n                 * @type    {Array<number,number>}\n                 * @default [14, 3]\n                 */\n                periods: [14, 3]\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'\n            },\n            /**\n             * Smoothed line options.\n             */\n            smoothedLine: {\n                /**\n                 * Styles for a smoothed line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.stochastic.color\n                     * ](#plotOptions.stochastic.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(StochasticIndicator.prototype, {\n            areaLinesNames: [],\n            nameComponents: ['periods'],\n            nameBase: 'Stochastic',\n            pointArrayMap: ['y', 'smoothed'],\n            parallelArrays: ['x', 'y', 'smoothed'],\n            pointValKey: 'y',\n            linesApiNames: ['smoothedLine']\n        });\n        MultipleLinesComposition.compose(StochasticIndicator);\n        SeriesRegistry.registerSeriesType('stochastic', StochasticIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Stochastic indicator. If the [type](#series.stochastic.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.stochastic\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/stochastic\n         * @apioption series.stochastic\n         */\n        ''; // to include the above in the js output\n\n        return StochasticIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/SlowStochastic/SlowStochasticIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator, stochastic: StochasticIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Slow Stochastic series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.slowstochastic\n         *\n         * @augments Highcharts.Series\n         */\n        class SlowStochasticIndicator extends StochasticIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, fastValues = super.getValues.call(this, series, params), slowValues = {\n                    values: [],\n                    xData: [],\n                    yData: []\n                };\n                if (!fastValues) {\n                    return;\n                }\n                slowValues.xData = fastValues.xData.slice(periods[1] - 1);\n                const fastYData = fastValues.yData.slice(periods[1] - 1);\n                // Get SMA(%D)\n                const smoothedValues = SMAIndicator.prototype.getValues.call(this, {\n                    xData: slowValues.xData,\n                    yData: fastYData\n                }, {\n                    index: 1,\n                    period: periods[2]\n                });\n                if (!smoothedValues) {\n                    return;\n                }\n                // Format data\n                for (let i = 0, xDataLen = slowValues.xData.length; i < xDataLen; i++) {\n                    slowValues.yData[i] = [\n                        fastYData[i][1],\n                        smoothedValues.yData[i - periods[2] + 1] || null\n                    ];\n                    slowValues.values[i] = [\n                        slowValues.xData[i],\n                        fastYData[i][1],\n                        smoothedValues.yData[i - periods[2] + 1] || null\n                    ];\n                }\n                return slowValues;\n            }\n        }\n        /**\n         * Slow Stochastic oscillator. This series requires the `linkedTo` option\n         * to be set and should be loaded after `stock/indicators/indicators.js`\n         * and `stock/indicators/stochastic.js` files.\n         *\n         * @sample stock/indicators/slow-stochastic\n         *         Slow Stochastic oscillator\n         *\n         * @extends      plotOptions.stochastic\n         * @since        8.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/stochastic\n         * @requires     stock/indicators/slowstochastic\n         * @optionparent plotOptions.slowstochastic\n         */\n        SlowStochasticIndicator.defaultOptions = merge(StochasticIndicator.defaultOptions, {\n            params: {\n                /**\n                 * Periods for Slow Stochastic oscillator: [%K, %D, SMA(%D)].\n                 *\n                 * @type    {Array<number,number,number>}\n                 * @default [14, 3, 3]\n                 */\n                periods: [14, 3, 3]\n            }\n        });\n        extend(SlowStochasticIndicator.prototype, {\n            nameBase: 'Slow Stochastic'\n        });\n        SeriesRegistry.registerSeriesType('slowstochastic', SlowStochasticIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Slow Stochastic indicator. If the [type](#series.slowstochastic.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.slowstochastic\n         * @since     8.0.0\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/stochastic\n         * @requires  stock/indicators/slowstochastic\n         * @apioption series.slowstochastic\n         */\n        ''; // to include the above in the js output\n\n        return SlowStochasticIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Supertrend/SupertrendIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Core/Chart/StockChart.js']], function (SeriesRegistry, U, StockChart) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { atr: ATRIndicator, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { addEvent, correctFloat, isArray, extend, merge, objectEach } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function createPointObj(mainSeries, index, close) {\n            return {\n                index: index,\n                close: mainSeries.yData[index][close],\n                x: mainSeries.xData[index]\n            };\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Supertrend series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.supertrend\n         *\n         * @augments Highcharts.Series\n         */\n        class SupertrendIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.linkedParent = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                const indicator = this;\n                super.init.apply(indicator, arguments);\n                // Only after series are linked add some additional logic/properties.\n                const unbinder = addEvent(StockChart, 'afterLinkSeries', () => {\n                    // Protection for a case where the indicator is being updated,\n                    // for a brief moment the indicator is deleted.\n                    if (indicator.options) {\n                        const options = indicator.options, parentOptions = indicator.linkedParent.options;\n                        // Indicator cropThreshold has to be equal linked series one\n                        // reduced by period due to points comparison in drawGraph\n                        // (#9787)\n                        options.cropThreshold = (parentOptions.cropThreshold -\n                            (options.params.period - 1));\n                    }\n                    unbinder();\n                }, {\n                    order: 1\n                });\n            }\n            drawGraph() {\n                const indicator = this, indicOptions = indicator.options, \n                // Series that indicator is linked to\n                mainSeries = indicator.linkedParent, mainLinePoints = (mainSeries ? mainSeries.points : []), indicPoints = indicator.points, indicPath = indicator.graph, \n                // Points offset between lines\n                tempOffset = mainLinePoints.length - indicPoints.length, offset = tempOffset > 0 ? tempOffset : 0, \n                // @todo: fix when ichi-moku indicator is merged to master.\n                gappedExtend = {\n                    options: {\n                        gapSize: indicOptions.gapSize\n                    }\n                }, \n                // Sorted supertrend points array\n                groupedPoitns = {\n                    top: [],\n                    bottom: [],\n                    intersect: [] // Change trend line points\n                }, \n                // Options for trend lines\n                supertrendLineOptions = {\n                    top: {\n                        styles: {\n                            lineWidth: indicOptions.lineWidth,\n                            lineColor: (indicOptions.fallingTrendColor ||\n                                indicOptions.color),\n                            dashStyle: indicOptions.dashStyle\n                        }\n                    },\n                    bottom: {\n                        styles: {\n                            lineWidth: indicOptions.lineWidth,\n                            lineColor: (indicOptions.risingTrendColor ||\n                                indicOptions.color),\n                            dashStyle: indicOptions.dashStyle\n                        }\n                    },\n                    intersect: indicOptions.changeTrendLine\n                }, close = 3;\n                let // Supertrend line point\n                point, \n                // Supertrend line next point (has smaller x pos than point)\n                nextPoint, \n                // Main series points\n                mainPoint, nextMainPoint, \n                // Used when supertrend and main points are shifted\n                // relative to each other\n                prevMainPoint, prevPrevMainPoint, \n                // Used when particular point color is set\n                pointColor, \n                // Temporary points that fill groupedPoitns array\n                newPoint, newNextPoint, indicPointsLen = indicPoints.length;\n                // Loop which sort supertrend points\n                while (indicPointsLen--) {\n                    point = indicPoints[indicPointsLen];\n                    nextPoint = indicPoints[indicPointsLen - 1];\n                    mainPoint = mainLinePoints[indicPointsLen - 1 + offset];\n                    nextMainPoint = mainLinePoints[indicPointsLen - 2 + offset];\n                    prevMainPoint = mainLinePoints[indicPointsLen + offset];\n                    prevPrevMainPoint = mainLinePoints[indicPointsLen + offset + 1];\n                    pointColor = point.options.color;\n                    newPoint = {\n                        x: point.x,\n                        plotX: point.plotX,\n                        plotY: point.plotY,\n                        isNull: false\n                    };\n                    // When mainPoint is the last one (left plot area edge)\n                    // but supertrend has additional one\n                    if (!nextMainPoint &&\n                        mainPoint && mainSeries.yData[mainPoint.index - 1]) {\n                        nextMainPoint = createPointObj(mainSeries, mainPoint.index - 1, close);\n                    }\n                    // When prevMainPoint is the last one (right plot area edge)\n                    // but supertrend has additional one (and points are shifted)\n                    if (!prevPrevMainPoint &&\n                        prevMainPoint && mainSeries.yData[prevMainPoint.index + 1]) {\n                        prevPrevMainPoint = createPointObj(mainSeries, prevMainPoint.index + 1, close);\n                    }\n                    // When points are shifted (right or left plot area edge)\n                    if (!mainPoint &&\n                        nextMainPoint && mainSeries.yData[nextMainPoint.index + 1]) {\n                        mainPoint = createPointObj(mainSeries, nextMainPoint.index + 1, close);\n                    }\n                    else if (!mainPoint &&\n                        prevMainPoint && mainSeries.yData[prevMainPoint.index - 1]) {\n                        mainPoint = createPointObj(mainSeries, prevMainPoint.index - 1, close);\n                    }\n                    // Check if points are shifted relative to each other\n                    if (point &&\n                        mainPoint &&\n                        prevMainPoint &&\n                        nextMainPoint &&\n                        point.x !== mainPoint.x) {\n                        if (point.x === prevMainPoint.x) {\n                            nextMainPoint = mainPoint;\n                            mainPoint = prevMainPoint;\n                        }\n                        else if (point.x === nextMainPoint.x) {\n                            mainPoint = nextMainPoint;\n                            nextMainPoint = {\n                                close: mainSeries.yData[mainPoint.index - 1][close],\n                                x: mainSeries.xData[mainPoint.index - 1]\n                            };\n                        }\n                        else if (prevPrevMainPoint && point.x === prevPrevMainPoint.x) {\n                            mainPoint = prevPrevMainPoint;\n                            nextMainPoint = prevMainPoint;\n                        }\n                    }\n                    if (nextPoint && nextMainPoint && mainPoint) {\n                        newNextPoint = {\n                            x: nextPoint.x,\n                            plotX: nextPoint.plotX,\n                            plotY: nextPoint.plotY,\n                            isNull: false\n                        };\n                        if (point.y >= mainPoint.close &&\n                            nextPoint.y >= nextMainPoint.close) {\n                            point.color = (pointColor || indicOptions.fallingTrendColor ||\n                                indicOptions.color);\n                            groupedPoitns.top.push(newPoint);\n                        }\n                        else if (point.y < mainPoint.close &&\n                            nextPoint.y < nextMainPoint.close) {\n                            point.color = (pointColor || indicOptions.risingTrendColor ||\n                                indicOptions.color);\n                            groupedPoitns.bottom.push(newPoint);\n                        }\n                        else {\n                            groupedPoitns.intersect.push(newPoint);\n                            groupedPoitns.intersect.push(newNextPoint);\n                            // Additional null point to make a gap in line\n                            groupedPoitns.intersect.push(merge(newNextPoint, {\n                                isNull: true\n                            }));\n                            if (point.y >= mainPoint.close &&\n                                nextPoint.y < nextMainPoint.close) {\n                                point.color = (pointColor || indicOptions.fallingTrendColor ||\n                                    indicOptions.color);\n                                nextPoint.color = (pointColor || indicOptions.risingTrendColor ||\n                                    indicOptions.color);\n                                groupedPoitns.top.push(newPoint);\n                                groupedPoitns.top.push(merge(newNextPoint, {\n                                    isNull: true\n                                }));\n                            }\n                            else if (point.y < mainPoint.close &&\n                                nextPoint.y >= nextMainPoint.close) {\n                                point.color = (pointColor || indicOptions.risingTrendColor ||\n                                    indicOptions.color);\n                                nextPoint.color = (pointColor || indicOptions.fallingTrendColor ||\n                                    indicOptions.color);\n                                groupedPoitns.bottom.push(newPoint);\n                                groupedPoitns.bottom.push(merge(newNextPoint, {\n                                    isNull: true\n                                }));\n                            }\n                        }\n                    }\n                    else if (mainPoint) {\n                        if (point.y >= mainPoint.close) {\n                            point.color = (pointColor || indicOptions.fallingTrendColor ||\n                                indicOptions.color);\n                            groupedPoitns.top.push(newPoint);\n                        }\n                        else {\n                            point.color = (pointColor || indicOptions.risingTrendColor ||\n                                indicOptions.color);\n                            groupedPoitns.bottom.push(newPoint);\n                        }\n                    }\n                }\n                // Generate lines:\n                objectEach(groupedPoitns, function (values, lineName) {\n                    indicator.points = values;\n                    indicator.options = merge(supertrendLineOptions[lineName].styles, gappedExtend);\n                    indicator.graph = indicator['graph' + lineName + 'Line'];\n                    SMAIndicator.prototype.drawGraph.call(indicator);\n                    // Now save line\n                    indicator['graph' + lineName + 'Line'] = indicator.graph;\n                });\n                // Restore options:\n                indicator.points = indicPoints;\n                indicator.options = indicOptions;\n                indicator.graph = indicPath;\n            }\n            // Supertrend (Multiplier, Period) Formula:\n            // BASIC UPPERBAND = (HIGH + LOW) / 2 + Multiplier * ATR(Period)\n            // BASIC LOWERBAND = (HIGH + LOW) / 2 - Multiplier * ATR(Period)\n            // FINAL UPPERBAND =\n            //     IF(\n            //      Current BASICUPPERBAND  < Previous FINAL UPPERBAND AND\n            //      Previous Close > Previous FINAL UPPERBAND\n            //     ) THEN (Current BASIC UPPERBAND)\n            //     ELSE (Previous FINALUPPERBAND)\n            // FINAL LOWERBAND =\n            //     IF(\n            //      Current BASIC LOWERBAND  > Previous FINAL LOWERBAND AND\n            //      Previous Close < Previous FINAL LOWERBAND\n            //     ) THEN (Current BASIC LOWERBAND)\n            //     ELSE (Previous FINAL LOWERBAND)\n            // SUPERTREND =\n            //     IF(\n            //      Previous Supertrend == Previous FINAL UPPERBAND AND\n            //      Current Close < Current FINAL UPPERBAND\n            //     ) THAN Current FINAL UPPERBAND\n            //     ELSE IF(\n            //      Previous Supertrend == Previous FINAL LOWERBAND AND\n            //      Current Close < Current FINAL LOWERBAND\n            //     ) THAN Current FINAL UPPERBAND\n            //     ELSE IF(\n            //      Previous Supertrend == Previous FINAL UPPERBAND AND\n            //      Current Close > Current FINAL UPPERBAND\n            //     ) THAN Current FINAL LOWERBAND\n            //     ELSE IF(\n            //      Previous Supertrend == Previous FINAL LOWERBAND AND\n            //      Current Close > Current FINAL LOWERBAND\n            //     ) THAN Current FINAL LOWERBAND\n            getValues(series, params) {\n                const period = params.period, multiplier = params.multiplier, xVal = series.xData, yVal = series.yData, \n                // 0- date, 1- Supertrend indicator\n                st = [], xData = [], yData = [], close = 3, low = 2, high = 1, periodsOffset = (period === 0) ? 0 : period - 1, finalUp = [], finalDown = [];\n                let atrData = [], basicUp, basicDown, supertrend, prevFinalUp, prevFinalDown, prevST, // previous Supertrend\n                prevY, y, i;\n                if ((xVal.length <= period) || !isArray(yVal[0]) ||\n                    yVal[0].length !== 4 || period < 0) {\n                    return;\n                }\n                atrData = ATRIndicator.prototype.getValues.call(this, series, {\n                    period: period\n                }).yData;\n                for (i = 0; i < atrData.length; i++) {\n                    y = yVal[periodsOffset + i];\n                    prevY = yVal[periodsOffset + i - 1] || [];\n                    prevFinalUp = finalUp[i - 1];\n                    prevFinalDown = finalDown[i - 1];\n                    prevST = yData[i - 1];\n                    if (i === 0) {\n                        prevFinalUp = prevFinalDown = prevST = 0;\n                    }\n                    basicUp = correctFloat((y[high] + y[low]) / 2 + multiplier * atrData[i]);\n                    basicDown = correctFloat((y[high] + y[low]) / 2 - multiplier * atrData[i]);\n                    if ((basicUp < prevFinalUp) ||\n                        (prevY[close] > prevFinalUp)) {\n                        finalUp[i] = basicUp;\n                    }\n                    else {\n                        finalUp[i] = prevFinalUp;\n                    }\n                    if ((basicDown > prevFinalDown) ||\n                        (prevY[close] < prevFinalDown)) {\n                        finalDown[i] = basicDown;\n                    }\n                    else {\n                        finalDown[i] = prevFinalDown;\n                    }\n                    if (prevST === prevFinalUp && y[close] < finalUp[i] ||\n                        prevST === prevFinalDown && y[close] < finalDown[i]) {\n                        supertrend = finalUp[i];\n                    }\n                    else if (prevST === prevFinalUp && y[close] > finalUp[i] ||\n                        prevST === prevFinalDown && y[close] > finalDown[i]) {\n                        supertrend = finalDown[i];\n                    }\n                    st.push([xVal[periodsOffset + i], supertrend]);\n                    xData.push(xVal[periodsOffset + i]);\n                    yData.push(supertrend);\n                }\n                return {\n                    values: st,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Supertrend indicator. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js` and\n         * `stock/indicators/sma.js`.\n         *\n         * @sample {highstock} stock/indicators/supertrend\n         *         Supertrend indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, cropThreshold, negativeColor, colorAxis, joinBy,\n         *               keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking, threshold\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/supertrend\n         * @optionparent plotOptions.supertrend\n         */\n        SupertrendIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Supertrend indicator series points.\n             *\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * Multiplier for Supertrend Indicator.\n                 */\n                multiplier: 3,\n                /**\n                 * The base period for indicator Supertrend Indicator calculations.\n                 * This is the number of data points which are taken into account\n                 * for the indicator calculations.\n                 */\n                period: 10\n            },\n            /**\n             * Color of the Supertrend series line that is beneath the main series.\n             *\n             * @sample {highstock} stock/indicators/supertrend/\n             *         Example with risingTrendColor\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            risingTrendColor: \"#06b535\" /* Palette.positiveColor */,\n            /**\n             * Color of the Supertrend series line that is above the main series.\n             *\n             * @sample {highstock} stock/indicators/supertrend/\n             *         Example with fallingTrendColor\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            fallingTrendColor: \"#f21313\" /* Palette.negativeColor */,\n            /**\n             * The styles for the Supertrend line that intersect main series.\n             *\n             * @sample {highstock} stock/indicators/supertrend/\n             *         Example with changeTrendLine\n             */\n            changeTrendLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: \"#333333\" /* Palette.neutralColor80 */,\n                    /**\n                     * The dash or dot style of the grid lines. For possible\n                     * values, see\n                     * [this demonstration](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-dashstyle-all/).\n                     *\n                     * @sample {highcharts} highcharts/yaxis/gridlinedashstyle/\n                     *         Long dashes\n                     * @sample {highstock} stock/xaxis/gridlinedashstyle/\n                     *         Long dashes\n                     *\n                     * @type  {Highcharts.DashStyleValue}\n                     * @since 7.0.0\n                     */\n                    dashStyle: 'LongDash'\n                }\n            }\n        });\n        extend(SupertrendIndicator.prototype, {\n            nameBase: 'Supertrend',\n            nameComponents: ['multiplier', 'period']\n        });\n        SeriesRegistry.registerSeriesType('supertrend', SupertrendIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Supertrend indicator` series. If the [type](#series.supertrend.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.supertrend\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, cropThreshold, data, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, negativeColor, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *            showInNavigator, stacking, threshold\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/supertrend\n         * @apioption series.supertrend\n         */\n        ''; // to include the above in the js output\n\n        return SupertrendIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VBP/VBPPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        const { sma: { prototype: { pointClass: SMAPoint } } } = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class VBPPoint extends SMAPoint {\n            // Required for destroying negative part of volume\n            destroy() {\n                // @todo: this.negativeGraphic doesn't seem to be used anywhere\n                if (this.negativeGraphic) {\n                    this.negativeGraphic = this.negativeGraphic.destroy();\n                }\n                super.destroy.apply(this, arguments);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return VBPPoint;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VBP/VBPIndicator.js', [_modules['Stock/Indicators/VBP/VBPPoint.js'], _modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Core/Chart/StockChart.js']], function (VBPPoint, A, H, SeriesRegistry, U, StockChart) {\n        /* *\n         *\n         *  (c) 2010-2021 Paweł Dalek\n         *\n         *  Volume By Price (VBP) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { animObject } = A;\n        const { noop } = H;\n        const { column: { prototype: columnProto }, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { addEvent, arrayMax, arrayMin, correctFloat, defined, error, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const abs = Math.abs;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils\n        /**\n         * @private\n         */\n        function arrayExtremesOHLC(data) {\n            const dataLength = data.length;\n            let min = data[0][3], max = min, i = 1, currentPoint;\n            for (; i < dataLength; i++) {\n                currentPoint = data[i][3];\n                if (currentPoint < min) {\n                    min = currentPoint;\n                }\n                if (currentPoint > max) {\n                    max = currentPoint;\n                }\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Volume By Price (VBP) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.vbp\n         *\n         * @augments Highcharts.Series\n         */\n        class VBPIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.negWidths = void 0;\n                this.options = void 0;\n                this.points = void 0;\n                this.posWidths = void 0;\n                this.priceZones = void 0;\n                this.rangeStep = void 0;\n                this.volumeDataArray = void 0;\n                this.zoneStarts = void 0;\n                this.zoneLinesSVG = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init(chart, options) {\n                const indicator = this;\n                // series.update() sends data that is not necessary\n                // as everything is calculated in getValues(), #17007\n                delete options.data;\n                super.init.apply(indicator, arguments);\n                // Only after series are linked add some additional logic/properties.\n                const unbinder = addEvent(StockChart, 'afterLinkSeries', function () {\n                    // Protection for a case where the indicator is being updated,\n                    // for a brief moment the indicator is deleted.\n                    if (indicator.options) {\n                        const params = indicator.options.params, baseSeries = indicator.linkedParent, volumeSeries = chart.get(params.volumeSeriesID);\n                        indicator.addCustomEvents(baseSeries, volumeSeries);\n                    }\n                    unbinder();\n                }, {\n                    order: 1\n                });\n                return indicator;\n            }\n            // Adds events related with removing series\n            addCustomEvents(baseSeries, volumeSeries) {\n                const indicator = this, toEmptyIndicator = () => {\n                    indicator.chart.redraw();\n                    indicator.setData([]);\n                    indicator.zoneStarts = [];\n                    if (indicator.zoneLinesSVG) {\n                        indicator.zoneLinesSVG = indicator.zoneLinesSVG.destroy();\n                    }\n                };\n                // If base series is deleted, indicator series data is filled with\n                // an empty array\n                indicator.dataEventsToUnbind.push(addEvent(baseSeries, 'remove', function () {\n                    toEmptyIndicator();\n                }));\n                // If volume series is deleted, indicator series data is filled with\n                // an empty array\n                if (volumeSeries) {\n                    indicator.dataEventsToUnbind.push(addEvent(volumeSeries, 'remove', function () {\n                        toEmptyIndicator();\n                    }));\n                }\n                return indicator;\n            }\n            // Initial animation\n            animate(init) {\n                const series = this, inverted = series.chart.inverted, group = series.group, attr = {};\n                if (!init && group) {\n                    const position = inverted ? series.yAxis.top : series.xAxis.left;\n                    if (inverted) {\n                        group['forceAnimate:translateY'] = true;\n                        attr.translateY = position;\n                    }\n                    else {\n                        group['forceAnimate:translateX'] = true;\n                        attr.translateX = position;\n                    }\n                    group.animate(attr, extend(animObject(series.options.animation), {\n                        step: function (val, fx) {\n                            series.group.attr({\n                                scaleX: Math.max(0.001, fx.pos)\n                            });\n                        }\n                    }));\n                }\n            }\n            drawPoints() {\n                const indicator = this;\n                if (indicator.options.volumeDivision.enabled) {\n                    indicator.posNegVolume(true, true);\n                    columnProto.drawPoints.apply(indicator, arguments);\n                    indicator.posNegVolume(false, false);\n                }\n                columnProto.drawPoints.apply(indicator, arguments);\n            }\n            // Function responsible for dividing volume into positive and negative\n            posNegVolume(initVol, pos) {\n                const indicator = this, signOrder = pos ?\n                    ['positive', 'negative'] :\n                    ['negative', 'positive'], volumeDivision = indicator.options.volumeDivision, pointLength = indicator.points.length;\n                let posWidths = [], negWidths = [], i = 0, pointWidth, priceZone, wholeVol, point;\n                if (initVol) {\n                    indicator.posWidths = posWidths;\n                    indicator.negWidths = negWidths;\n                }\n                else {\n                    posWidths = indicator.posWidths;\n                    negWidths = indicator.negWidths;\n                }\n                for (; i < pointLength; i++) {\n                    point = indicator.points[i];\n                    point[signOrder[0] + 'Graphic'] = point.graphic;\n                    point.graphic = point[signOrder[1] + 'Graphic'];\n                    if (initVol) {\n                        pointWidth = point.shapeArgs.width;\n                        priceZone = indicator.priceZones[i];\n                        wholeVol = priceZone.wholeVolumeData;\n                        if (wholeVol) {\n                            posWidths.push(pointWidth / wholeVol * priceZone.positiveVolumeData);\n                            negWidths.push(pointWidth / wholeVol * priceZone.negativeVolumeData);\n                        }\n                        else {\n                            posWidths.push(0);\n                            negWidths.push(0);\n                        }\n                    }\n                    point.color = pos ?\n                        volumeDivision.styles.positiveColor :\n                        volumeDivision.styles.negativeColor;\n                    point.shapeArgs.width = pos ?\n                        indicator.posWidths[i] :\n                        indicator.negWidths[i];\n                    point.shapeArgs.x = pos ?\n                        point.shapeArgs.x :\n                        indicator.posWidths[i];\n                }\n            }\n            translate() {\n                const indicator = this, options = indicator.options, chart = indicator.chart, yAxis = indicator.yAxis, yAxisMin = yAxis.min, zoneLinesOptions = indicator.options.zoneLines, priceZones = (indicator.priceZones);\n                let yBarOffset = 0, volumeDataArray, maxVolume, primalBarWidth, barHeight, barHeightP, oldBarHeight, barWidth, pointPadding, chartPlotTop, barX, barY;\n                columnProto.translate.apply(indicator);\n                const indicatorPoints = indicator.points;\n                // Do translate operation when points exist\n                if (indicatorPoints.length) {\n                    pointPadding = options.pointPadding < 0.5 ?\n                        options.pointPadding :\n                        0.1;\n                    volumeDataArray = indicator.volumeDataArray;\n                    maxVolume = arrayMax(volumeDataArray);\n                    primalBarWidth = chart.plotWidth / 2;\n                    chartPlotTop = chart.plotTop;\n                    barHeight = abs(yAxis.toPixels(yAxisMin) -\n                        yAxis.toPixels(yAxisMin + indicator.rangeStep));\n                    oldBarHeight = abs(yAxis.toPixels(yAxisMin) -\n                        yAxis.toPixels(yAxisMin + indicator.rangeStep));\n                    if (pointPadding) {\n                        barHeightP = abs(barHeight * (1 - 2 * pointPadding));\n                        yBarOffset = abs((barHeight - barHeightP) / 2);\n                        barHeight = abs(barHeightP);\n                    }\n                    indicatorPoints.forEach(function (point, index) {\n                        barX = point.barX = point.plotX = 0;\n                        barY = point.plotY = (yAxis.toPixels(priceZones[index].start) -\n                            chartPlotTop -\n                            (yAxis.reversed ?\n                                (barHeight - oldBarHeight) :\n                                barHeight) -\n                            yBarOffset);\n                        barWidth = correctFloat(primalBarWidth *\n                            priceZones[index].wholeVolumeData / maxVolume);\n                        point.pointWidth = barWidth;\n                        point.shapeArgs = indicator.crispCol.apply(// eslint-disable-line no-useless-call\n                        indicator, [barX, barY, barWidth, barHeight]);\n                        point.volumeNeg = priceZones[index].negativeVolumeData;\n                        point.volumePos = priceZones[index].positiveVolumeData;\n                        point.volumeAll = priceZones[index].wholeVolumeData;\n                    });\n                    if (zoneLinesOptions.enabled) {\n                        indicator.drawZones(chart, yAxis, indicator.zoneStarts, zoneLinesOptions.styles);\n                    }\n                }\n            }\n            getExtremes() {\n                const prevCompare = this.options.compare, prevCumulative = this.options.cumulative;\n                let ret;\n                // Temporarily disable cumulative and compare while getting the extremes\n                if (this.options.compare) {\n                    this.options.compare = void 0;\n                    ret = super.getExtremes();\n                    this.options.compare = prevCompare;\n                }\n                else if (this.options.cumulative) {\n                    this.options.cumulative = false;\n                    ret = super.getExtremes();\n                    this.options.cumulative = prevCumulative;\n                }\n                else {\n                    ret = super.getExtremes();\n                }\n                return ret;\n            }\n            getValues(series, params) {\n                const indicator = this, xValues = series.processedXData, yValues = series.processedYData, chart = indicator.chart, ranges = params.ranges, VBP = [], xData = [], yData = [], volumeSeries = chart.get(params.volumeSeriesID);\n                // Checks if base series exists\n                if (!series.chart) {\n                    error('Base series not found! In case it has been removed, add ' +\n                        'a new one.', true, chart);\n                    return;\n                }\n                // Checks if volume series exists and if it has data\n                if (!volumeSeries ||\n                    !volumeSeries.processedXData.length) {\n                    const errorMessage = volumeSeries && !volumeSeries.processedXData.length ?\n                        ' does not contain any data.' :\n                        ' not found! Check `volumeSeriesID`.';\n                    error('Series ' +\n                        params.volumeSeriesID + errorMessage, true, chart);\n                    return;\n                }\n                // Checks if series data fits the OHLC format\n                const isOHLC = isArray(yValues[0]);\n                if (isOHLC && yValues[0].length !== 4) {\n                    error('Type of ' +\n                        series.name +\n                        ' series is different than line, OHLC or candlestick.', true, chart);\n                    return;\n                }\n                // Price zones contains all the information about the zones (index,\n                // start, end, volumes, etc.)\n                const priceZones = indicator.priceZones = indicator.specifyZones(isOHLC, xValues, yValues, ranges, volumeSeries);\n                priceZones.forEach(function (zone, index) {\n                    VBP.push([zone.x, zone.end]);\n                    xData.push(VBP[index][0]);\n                    yData.push(VBP[index][1]);\n                });\n                return {\n                    values: VBP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            // Specifing where each zone should start ans end\n            specifyZones(isOHLC, xValues, yValues, ranges, volumeSeries) {\n                const indicator = this, rangeExtremes = (isOHLC ? arrayExtremesOHLC(yValues) : false), zoneStarts = indicator.zoneStarts = [], priceZones = [];\n                let lowRange = rangeExtremes ?\n                    rangeExtremes.min :\n                    arrayMin(yValues), highRange = rangeExtremes ?\n                    rangeExtremes.max :\n                    arrayMax(yValues), i = 0, j = 1;\n                // If the compare mode is set on the main series, change the VBP\n                // zones to fit new extremes, #16277.\n                const mainSeries = indicator.linkedParent;\n                if (!indicator.options.compareToMain &&\n                    mainSeries.dataModify) {\n                    lowRange = mainSeries.dataModify.modifyValue(lowRange);\n                    highRange = mainSeries.dataModify.modifyValue(highRange);\n                }\n                if (!defined(lowRange) || !defined(highRange)) {\n                    if (this.points.length) {\n                        this.setData([]);\n                        this.zoneStarts = [];\n                        if (this.zoneLinesSVG) {\n                            this.zoneLinesSVG = this.zoneLinesSVG.destroy();\n                        }\n                    }\n                    return [];\n                }\n                const rangeStep = indicator.rangeStep =\n                    correctFloat(highRange - lowRange) / ranges;\n                zoneStarts.push(lowRange);\n                for (; i < ranges - 1; i++) {\n                    zoneStarts.push(correctFloat(zoneStarts[i] + rangeStep));\n                }\n                zoneStarts.push(highRange);\n                const zoneStartsLength = zoneStarts.length;\n                //    Creating zones\n                for (; j < zoneStartsLength; j++) {\n                    priceZones.push({\n                        index: j - 1,\n                        x: xValues[0],\n                        start: zoneStarts[j - 1],\n                        end: zoneStarts[j]\n                    });\n                }\n                return indicator.volumePerZone(isOHLC, priceZones, volumeSeries, xValues, yValues);\n            }\n            // Calculating sum of volume values for a specific zone\n            volumePerZone(isOHLC, priceZones, volumeSeries, xValues, yValues) {\n                const indicator = this, volumeXData = volumeSeries.processedXData, volumeYData = volumeSeries.processedYData, lastZoneIndex = priceZones.length - 1, baseSeriesLength = yValues.length, volumeSeriesLength = volumeYData.length;\n                let previousValue, startFlag, endFlag, value, i;\n                // Checks if each point has a corresponding volume value\n                if (abs(baseSeriesLength - volumeSeriesLength)) {\n                    // If the first point don't have volume, add 0 value at the\n                    // beggining of the volume array\n                    if (xValues[0] !== volumeXData[0]) {\n                        volumeYData.unshift(0);\n                    }\n                    // If the last point don't have volume, add 0 value at the end\n                    // of the volume array\n                    if (xValues[baseSeriesLength - 1] !==\n                        volumeXData[volumeSeriesLength - 1]) {\n                        volumeYData.push(0);\n                    }\n                }\n                indicator.volumeDataArray = [];\n                priceZones.forEach(function (zone) {\n                    zone.wholeVolumeData = 0;\n                    zone.positiveVolumeData = 0;\n                    zone.negativeVolumeData = 0;\n                    for (i = 0; i < baseSeriesLength; i++) {\n                        startFlag = false;\n                        endFlag = false;\n                        value = isOHLC ? yValues[i][3] : yValues[i];\n                        previousValue = i ?\n                            (isOHLC ?\n                                yValues[i - 1][3] :\n                                yValues[i - 1]) :\n                            value;\n                        // If the compare mode is set on the main series,\n                        // change the VBP zones to fit new extremes, #16277.\n                        const mainSeries = indicator.linkedParent;\n                        if (!indicator.options.compareToMain &&\n                            mainSeries.dataModify) {\n                            value = mainSeries.dataModify.modifyValue(value);\n                            previousValue = mainSeries.dataModify\n                                .modifyValue(previousValue);\n                        }\n                        // Checks if this is the point with the\n                        // lowest close value and if so, adds it calculations\n                        if (value <= zone.start && zone.index === 0) {\n                            startFlag = true;\n                        }\n                        // Checks if this is the point with the highest\n                        // close value and if so, adds it calculations\n                        if (value >= zone.end && zone.index === lastZoneIndex) {\n                            endFlag = true;\n                        }\n                        if ((value > zone.start || startFlag) &&\n                            (value < zone.end || endFlag)) {\n                            zone.wholeVolumeData += volumeYData[i];\n                            if (previousValue > value) {\n                                zone.negativeVolumeData += volumeYData[i];\n                            }\n                            else {\n                                zone.positiveVolumeData += volumeYData[i];\n                            }\n                        }\n                    }\n                    indicator.volumeDataArray.push(zone.wholeVolumeData);\n                });\n                return priceZones;\n            }\n            // Function responsoble for drawing additional lines indicating zones\n            drawZones(chart, yAxis, zonesValues, zonesStyles) {\n                const indicator = this, renderer = chart.renderer, leftLinePos = 0, rightLinePos = chart.plotWidth, verticalOffset = chart.plotTop;\n                let zoneLinesSVG = indicator.zoneLinesSVG, zoneLinesPath = [], verticalLinePos;\n                zonesValues.forEach(function (value) {\n                    verticalLinePos = yAxis.toPixels(value) - verticalOffset;\n                    zoneLinesPath = zoneLinesPath.concat(chart.renderer.crispLine([[\n                            'M',\n                            leftLinePos,\n                            verticalLinePos\n                        ], [\n                            'L',\n                            rightLinePos,\n                            verticalLinePos\n                        ]], zonesStyles.lineWidth));\n                });\n                // Create zone lines one path or update it while animating\n                if (zoneLinesSVG) {\n                    zoneLinesSVG.animate({\n                        d: zoneLinesPath\n                    });\n                }\n                else {\n                    zoneLinesSVG = indicator.zoneLinesSVG =\n                        renderer\n                            .path(zoneLinesPath)\n                            .attr({\n                            'stroke-width': zonesStyles.lineWidth,\n                            'stroke': zonesStyles.color,\n                            'dashstyle': zonesStyles.dashStyle,\n                            'zIndex': indicator.group.zIndex + 0.1\n                        })\n                            .add(indicator.group);\n                }\n            }\n        }\n        /**\n         * Volume By Price indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/volume-by-price\n         *         Volume By Price indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/volume-by-price\n         * @optionparent plotOptions.vbp\n         */\n        VBPIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The number of price zones.\n                 */\n                ranges: 12,\n                /**\n                 * The id of volume series which is mandatory. For example using\n                 * OHLC data, volumeSeriesID='volume' means the indicator will be\n                 * calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            /**\n             * The styles for lines which determine price zones.\n             */\n            zoneLines: {\n                /**\n                 * Enable/disable zone lines.\n                 */\n                enabled: true,\n                /**\n                 * Specify the style of zone lines.\n                 *\n                 * @type    {Highcharts.CSSObject}\n                 * @default {\"color\": \"#0A9AC9\", \"dashStyle\": \"LongDash\", \"lineWidth\": 1}\n                 */\n                styles: {\n                    /** @ignore-option */\n                    color: '#0A9AC9',\n                    /** @ignore-option */\n                    dashStyle: 'LongDash',\n                    /** @ignore-option */\n                    lineWidth: 1\n                }\n            },\n            /**\n             * The styles for bars when volume is divided into positive/negative.\n             */\n            volumeDivision: {\n                /**\n                 * Option to control if volume is divided.\n                 */\n                enabled: true,\n                styles: {\n                    /**\n                     * Color of positive volume bars.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    positiveColor: 'rgba(144, 237, 125, 0.8)',\n                    /**\n                     * Color of negative volume bars.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    negativeColor: 'rgba(244, 91, 91, 0.8)'\n                }\n            },\n            // To enable series animation; must be animationLimit > pointCount\n            animationLimit: 1000,\n            enableMouseTracking: false,\n            pointPadding: 0,\n            zIndex: -1,\n            crisp: true,\n            dataGrouping: {\n                enabled: false\n            },\n            dataLabels: {\n                allowOverlap: true,\n                enabled: true,\n                format: 'P: {point.volumePos:.2f} | N: {point.volumeNeg:.2f}',\n                padding: 0,\n                style: {\n                    /** @internal */\n                    fontSize: '0.5em'\n                },\n                verticalAlign: 'top'\n            }\n        });\n        extend(VBPIndicator.prototype, {\n            nameBase: 'Volume by Price',\n            nameComponents: ['ranges'],\n            calculateOn: {\n                chart: 'render',\n                xAxis: 'afterSetExtremes'\n            },\n            pointClass: VBPPoint,\n            markerAttribs: noop,\n            drawGraph: noop,\n            getColumnMetrics: columnProto.getColumnMetrics,\n            crispCol: columnProto.crispCol\n        });\n        SeriesRegistry.registerSeriesType('vbp', VBPIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Volume By Price (VBP)` series. If the [type](#series.vbp.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.vbp\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, compare, compareBase, compareStart\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/volume-by-price\n         * @apioption series.vbp\n         */\n        ''; // to include the above in the js output\n\n        return VBPIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VWAP/VWAPIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Paweł Dalek\n         *\n         *  Volume Weighted Average Price (VWAP) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { error, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Volume Weighted Average Price (VWAP) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.vwap\n         *\n         * @augments Highcharts.Series\n         */\n        class VWAPIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.points = void 0;\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const indicator = this, chart = series.chart, xValues = series.xData, yValues = series.yData, period = params.period;\n                let isOHLC = true, volumeSeries;\n                // Checks if volume series exists\n                if (!(volumeSeries = (chart.get(params.volumeSeriesID)))) {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, chart);\n                    return;\n                }\n                // Checks if series data fits the OHLC format\n                if (!(isArray(yValues[0]))) {\n                    isOHLC = false;\n                }\n                return indicator.calculateVWAPValues(isOHLC, xValues, yValues, volumeSeries, period);\n            }\n            /**\n             * Main algorithm used to calculate Volume Weighted Average Price (VWAP)\n             * values\n             *\n             * @private\n             *\n             * @param {boolean} isOHLC\n             * Says if data has OHLC format\n             *\n             * @param {Array<number>} xValues\n             * Array of timestamps\n             *\n             * @param {Array<number|Array<number,number,number,number>>} yValues\n             * Array of yValues, can be an array of a four arrays (OHLC) or array of\n             * values (line)\n             *\n             * @param {Array<*>} volumeSeries\n             * Volume series\n             *\n             * @param {number} period\n             * Number of points to be calculated\n             *\n             * @return {Object}\n             * Object contains computed VWAP\n             **/\n            calculateVWAPValues(isOHLC, xValues, yValues, volumeSeries, period) {\n                const volumeValues = volumeSeries.yData, volumeLength = volumeSeries.xData.length, pointsLength = xValues.length, cumulativePrice = [], cumulativeVolume = [], xData = [], yData = [], VWAP = [];\n                let commonLength, typicalPrice, cPrice, cVolume, i, j;\n                if (pointsLength <= volumeLength) {\n                    commonLength = pointsLength;\n                }\n                else {\n                    commonLength = volumeLength;\n                }\n                for (i = 0, j = 0; i < commonLength; i++) {\n                    // Depending on whether series is OHLC or line type, price is\n                    // average of the high, low and close or a simple value\n                    typicalPrice = isOHLC ?\n                        ((yValues[i][1] + yValues[i][2] +\n                            yValues[i][3]) / 3) :\n                        yValues[i];\n                    typicalPrice *= volumeValues[i];\n                    cPrice = j ?\n                        (cumulativePrice[i - 1] + typicalPrice) :\n                        typicalPrice;\n                    cVolume = j ?\n                        (cumulativeVolume[i - 1] + volumeValues[i]) :\n                        volumeValues[i];\n                    cumulativePrice.push(cPrice);\n                    cumulativeVolume.push(cVolume);\n                    VWAP.push([xValues[i], (cPrice / cVolume)]);\n                    xData.push(VWAP[i][0]);\n                    yData.push(VWAP[i][1]);\n                    j++;\n                    if (j === period) {\n                        j = 0;\n                    }\n                }\n                return {\n                    values: VWAP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Volume Weighted Average Price indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/vwap\n         *         Volume Weighted Average Price indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/vwap\n         * @optionparent plotOptions.vwap\n         */\n        VWAPIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 30,\n                /**\n                 * The id of volume series which is mandatory. For example using\n                 * OHLC data, volumeSeriesID='volume' means the indicator will be\n                 * calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        SeriesRegistry.registerSeriesType('vwap', VWAPIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Volume Weighted Average Price (VWAP)` series. If the\n         * [type](#series.vwap.type) option is not specified, it is inherited from\n         * [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.vwap\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/vwap\n         * @apioption series.vwap\n         */\n        ''; // to include the above in the js output\n\n        return VWAPIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/WilliamsR/WilliamsRIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Williams %R series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.williamsr\n         *\n         * @augments Highcharts.Series\n         */\n        class WilliamsRIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, WR = [], // 0- date, 1- Williams %R\n                xData = [], yData = [], close = 3, low = 2, high = 1;\n                let slicedY, extremes, R, HH, // Highest high value in period\n                LL, // Lowest low value in period\n                CC, // Current close value\n                i;\n                // Williams %R requires close value\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = period - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - period + 1, i + 1);\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    LL = extremes[0];\n                    HH = extremes[1];\n                    CC = yVal[i][close];\n                    R = ((HH - CC) / (HH - LL)) * -100;\n                    if (xVal[i]) {\n                        WR.push([xVal[i], R]);\n                        xData.push(xVal[i]);\n                        yData.push(R);\n                    }\n                }\n                return {\n                    values: WR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Williams %R. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/williams-r\n         *         Williams %R\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/williams-r\n         * @optionparent plotOptions.williamsr\n         */\n        WilliamsRIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Williams %R series points.\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * Period for Williams %R oscillator\n                 */\n                period: 14\n            }\n        });\n        extend(WilliamsRIndicator.prototype, {\n            nameBase: 'Williams %R'\n        });\n        SeriesRegistry.registerSeriesType('williamsr', WilliamsRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Williams %R Oscillator` series. If the [type](#series.williamsr.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.williamsr\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/williams-r\n         * @apioption series.williamsr\n         */\n        ''; // adds doclets above to the transpiled file\n\n        return WilliamsRIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/WMA/WMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulateAverage(points, xVal, yVal, i, index) {\n            const xValue = xVal[i], yValue = index < 0 ? yVal[i] : yVal[i][index];\n            points.push([xValue, yValue]);\n        }\n        /**\n         * @private\n         */\n        function weightedSumArray(array, pLen) {\n            // The denominator is the sum of the number of days as a triangular number.\n            // If there are 5 days, the triangular numbers are 5, 4, 3, 2, and 1.\n            // The sum is 5 + 4 + 3 + 2 + 1 = 15.\n            const denominator = (pLen + 1) / 2 * pLen;\n            // reduce VS loop => reduce\n            return array.reduce(function (prev, cur, i) {\n                return [null, prev[1] + cur[1] * (i + 1)];\n            })[1] / denominator;\n        }\n        /**\n         * @private\n         */\n        function populateAverage(points, xVal, yVal, i) {\n            const pLen = points.length, wmaY = weightedSumArray(points, pLen), wmaX = xVal[i - 1];\n            points.shift(); // remove point until range < period\n            return [wmaX, wmaY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.wma\n         *\n         * @augments Highcharts.Series\n         */\n        class WMAIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, xValue = xVal[0], wma = [], xData = [], yData = [];\n                let range = 1, index = -1, i, wmaPoint, yValue = yVal[0];\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick\n                if (isArray(yVal[0])) {\n                    index = params.index;\n                    yValue = yVal[0][index];\n                }\n                // Starting point\n                const points = [[xValue, yValue]];\n                // Accumulate first N-points\n                while (range !== period) {\n                    accumulateAverage(points, xVal, yVal, range, index);\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    wmaPoint = populateAverage(points, xVal, yVal, i);\n                    wma.push(wmaPoint);\n                    xData.push(wmaPoint[0]);\n                    yData.push(wmaPoint[1]);\n                    accumulateAverage(points, xVal, yVal, i, index);\n                }\n                wmaPoint = populateAverage(points, xVal, yVal, i);\n                wma.push(wmaPoint);\n                xData.push(wmaPoint[0]);\n                yData.push(wmaPoint[1]);\n                return {\n                    values: wma,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Weighted moving average indicator (WMA). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/wma\n         *         Weighted moving average indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/wma\n         * @optionparent plotOptions.wma\n         */\n        WMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3,\n                period: 9\n            }\n        });\n        SeriesRegistry.registerSeriesType('wma', WMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `WMA` series. If the [type](#series.wma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.wma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/wma\n         * @apioption series.wma\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return WMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Zigzag/ZigzagIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Zig Zag series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.zigzag\n         *\n         * @augments Highcharts.Series\n         */\n        class ZigzagIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.points = void 0;\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const lowIndex = params.lowIndex, highIndex = params.highIndex, deviation = params.deviation / 100, deviations = {\n                    'low': 1 + deviation,\n                    'high': 1 - deviation\n                }, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, zigzag = [], xData = [], yData = [];\n                let i, j, zigzagPoint, directionUp, exitLoop = false, yIndex = false;\n                // Exit if not enught points or no low or high values\n                if (!xVal || xVal.length <= 1 ||\n                    (yValLen &&\n                        (typeof yVal[0][lowIndex] === 'undefined' ||\n                            typeof yVal[0][highIndex] === 'undefined'))) {\n                    return;\n                }\n                // Set first zigzag point candidate\n                const firstZigzagLow = yVal[0][lowIndex], firstZigzagHigh = yVal[0][highIndex];\n                // Search for a second zigzag point candidate,\n                // this will also set first zigzag point\n                for (i = 1; i < yValLen; i++) {\n                    // requried change to go down\n                    if (yVal[i][lowIndex] <= firstZigzagHigh * deviations.high) {\n                        zigzag.push([xVal[0], firstZigzagHigh]);\n                        // second zigzag point candidate\n                        zigzagPoint = [xVal[i], yVal[i][lowIndex]];\n                        // next line will be going up\n                        directionUp = true;\n                        exitLoop = true;\n                        // requried change to go up\n                    }\n                    else if (yVal[i][highIndex] >= firstZigzagLow * deviations.low) {\n                        zigzag.push([xVal[0], firstZigzagLow]);\n                        // second zigzag point candidate\n                        zigzagPoint = [xVal[i], yVal[i][highIndex]];\n                        // next line will be going down\n                        directionUp = false;\n                        exitLoop = true;\n                    }\n                    if (exitLoop) {\n                        xData.push(zigzag[0][0]);\n                        yData.push(zigzag[0][1]);\n                        j = i++;\n                        i = yValLen;\n                    }\n                }\n                // Search for next zigzags\n                for (i = j; i < yValLen; i++) {\n                    if (directionUp) { // next line up\n                        // lower when going down -> change zigzag candidate\n                        if (yVal[i][lowIndex] <= zigzagPoint[1]) {\n                            zigzagPoint = [xVal[i], yVal[i][lowIndex]];\n                        }\n                        // requried change to go down -> new zigzagpoint and\n                        // direction change\n                        if (yVal[i][highIndex] >=\n                            zigzagPoint[1] * deviations.low) {\n                            yIndex = highIndex;\n                        }\n                    }\n                    else { // next line down\n                        // higher when going up -> change zigzag candidate\n                        if (yVal[i][highIndex] >= zigzagPoint[1]) {\n                            zigzagPoint = [xVal[i], yVal[i][highIndex]];\n                        }\n                        // requried change to go down -> new zigzagpoint and\n                        // direction change\n                        if (yVal[i][lowIndex] <=\n                            zigzagPoint[1] * deviations.high) {\n                            yIndex = lowIndex;\n                        }\n                    }\n                    if (yIndex !== false) { // new zigzag point and direction change\n                        zigzag.push(zigzagPoint);\n                        xData.push(zigzagPoint[0]);\n                        yData.push(zigzagPoint[1]);\n                        zigzagPoint = [xVal[i], yVal[i][yIndex]];\n                        directionUp = !directionUp;\n                        yIndex = false;\n                    }\n                }\n                const zigzagLen = zigzag.length;\n                // no zigzag for last point\n                if (zigzagLen !== 0 &&\n                    zigzag[zigzagLen - 1][0] < xVal[yValLen - 1]) {\n                    // set last point from zigzag candidate\n                    zigzag.push(zigzagPoint);\n                    xData.push(zigzagPoint[0]);\n                    yData.push(zigzagPoint[1]);\n                }\n                return {\n                    values: zigzag,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Zig Zag indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/zigzag\n         *         Zig Zag indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/zigzag\n         * @optionparent plotOptions.zigzag\n         */\n        ZigzagIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The point index which indicator calculations will base - low\n                 * value.\n                 *\n                 * For example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                lowIndex: 2,\n                /**\n                 * The point index which indicator calculations will base - high\n                 * value.\n                 *\n                 * For example using OHLC data, index=1 means the indicator will be\n                 * calculated using High values.\n                 */\n                highIndex: 1,\n                /**\n                 * The threshold for the value change.\n                 *\n                 * For example deviation=1 means the indicator will ignore all price\n                 * movements less than 1%.\n                 */\n                deviation: 1\n            }\n        });\n        extend(ZigzagIndicator.prototype, {\n            nameComponents: ['deviation'],\n            nameSuffixes: ['%'],\n            nameBase: 'Zig Zag'\n        });\n        SeriesRegistry.registerSeriesType('zigzag', ZigzagIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Zig Zag` series. If the [type](#series.zigzag.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.zigzag\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/zigzag\n         * @apioption series.zigzag\n         */\n        ''; // adds doclets above to transpiled file\n\n        return ZigzagIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegression/LinearRegressionIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2021 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Linear regression series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearregression\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Return the slope and intercept of a straight line function.\n             *\n             * @private\n             *\n             * @param {Array<number>} xData\n             * List of all x coordinates in a period.\n             *\n             * @param {Array<number>} yData\n             * List of all y coordinates in a period.\n             *\n             * @return {Highcharts.RegressionLineParametersObject}\n             * Object that contains the slope and the intercept of a straight line\n             * function.\n             */\n            getRegressionLineParameters(xData, yData) {\n                // least squares method\n                const yIndex = this.options.params.index, getSingleYValue = function (yValue, yIndex) {\n                    return isArray(yValue) ? yValue[yIndex] : yValue;\n                }, xSum = xData.reduce(function (accX, val) {\n                    return val + accX;\n                }, 0), ySum = yData.reduce(function (accY, val) {\n                    return getSingleYValue(val, yIndex) + accY;\n                }, 0), xMean = xSum / xData.length, yMean = ySum / yData.length;\n                let xError, yError, i, formulaNumerator = 0, formulaDenominator = 0;\n                for (i = 0; i < xData.length; i++) {\n                    xError = xData[i] - xMean;\n                    yError = getSingleYValue(yData[i], yIndex) - yMean;\n                    formulaNumerator += xError * yError;\n                    formulaDenominator += Math.pow(xError, 2);\n                }\n                const slope = formulaDenominator ?\n                    formulaNumerator / formulaDenominator : 0; // don't divide by 0\n                return {\n                    slope: slope,\n                    intercept: yMean - slope * xMean\n                };\n            }\n            /**\n             * Return the y value on a straight line.\n             *\n             * @private\n             *\n             * @param {Highcharts.RegressionLineParametersObject} lineParameters\n             * Object that contains the slope and the intercept of a straight line\n             * function.\n             *\n             * @param {number} endPointX\n             * X coordinate of the point.\n             *\n             * @return {number}\n             * Y value of the point that lies on the line.\n             */\n            getEndPointY(lineParameters, endPointX) {\n                return lineParameters.slope * endPointX + lineParameters.intercept;\n            }\n            /**\n             * Transform the coordinate system so that x values start at 0 and\n             * apply xAxisUnit.\n             *\n             * @private\n             *\n             * @param {Array<number>} xData\n             * List of all x coordinates in a period\n             *\n             * @param {number} xAxisUnit\n             * Option (see the API)\n             *\n             * @return {Array<number>}\n             * Array of transformed x data\n             */\n            transformXData(xData, xAxisUnit) {\n                const xOffset = xData[0];\n                return xData.map(function (xValue) {\n                    return (xValue - xOffset) / xAxisUnit;\n                });\n            }\n            /**\n             * Find the closest distance between points in the base series.\n             * @private\n             * @param {Array<number>} xData list of all x coordinates in the base series\n             * @return {number} - closest distance between points in the base series\n             */\n            findClosestDistance(xData) {\n                let distance, closestDistance, i;\n                for (i = 1; i < xData.length - 1; i++) {\n                    distance = xData[i] - xData[i - 1];\n                    if (distance > 0 &&\n                        (typeof closestDistance === 'undefined' ||\n                            distance < closestDistance)) {\n                        closestDistance = distance;\n                    }\n                }\n                return closestDistance;\n            }\n            // Required to be implemented - starting point for indicator's logic\n            getValues(baseSeries, regressionSeriesParams) {\n                const xData = baseSeries.xData, yData = baseSeries.yData, period = regressionSeriesParams.period, \n                // format required to be returned\n                indicatorData = {\n                    xData: [],\n                    yData: [],\n                    values: []\n                }, xAxisUnit = this.options.params.xAxisUnit ||\n                    this.findClosestDistance(xData);\n                let lineParameters, i, periodStart, periodEnd, endPointX, endPointY, periodXData, periodYData, periodTransformedXData;\n                // Iteration logic: x value of the last point within the period\n                // (end point) is used to represent the y value (regression)\n                // of the entire period.\n                for (i = period - 1; i <= xData.length - 1; i++) {\n                    periodStart = i - period + 1; // adjusted for slice() function\n                    periodEnd = i + 1; // (as above)\n                    endPointX = xData[i];\n                    periodXData = xData.slice(periodStart, periodEnd);\n                    periodYData = yData.slice(periodStart, periodEnd);\n                    periodTransformedXData = this.transformXData(periodXData, xAxisUnit);\n                    lineParameters = this.getRegressionLineParameters(periodTransformedXData, periodYData);\n                    endPointY = this.getEndPointY(lineParameters, periodTransformedXData[periodTransformedXData.length - 1]);\n                    // @todo this is probably not used anywhere\n                    indicatorData.values.push({\n                        regressionLineParameters: lineParameters,\n                        x: endPointX,\n                        y: endPointY\n                    });\n                    indicatorData.xData.push(endPointX);\n                    indicatorData.yData.push(endPointY);\n                }\n                return indicatorData;\n            }\n        }\n        /**\n         * Linear regression indicator. This series requires `linkedTo` option to be\n         * set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression\n         *         Linear regression indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/regressions\n         * @optionparent plotOptions.linearregression\n         */\n        LinearRegressionIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * Unit (in milliseconds) for the x axis distances used to\n                 * compute the regression line paramters (slope & intercept) for\n                 * every range. In Highcharts Stock the x axis values are always\n                 * represented in milliseconds which may cause that distances\n                 * between points are \"big\" integer numbers.\n                 *\n                 * Highcharts Stock's linear regression algorithm (least squares\n                 * method) will utilize these \"big\" integers for finding the\n                 * slope and the intercept of the regression line for each\n                 * period. In consequence, this value may be a very \"small\"\n                 * decimal number that's hard to interpret by a human.\n                 *\n                 * For instance: `xAxisUnit` equealed to `86400000` ms (1 day)\n                 * forces the algorithm to treat `86400000` as `1` while\n                 * computing the slope and the intercept. This may enchance the\n                 * legiblitity of the indicator's values.\n                 *\n                 * Default value is the closest distance between two data\n                 * points.\n                 *\n                 * In `v9.0.2`, the default value has been changed\n                 * from `undefined` to `null`.\n                 *\n                 * @sample {highstock} stock/plotoptions/linear-regression-xaxisunit\n                 *         xAxisUnit set to 1 minute\n                 *\n                 * @example\n                 * // In Liniear Regression Slope Indicator series `xAxisUnit`is\n                 * // `86400000` (1 day) and period is `3`. There're 3 points in\n                 * // the base series:\n                 *\n                 * data: [\n                 *   [Date.UTC(2020, 0, 1), 1],\n                 *   [Date.UTC(2020, 0, 2), 3],\n                 *   [Date.UTC(2020, 0, 3), 5]\n                 * ]\n                 *\n                 * // This will produce one point in the indicator series that\n                 * // has a `y` value of `2` (slope of the regression line). If\n                 * // we change the `xAxisUnit` to `1` (ms) the value of the\n                 * // indicator's point will be `2.3148148148148148e-8` which is\n                 * // harder to interpert for a human.\n                 *\n                 * @type    {null|number}\n                 * @product highstock\n                 */\n                xAxisUnit: null\n            },\n            tooltip: {\n                valueDecimals: 4\n            }\n        });\n        extend(LinearRegressionIndicator.prototype, {\n            nameBase: 'Linear Regression Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegression', LinearRegressionIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A linear regression series. If the\n         * [type](#series.linearregression.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregression\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregression\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegressionSlopes/LinearRegressionSlopesIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2021 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { linearRegression: LinearRegressionIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Linear Regression Slope series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearRegressionSlope\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionSlopesIndicator extends LinearRegressionIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEndPointY(lineParameters) {\n                return lineParameters.slope;\n            }\n        }\n        /**\n         * Linear regression slope indicator. This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression-slope\n         *         Linear regression slope indicator\n         *\n         * @extends      plotOptions.linearregression\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @optionparent plotOptions.linearregressionslope\n         */\n        LinearRegressionSlopesIndicator.defaultOptions = merge(LinearRegressionIndicator.defaultOptions);\n        extend(LinearRegressionSlopesIndicator.prototype, {\n            nameBase: 'Linear Regression Slope Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegressionSlope', LinearRegressionSlopesIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A linear regression intercept series. If the\n         * [type](#series.linearregressionslope.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregressionslope\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregressionslope\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionSlopesIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegressionIntercept/LinearRegressionInterceptIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2021 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { linearRegression: LinearRegressionIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Linear Regression Intercept series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearRegressionIntercept\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionInterceptIndicator extends LinearRegressionIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEndPointY(lineParameters) {\n                return lineParameters.intercept;\n            }\n        }\n        /**\n         * Linear regression intercept indicator. This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression-intercept\n         *         Linear intercept slope indicator\n         *\n         * @extends      plotOptions.linearregression\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @optionparent plotOptions.linearregressionintercept\n         */\n        LinearRegressionInterceptIndicator.defaultOptions = merge(LinearRegressionIndicator.defaultOptions);\n        extend(LinearRegressionInterceptIndicator.prototype, {\n            nameBase: 'Linear Regression Intercept Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegressionIntercept', LinearRegressionInterceptIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A linear regression intercept series. If the\n         * [type](#series.linearregressionintercept.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregressionintercept\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregressionintercept\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionInterceptIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegressionAngle/LinearRegressionAngleIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2021 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { linearRegression: LinearRegressionIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Linear Regression Angle series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearRegressionAngle\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionAngleIndicator extends LinearRegressionIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Convert a slope of a line to angle (in degrees) between\n             * the line and x axis\n             * @private\n             * @param {number} slope of the straight line function\n             * @return {number} angle in degrees\n             */\n            slopeToAngle(slope) {\n                return Math.atan(slope) * (180 / Math.PI); // rad to deg\n            }\n            getEndPointY(lineParameters) {\n                return this.slopeToAngle(lineParameters.slope);\n            }\n        }\n        /**\n         * Linear regression angle indicator. This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression-angle\n         *         Linear intercept angle indicator\n         *\n         * @extends      plotOptions.linearregression\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @optionparent plotOptions.linearregressionangle\n         */\n        LinearRegressionAngleIndicator.defaultOptions = merge(LinearRegressionIndicator.defaultOptions, {\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span>' +\n                    '{series.name}: <b>{point.y}°</b><br/>'\n            }\n        });\n        extend(LinearRegressionAngleIndicator.prototype, {\n            nameBase: 'Linear Regression Angle Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegressionAngle', LinearRegressionAngleIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /**\n         * A linear regression intercept series. If the\n         * [type](#series.linearregressionangle.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregressionangle\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregressionangle\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionAngleIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ABands/ABandsIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function getBaseForBand(low, high, factor) {\n            return (((correctFloat(high - low)) /\n                ((correctFloat(high + low)) / 2)) * 1000) * factor;\n        }\n        /**\n         * @private\n         */\n        function getPointUB(high, base) {\n            return high * (correctFloat(1 + 2 * base));\n        }\n        /**\n         * @private\n         */\n        function getPointLB(low, base) {\n            return low * (correctFloat(1 - 2 * base));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ABands series type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.abands\n         *\n         * @augments Highcharts.Series\n         */\n        class ABandsIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, factor = params.factor, index = params.index, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // Upperbands\n                UB = [], \n                // Lowerbands\n                LB = [], \n                // ABANDS array structure:\n                // 0-date, 1-top line, 2-middle line, 3-bottom line\n                ABANDS = [], low = 2, high = 1, xData = [], yData = [];\n                // middle line, top line and bottom line\n                let ML, TL, BL, date, bandBase, pointSMA, ubSMA, lbSMA, slicedX, slicedY, i;\n                if (yValLen < period) {\n                    return;\n                }\n                for (i = 0; i <= yValLen; i++) {\n                    // Get UB and LB values of every point. This condition\n                    // is necessary, because there is a need to calculate current\n                    // UB nad LB values simultaneously with given period SMA\n                    // in one for loop.\n                    if (i < yValLen) {\n                        bandBase = getBaseForBand(yVal[i][low], yVal[i][high], factor);\n                        UB.push(getPointUB(yVal[i][high], bandBase));\n                        LB.push(getPointLB(yVal[i][low], bandBase));\n                    }\n                    if (i >= period) {\n                        slicedX = xVal.slice(i - period, i);\n                        slicedY = yVal.slice(i - period, i);\n                        ubSMA = super.getValues.call(this, {\n                            xData: slicedX,\n                            yData: UB.slice(i - period, i)\n                        }, {\n                            period: period\n                        });\n                        lbSMA = super.getValues.call(this, {\n                            xData: slicedX,\n                            yData: LB.slice(i - period, i)\n                        }, {\n                            period: period\n                        });\n                        pointSMA = super.getValues.call(this, {\n                            xData: slicedX,\n                            yData: slicedY\n                        }, {\n                            period: period,\n                            index: index\n                        });\n                        date = pointSMA.xData[0];\n                        TL = ubSMA.yData[0];\n                        BL = lbSMA.yData[0];\n                        ML = pointSMA.yData[0];\n                        ABANDS.push([date, TL, ML, BL]);\n                        xData.push(date);\n                        yData.push([TL, ML, BL]);\n                    }\n                }\n                return {\n                    values: ABANDS,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Acceleration bands (ABANDS). This series requires the `linkedTo` option\n         * to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/acceleration-bands\n         *         Acceleration Bands\n         *\n         * @extends      plotOptions.sma\n         * @mixes        Highcharts.MultipleLinesMixin\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking,\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/acceleration-bands\n         * @optionparent plotOptions.abands\n         */\n        ABandsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Accelleration bands Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type {Highcharts.Color}\n             * @since 9.3.2\n             * @apioption plotOptions.abands.fillColor\n             *\n             */\n            params: {\n                period: 20,\n                /**\n                 * The algorithms factor value used to calculate bands.\n                 *\n                 * @product highstock\n                 */\n                factor: 0.001,\n                index: 3\n            },\n            lineWidth: 1,\n            topLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            bottomLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(ABandsIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            nameBase: 'Acceleration Bands',\n            nameComponents: ['period', 'factor'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(ABandsIndicator);\n        SeriesRegistry.registerSeriesType('abands', ABandsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An Acceleration bands indicator. If the [type](#series.abands.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.abands\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *            stacking, showInNavigator,\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/acceleration-bands\n         * @apioption series.abands\n         */\n        ''; // to include the above in jsdoc\n\n        return ABandsIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/TrendLine/TrendLineIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, isArray } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Trend line series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.trendline\n         *\n         * @augments Highcharts.Series\n         */\n        class TrendLineIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *   Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n                this.updateAllPoints = true;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const xVal = series.xData, yVal = series.yData, LR = [], xData = [], yData = [], xValLength = xVal.length, index = params.index;\n                let sumX = (xValLength - 1) * xValLength / 2, sumY = 0, sumXY = 0, sumX2 = ((xValLength - 1) * (xValLength) * (2 * xValLength - 1)) / 6, alpha, i, y;\n                // Get sums:\n                for (i = 0; i < xValLength; i++) {\n                    y = isArray(yVal[i]) ? yVal[i][index] : yVal[i];\n                    sumY += y;\n                    sumXY += i * y;\n                }\n                // Get slope and offset:\n                alpha = (xValLength * sumXY - sumX * sumY) /\n                    (xValLength * sumX2 - sumX * sumX);\n                if (isNaN(alpha)) {\n                    alpha = 0;\n                }\n                const beta = (sumY - alpha * sumX) / xValLength;\n                // Calculate linear regression:\n                for (i = 0; i < xValLength; i++) {\n                    y = alpha * i + beta;\n                    // Prepare arrays required for getValues() method\n                    LR[i] = [xVal[i], y];\n                    xData[i] = xVal[i];\n                    yData[i] = y;\n                }\n                return {\n                    xData: xData,\n                    yData: yData,\n                    values: LR\n                };\n            }\n        }\n        /**\n         * Trendline (linear regression) fits a straight line to the selected data\n         * using a method called the Sum Of Least Squares. This series requires the\n         * `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/trendline\n         *         Trendline indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.1.3\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/trendline\n         * @optionparent plotOptions.trendline\n         */\n        TrendLineIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 *\n                 * @default 3\n                 */\n                index: 3\n            }\n        });\n        extend(TrendLineIndicator.prototype, {\n            nameBase: 'Trendline',\n            nameComponents: false\n        });\n        SeriesRegistry.registerSeriesType('trendline', TrendLineIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TrendLine` series. If the [type](#series.trendline.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.trendline\n         * @since     7.1.3\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/trendline\n         * @apioption series.trendline\n         */\n        ''; // to include the above in the js output\n\n        return TrendLineIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DisparityIndex/DisparityIndexIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *  (c) 2010-2021 Rafal Sebestjanski\n         *\n         *  Disparity Index technical indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, defined, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Disparity Index series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.disparityindex\n         *\n         * @augments Highcharts.Series\n         */\n        class DisparityIndexIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.averageIndicator = void 0;\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                const args = arguments, ctx = this, // Disparity Index indicator\n                params = args[1].params, // options.params\n                averageType = params && params.average ? params.average : void 0;\n                ctx.averageIndicator = SeriesRegistry\n                    .seriesTypes[averageType] || SMAIndicator;\n                ctx.averageIndicator.prototype.init.apply(ctx, args);\n            }\n            calculateDisparityIndex(curPrice, periodAverage) {\n                return correctFloat(curPrice - periodAverage) / periodAverage * 100;\n            }\n            getValues(series, params) {\n                const index = params.index, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, disparityIndexPoint = [], xData = [], yData = [], \n                // \"as any\" because getValues doesn't exist on typeof Series\n                averageIndicator = this.averageIndicator, isOHLC = isArray(yVal[0]), \n                // Get the average indicator's values\n                values = averageIndicator.prototype.getValues(series, params), yValues = values.yData, start = xVal.indexOf(values.xData[0]);\n                // Check period, if bigger than points length, skip\n                if (!yValues || yValues.length === 0 ||\n                    !defined(index) ||\n                    yVal.length <= start) {\n                    return;\n                }\n                // Get the Disparity Index indicator's values\n                for (let i = start; i < yValLen; i++) {\n                    const disparityIndexValue = this.calculateDisparityIndex(isOHLC ? yVal[i][index] : yVal[i], yValues[i - start]);\n                    disparityIndexPoint.push([\n                        xVal[i],\n                        disparityIndexValue\n                    ]);\n                    xData.push(xVal[i]);\n                    yData.push(disparityIndexValue);\n                }\n                return {\n                    values: disparityIndexPoint,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Disparity Index.\n         * This series requires the `linkedTo` option to be set and should\n         * be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/disparity-index\n         *         Disparity Index indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/disparity-index\n         * @optionparent plotOptions.disparityindex\n         */\n        DisparityIndexIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The average used to calculate the Disparity Index indicator.\n                 * By default it uses SMA, with EMA as an option. To use other\n                 * averages, e.g. TEMA, the `stock/indicators/tema.js` file needs to\n                 * be loaded.\n                 *\n                 * If value is different than `ema`, `dema`, `tema` or `wma`,\n                 * then sma is used.\n                 */\n                average: 'sma',\n                index: 3\n            },\n            marker: {\n                enabled: false\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(DisparityIndexIndicator.prototype, {\n            nameBase: 'Disparity Index',\n            nameComponents: ['period', 'average']\n        });\n        SeriesRegistry.registerSeriesType('disparityindex', DisparityIndexIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The Disparity Index indicator series.\n         * If the [type](#series.disparityindex.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.disparityindex\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/disparity-index\n         * @apioption series.disparityindex\n         */\n        ''; // to include the above in the js output\n\n        return DisparityIndexIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/indicators-all.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Chart","SeriesRegistry","U","line","LineSeries","seriesTypes","addEvent","fireEvent","error","extend","isArray","merge","pick","splat","SMAIndicator","constructor","arguments","data","dataEventsToUnbind","linkedParent","options","points","destroy","forEach","unbinder","getName","params","name","nameComponents","component","index","push","nameSuffixes","nameBase","type","toUpperCase","join","getValues","series","period","xVal","xData","yVal","yData","yValLen","length","SMA","i","range","SMAPoint","sum","values","init","chart","indicator","call","linkedSeriesUnbiner","isUpdating","hasEvents","linkedTo","recalculateValues","calculateOn","xAxis","processedYData","order","eventsToUnbind","croppedDataValues","oldData","oldDataLength","overwriteData","oldFirstPointIndex","oldLastPointIndex","croppedData","min","max","processedData","hasGroupedData","visible","cropped","cropData","concat","indexOf","x","shift","updateData","updateAllPoints","processedXData","isDirty","redraw","isDirtyData","linkedSeries","processData","compareToMain","dataModify","compareValue","defaultOptions","tooltip","valueDecimals","prototype","hasDerivedData","useCommonDataGrouping","registerSeriesType","sma","correctFloat","EMAIndicator","accumulatePeriodPoints","calculateEma","EMApercent","calEMA","yValue","y","EMA","EMAPoint","ADIndicator","populateAverage","yValVolume","_period","high","low","close","volume","adX","len","ADPoint","volumeSeriesID","volumeSeries","get","AD","H","noop","column","columnProto","AOIndicator","drawGraph","userColor","userOptions","color","positiveColor","greaterBarColor","negativeColor","lowerBarColor","firstPoint","AO","awesome","shortLastIndex","longLastIndex","price","j","longSum","shortSum","longPeriod","shortSMA","threshold","groupPadding","pointPadding","crisp","states","hover","halo","size","markerAttribs","getColumnMetrics","crispCol","translate","drawPoints","MultipleLinesComposition","smaProto","defined","composedMembers","linesApiNames","pointArrayMap","areaLinesNames","getLineName","propertyName","charAt","slice","getTranslatedLinesNames","excludedValue","translatedLines","indicatorDrawGraph","pointValKey","mainLinePoints","mainLineOptions","mainLinePath","graph","gappedExtend","gapSize","secondaryLines","secondaryLinesNames","pointsLength","point","plotLine","plotX","plotY","isNull","fillColor","secondLinePoints","firstLinePoints","originalColor","nextPoints","area","fillGraph","lineName","styles","indicatorGetGraphPath","areaPath","higherAreaPath","getGraphPath","indicatorToYData","pointColl","indicatorTranslate","LinesNames","value","modifyValue","yAxis","toPixels","compose","IndicatorClass","pushUnique","proto","toYData","getExtremeIndexInArray","arr","extreme","extremeValue","valueIndex","AroonIndicator","aroonUp","aroonDown","xLow","slicedY","AR","map","elem","marker","enabled","pointFormat","lineWidth","lineColor","dataGrouping","approximation","aroon","AroonOscillatorIndicator","oscillator","ARO","getTR","currentPoint","prevPoint","HL","pointY","HCp","Math","abs","prevY","LCp","ATRIndicator","xValue","ATR","prevATR","TR","accumulateAverage","BBIndicator","topLine","bottomLine","ML","TL","BL","date","slicedX","stdDev","standardDeviation","BB","isOHLC","getStandardDeviation","mean","arrLen","variance","sqrt","CCIIndicator","TP","CCI","CCIPoint","p","periodTP","smaTP","TPtemp","meanDev","sumArray","array","reduce","prev","cur","meanDeviation","CMFIndicator","isValid","isSeriesOHLC","isLengthValid","serie","getMoneyFlow","seriesYData","volumeSeriesYData","moneyFlowVolume","moneyFlowXData","moneyFlowYData","nullIndex","sumVolume","sumMoneyFlowVolume","getMoneyFlowVolume","ohlc","h","c","l","DMIIndicator","calculateDM","isPositiveDM","currentHigh","currentLow","previousHigh","previousLow","calculateDI","smoothedDM","tr","calculateDX","plusDI","minusDI","smoothValues","accumulatedValues","currentValue","DMI","prevSmoothedPlusDM","prevSmoothedMinusDM","prevSmoothedTR","smoothedPlusDM","smoothedMinusDM","smoothedTR","plusDM","minusDM","DX","plusDILine","minusDILine","parallelArrays","accumulatePoints","subtract","DPOIndicator","floor","DPO","periodIndex","rangeIndex","ema","ChaikinIndicator","periods","CHA","ADL","SPE","LPE","periodsOffset","isNumber","CMOIndicator","CMO","firstAddedSum","sumOfHigherValues","sumOfLowerValues","DEMAIndicator","getEMA","prevEMA","EMAvalues","doubledPeriod","DEMA","xDataDema","yDataDema","EMAlevel2","prevEMAlevel2","DEMAPoint","TEMAIndicator","getTemaPoint","tripledPeriod","EMAlevels","TEMAPoint","level1","level2","level3","tema","xDataTema","yDataTema","emaValues","emaLevel2Values","emaLevels","temaPoint","prevLevel3","TRIXIndicator","APOIndicator","APO","ApproximationRegistry","Color","parse","getClosestDistance","objectEach","highlowLevel","res","Infinity","drawSenkouSpan","opt","senkouSpan","gap","IKHIndicator","graphCollection","tenkanLine","kijunLine","chikouLine","senkouSpanA","fill","setOpacity","senkouSpanB","tenkanSen","kijunSen","chikouSpan","key","pointValue","tooltipPos","mainColor","pointArrayMapLength","allIchimokuPoints","ikhMap","intersectIndexColl","senkouSpanOptions","lineIndex","position","startIntersect","endIntersect","sectionPoints","sectionNextPoints","pointsPlotYSum","nextPointsPlotYSum","senkouSpanTempColor","concatArrIndex","k","intersect","checkLineIntersection","a1","a2","b1","b2","saX","saY","sbX","sbY","sabX","sabY","u","t","intersectPointObj","intersectPoint","splice","graphName","unshift","areaName","graphsenkouSpan","spanA","spanAarr","pointTS","pointKS","pointSSB","TS","KS","CS","SSA","SSB","periodTenkan","periodSenkouSpanB","closestPointRange","s","IKH","dateStart","isEmptyRange","ret","average","KeltnerChannelsIndicator","pointEMA","pointATR","periodATR","multiplierATR","KC","seriesEMA","seriesATR","atr","KlingerIndicator","calculateTrend","isUpward","isValidData","firstYVal","every","slowAvgPeriod","getCM","previousCM","DM","trend","previousTrend","prevoiusDM","getDM","getVolumeForce","volumeForce","CM","previousDM","getSMA","Klinger","calcSingal","KO","fastEMA","slowEMA","previousFastEMA","previousSlowEMA","signal","SMAFast","fastAvgPeriod","SMASlow","fastEMApercent","slowEMApercent","signalPeriod","curr","signalLine","ColumnSeries","MACDIndicator","macdZones","signalZones","colorIndex","getCyclic","colors","macdLine","zones","startIndex","resetZones","MACD","plotNames","graphmacd","graphsignal","histogramZones","otherSignals","plotMACD","plotSignal","currentLineZone","getZonesGraphs","props","allZones","currentZones","applyZones","hide","indexToShift","shortPeriod","xMACD","yMACD","shortEMA","longEMA","minPointLength","calculateTypicalPrice","MFIIndicator","decimals","MFI","positiveMoneyFlow","negativeMoneyFlow","newTypicalPrice","oldTypicalPrice","rawMoneyFlow","negativeMoneyFlowSum","MFIPoint","isUp","typicalPrice","parseFloat","a","positiveMoneyFlowSum","toFixed","mmY","mmX","MomentumIndicator","MMPoint","MM","NATRIndicator","atrData","atrLength","valueSuffix","OBVIndicator","OBV","hasOHLC","OBVPoint","previousOBV","curentOBV","previousClose","curentClose","pointClass","destroyExtraLabels","functionName","prop","element","P","pivotLine","destroyElements","PivotPointsPoint","PivotPointsIndicator","endPoint","plotEndPoint","allPivotPoints","pivotPoints","drawDataLabels","currentLabel","pointMapping","dataLabels","dataLabel","endTimestamp","slicedXLen","lastPP","avg","placement","algorithm","PP","getPivotAndHLC","pivot","standardPlacement","diff","camarillaPlacement","fibonacciPlacement","enableMouseTracking","format","PPOIndicator","PPO","getArrayExtremes","minIndex","maxIndex","target","Number","MAX_VALUE","AU","Palettes","PCIndicator","extremes","PC","PriceEnvelopesIndicator","topPercent","topBand","botPercent","bottomBand","PE","n","PSARIndicator","maxAccelerationFactor","increment","initialAccelerationFactor","PSARArr","accelerationFactor","direction","extremePoint","EPMinusPSAR","accelerationFactorMultiply","newDirection","previousDirection","prevLow","prevPrevLow","prevHigh","prevPrevHigh","PSAR","newExtremePoint","ind","EP","previousExtremePoint","pdir","sDir","pACCMulti","pEP","dir","pDir","pAcc","eP","lineWidthPlus","ROCIndicator","ROC","ROCPoint","nDaysAgoY","rocY","RSIIndicator","RSI","gain","loss","RSIPoint","change","avgGain","avgLoss","StochasticIndicator","smoothedLine","periodK","periodD","SO","LL","K","D","constantValues","isNaN","CL","stochastic","SlowStochasticIndicator","fastValues","slowValues","fastYData","smoothedValues","xDataLen","StockChart","createPointObj","mainSeries","SupertrendIndicator","parentOptions","cropThreshold","indicOptions","indicPoints","indicPath","tempOffset","offset","groupedPoitns","top","bottom","supertrendLineOptions","fallingTrendColor","dashStyle","risingTrendColor","changeTrendLine","nextPoint","mainPoint","nextMainPoint","prevMainPoint","prevPrevMainPoint","pointColor","newPoint","newNextPoint","indicPointsLen","multiplier","st","finalUp","finalDown","basicUp","basicDown","supertrend","prevFinalUp","prevFinalDown","prevST","negativeGraphic","VBPPoint","A","animObject","arrayMax","arrayMin","VBPIndicator","negWidths","posWidths","priceZones","rangeStep","volumeDataArray","zoneStarts","zoneLinesSVG","baseSeries","addCustomEvents","toEmptyIndicator","setData","animate","inverted","group","attr","left","translateY","translateX","animation","step","val","fx","scaleX","pos","volumeDivision","posNegVolume","initVol","signOrder","pointLength","pointWidth","priceZone","wholeVol","graphic","shapeArgs","width","wholeVolumeData","positiveVolumeData","negativeVolumeData","yAxisMin","zoneLinesOptions","zoneLines","yBarOffset","maxVolume","primalBarWidth","barHeight","barHeightP","oldBarHeight","barWidth","chartPlotTop","barX","barY","indicatorPoints","plotWidth","plotTop","start","reversed","volumeNeg","volumePos","volumeAll","drawZones","getExtremes","prevCompare","compare","prevCumulative","cumulative","xValues","yValues","ranges","VBP","errorMessage","specifyZones","zone","end","rangeExtremes","arrayExtremesOHLC","dataLength","lowRange","highRange","zoneStartsLength","volumePerZone","previousValue","startFlag","endFlag","volumeXData","volumeYData","lastZoneIndex","baseSeriesLength","volumeSeriesLength","zonesValues","zonesStyles","renderer","rightLinePos","verticalOffset","zoneLinesPath","verticalLinePos","crispLine","d","zIndex","add","animationLimit","allowOverlap","padding","style","fontSize","verticalAlign","VWAPIndicator","calculateVWAPValues","commonLength","cPrice","cVolume","volumeValues","volumeLength","cumulativePrice","cumulativeVolume","VWAP","WilliamsRIndicator","R","HH","WR","pLen","wmaY","wmaX","WMAIndicator","wma","wmaPoint","ZigzagIndicator","lowIndex","highIndex","deviation","deviations","zigzag","zigzagPoint","directionUp","exitLoop","yIndex","firstZigzagLow","firstZigzagHigh","zigzagLen","LinearRegressionIndicator","getRegressionLineParameters","getSingleYValue","xSum","accX","ySum","accY","xMean","yMean","xError","formulaNumerator","formulaDenominator","pow","slope","intercept","getEndPointY","lineParameters","endPointX","transformXData","xAxisUnit","xOffset","findClosestDistance","distance","closestDistance","regressionSeriesParams","periodStart","periodEnd","endPointY","periodXData","periodYData","periodTransformedXData","indicatorData","regressionLineParameters","linearRegression","LinearRegressionSlopesIndicator","LinearRegressionInterceptIndicator","LinearRegressionAngleIndicator","slopeToAngle","atan","PI","ABandsIndicator","bandBase","pointSMA","ubSMA","lbSMA","factor","UB","LB","ABANDS","TrendLineIndicator","LR","xValLength","sumX","sumY","sumXY","alpha","beta","DisparityIndexIndicator","averageIndicator","averageType","ctx","calculateDisparityIndex","curPrice","periodAverage","disparityIndexPoint","disparityIndexValue"],"mappings":"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"}
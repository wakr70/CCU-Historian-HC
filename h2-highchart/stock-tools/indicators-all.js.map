{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.0 (2024-03-04)\n *\n * All technical indicators for Highcharts Stock\n *\n * (c) 2010-2024 Pawel Fus\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/indicators-all', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/SMA/SMAIndicator.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Chart, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { line: LineSeries } = SeriesRegistry.seriesTypes;\n        const { addEvent, fireEvent, error, extend, isArray, merge, pick, splat } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         */\n        class SMAIndicator extends LineSeries {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            destroy() {\n                this.dataEventsToUnbind.forEach(function (unbinder) {\n                    unbinder();\n                });\n                super.destroy.apply(this, arguments);\n            }\n            /**\n             * @private\n             */\n            getName() {\n                const params = [];\n                let name = this.name;\n                if (!name) {\n                    (this.nameComponents || []).forEach(function (component, index) {\n                        params.push(this.options.params[component] +\n                            pick(this.nameSuffixes[index], ''));\n                    }, this);\n                    name = (this.nameBase || this.type.toUpperCase()) +\n                        (this.nameComponents ? ' (' + params.join(', ') + ')' : '');\n                }\n                return name;\n            }\n            /**\n             * @private\n             */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal.length, SMA = [], xData = [], yData = [];\n                let i, index = -1, range = 0, SMAPoint, sum = 0;\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                while (range < period - 1) {\n                    sum += index < 0 ? yVal[range] : yVal[range][index];\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    sum += index < 0 ? yVal[i] : yVal[i][index];\n                    SMAPoint = [xVal[i], sum / period];\n                    SMA.push(SMAPoint);\n                    xData.push(SMAPoint[0]);\n                    yData.push(SMAPoint[1]);\n                    sum -= (index < 0 ?\n                        yVal[i - range] :\n                        yVal[i - range][index]);\n                }\n                return {\n                    values: SMA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            /**\n             * @private\n             */\n            init(chart, options) {\n                const indicator = this;\n                super.init.call(indicator, chart, options);\n                // Only after series are linked indicator can be processed.\n                const linkedSeriesUnbiner = addEvent(Chart, 'afterLinkSeries', function ({ isUpdating }) {\n                    // #18643 indicator shouldn't recalculate\n                    // values while series updating.\n                    if (isUpdating) {\n                        return;\n                    }\n                    const hasEvents = !!indicator.dataEventsToUnbind.length;\n                    if (indicator.linkedParent) {\n                        if (!hasEvents) {\n                            // No matter which indicator, always recalculate after\n                            // updating the data.\n                            indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent, 'updatedData', function () {\n                                indicator.recalculateValues();\n                            }));\n                            // Some indicators (like VBP) requires an additional\n                            // event (afterSetExtremes) to properly show the data.\n                            if (indicator.calculateOn.xAxis) {\n                                indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent.xAxis, indicator.calculateOn.xAxis, function () {\n                                    indicator.recalculateValues();\n                                }));\n                            }\n                        }\n                        // Most indicators are being calculated on chart's init.\n                        if (indicator.calculateOn.chart === 'init') {\n                            if (!indicator.processedYData) {\n                                indicator.recalculateValues();\n                            }\n                        }\n                        else if (!hasEvents) {\n                            // Some indicators (like VBP) has to recalculate their\n                            // values after other chart's events (render).\n                            const unbinder = addEvent(indicator.chart, indicator.calculateOn.chart, function () {\n                                indicator.recalculateValues();\n                                // Call this just once.\n                                unbinder();\n                            });\n                        }\n                    }\n                    else {\n                        return error('Series ' +\n                            indicator.options.linkedTo +\n                            ' not found! Check `linkedTo`.', false, chart);\n                    }\n                }, {\n                    order: 0\n                });\n                // Make sure we find series which is a base for an indicator\n                // chart.linkSeries();\n                indicator.dataEventsToUnbind = [];\n                indicator.eventsToUnbind.push(linkedSeriesUnbiner);\n            }\n            /**\n             * @private\n             */\n            recalculateValues() {\n                const croppedDataValues = [], indicator = this, oldData = indicator.points || [], oldDataLength = (indicator.xData || []).length, emptySet = {\n                    values: [],\n                    xData: [],\n                    yData: []\n                };\n                let overwriteData = true, oldFirstPointIndex, oldLastPointIndex, croppedData, min, max, i;\n                // Updating an indicator with redraw=false may destroy data.\n                // If there will be a following update for the parent series,\n                // we will try to access Series object without any properties\n                // (except for prototyped ones). This is what happens\n                // for example when using Axis.setDataGrouping(). See #16670\n                const processedData = indicator.linkedParent.options &&\n                    indicator.linkedParent.yData && // #18176, #18177 indicators should\n                    indicator.linkedParent.yData.length ? // work with empty dataset\n                    (indicator.getValues(indicator.linkedParent, indicator.options.params) || emptySet) : emptySet;\n                // We need to update points to reflect changes in all,\n                // x and y's, values. However, do it only for non-grouped\n                // data - grouping does it for us (#8572)\n                if (oldDataLength &&\n                    !indicator.hasGroupedData &&\n                    indicator.visible &&\n                    indicator.points) {\n                    // When data is cropped update only avaliable points (#9493)\n                    if (indicator.cropped) {\n                        if (indicator.xAxis) {\n                            min = indicator.xAxis.min;\n                            max = indicator.xAxis.max;\n                        }\n                        croppedData = indicator.cropData(processedData.xData, processedData.yData, min, max);\n                        for (i = 0; i < croppedData.xData.length; i++) {\n                            // (#10774)\n                            croppedDataValues.push([\n                                croppedData.xData[i]\n                            ].concat(splat(croppedData.yData[i])));\n                        }\n                        oldFirstPointIndex = processedData.xData.indexOf(indicator.xData[0]);\n                        oldLastPointIndex = processedData.xData.indexOf(indicator.xData[indicator.xData.length - 1]);\n                        // Check if indicator points should be shifted (#8572)\n                        if (oldFirstPointIndex === -1 &&\n                            oldLastPointIndex === processedData.xData.length - 2) {\n                            if (croppedDataValues[0][0] === oldData[0].x) {\n                                croppedDataValues.shift();\n                            }\n                        }\n                        indicator.updateData(croppedDataValues);\n                    }\n                    else if (indicator.updateAllPoints || // #18710\n                        // Omit addPoint() and removePoint() cases\n                        processedData.xData.length !== oldDataLength - 1 &&\n                            processedData.xData.length !== oldDataLength + 1) {\n                        overwriteData = false;\n                        indicator.updateData(processedData.values);\n                    }\n                }\n                if (overwriteData) {\n                    indicator.xData = processedData.xData;\n                    indicator.yData = processedData.yData;\n                    indicator.options.data = processedData.values;\n                }\n                // Removal of processedXData property is required because on\n                // first translate processedXData array is empty\n                if (indicator.calculateOn.xAxis && indicator.processedXData) {\n                    delete indicator.processedXData;\n                    indicator.isDirty = true;\n                    indicator.redraw();\n                }\n                indicator.isDirtyData = !!indicator.linkedSeries.length;\n                fireEvent(indicator, 'updatedData'); // #18689\n            }\n            /**\n             * @private\n             */\n            processData() {\n                const series = this, compareToMain = series.options.compareToMain, linkedParent = series.linkedParent;\n                super.processData.apply(series, arguments);\n                if (series.dataModify &&\n                    linkedParent &&\n                    linkedParent.dataModify &&\n                    linkedParent.dataModify.compareValue &&\n                    compareToMain) {\n                    series.dataModify.compareValue =\n                        linkedParent.dataModify.compareValue;\n                }\n                return;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * The parameter allows setting line series type and use OHLC indicators.\n         * Data in OHLC format is required.\n         *\n         * @sample {highstock} stock/indicators/use-ohlc-data\n         *         Use OHLC data format to plot line chart\n         *\n         * @type      {boolean}\n         * @product   highstock\n         * @apioption plotOptions.line.useOhlcData\n         */\n        /**\n         * Simple moving average indicator (SMA). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/sma\n         *         Simple moving average indicator\n         *\n         * @extends      plotOptions.line\n         * @since        6.0.0\n         * @excluding    allAreas, colorAxis, dragDrop, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking, useOhlcData\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @optionparent plotOptions.sma\n         */\n        SMAIndicator.defaultOptions = merge(LineSeries.defaultOptions, {\n            /**\n             * The name of the series as shown in the legend, tooltip etc. If not\n             * set, it will be based on a technical indicator type and default\n             * params.\n             *\n             * @type {string}\n             */\n            name: void 0,\n            tooltip: {\n                /**\n                 * Number of decimals in indicator series.\n                 */\n                valueDecimals: 4\n            },\n            /**\n             * The main series ID that indicator will be based on. Required for this\n             * indicator.\n             *\n             * @type {string}\n             */\n            linkedTo: void 0,\n            /**\n             * Whether to compare indicator to the main series values\n             * or indicator values.\n             *\n             * @sample {highstock} stock/plotoptions/series-comparetomain/\n             *         Difference between comparing SMA values to the main series\n             *         and its own values.\n             *\n             * @type {boolean}\n             */\n            compareToMain: false,\n            /**\n             * Parameters used in calculation of regression series' points.\n             */\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                index: 3,\n                /**\n                 * The base period for indicator calculations. This is the number of\n                 * data points which are taken into account for the indicator\n                 * calculations.\n                 */\n                period: 14\n            }\n        });\n        extend(SMAIndicator.prototype, {\n            calculateOn: {\n                chart: 'init'\n            },\n            hasDerivedData: true,\n            nameComponents: ['period'],\n            nameSuffixes: [],\n            useCommonDataGrouping: true\n        });\n        SeriesRegistry.registerSeriesType('sma', SMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `SMA` series. If the [type](#series.sma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.sma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, useOhlcData\n         * @requires  stock/indicators/indicators\n         * @apioption series.sma\n         */\n        (''); // adds doclet above to the transpiled file\n\n        return SMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/EMA/EMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The EMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ema\n         *\n         * @augments Highcharts.Series\n         */\n        class EMAIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            accumulatePeriodPoints(period, index, yVal) {\n                let sum = 0, i = 0, y = 0;\n                while (i < period) {\n                    y = index < 0 ? yVal[i] : yVal[i][index];\n                    sum = sum + y;\n                    i++;\n                }\n                return sum;\n            }\n            calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA) {\n                const x = xVal[i - 1], yValue = index < 0 ?\n                    yVal[i - 1] :\n                    yVal[i - 1][index], y = typeof calEMA === 'undefined' ?\n                    SMA : correctFloat((yValue * EMApercent) +\n                    (calEMA * (1 - EMApercent)));\n                return [x, y];\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, EMApercent = 2 / (period + 1), EMA = [], xData = [], yData = [];\n                let calEMA, EMAPoint, i, index = -1, sum = 0, SMA = 0;\n                // Check period, if bigger than points length, skip\n                if (yValLen < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                sum = this.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                SMA = sum / period;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 1; i++) {\n                    EMAPoint = this.calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA);\n                    EMA.push(EMAPoint);\n                    xData.push(EMAPoint[0]);\n                    yData.push(EMAPoint[1]);\n                    calEMA = EMAPoint[1];\n                }\n                return {\n                    values: EMA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Exponential moving average indicator (EMA). This series requires the\n         * `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/ema\n         * Exponential moving average indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @optionparent plotOptions.ema\n         */\n        EMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 *\n                 * By default index value used to be set to 0. Since\n                 * Highcharts Stock 7 by default index is set to 3\n                 * which means that the ema indicator will be\n                 * calculated using Close values.\n                 */\n                index: 3,\n                period: 9 // @merge 14 in v6.2\n            }\n        });\n        SeriesRegistry.registerSeriesType('ema', EMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `EMA` series. If the [type](#series.ema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ema\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @apioption series.ema\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return EMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/AD/ADIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { error, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AD series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ad\n         *\n         * @augments Highcharts.Series\n         */\n        class ADIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static populateAverage(xVal, yVal, yValVolume, i, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            _period) {\n                const high = yVal[i][1], low = yVal[i][2], close = yVal[i][3], volume = yValVolume[i], adY = close === high && close === low || high === low ?\n                    0 :\n                    ((2 * close - low - high) / (high - low)) * volume, adX = xVal[i];\n                return [adX, adY];\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, volumeSeriesID = params.volumeSeriesID, volumeSeries = series.chart.get(volumeSeriesID), yValVolume = volumeSeries && volumeSeries.yData, yValLen = yVal ? yVal.length : 0, AD = [], xData = [], yData = [];\n                let len, i, ADPoint;\n                if (xVal.length <= period &&\n                    yValLen &&\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                if (!volumeSeries) {\n                    error('Series ' +\n                        volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                // i = period <-- skip first N-points\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen; i++) {\n                    len = AD.length;\n                    ADPoint = ADIndicator.populateAverage(xVal, yVal, yValVolume, i, period);\n                    if (len > 0) {\n                        ADPoint[1] += AD[len - 1][1];\n                    }\n                    AD.push(ADPoint);\n                    xData.push(ADPoint[0]);\n                    yData.push(ADPoint[1]);\n                }\n                return {\n                    values: AD,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Accumulation Distribution (AD). This series requires `linkedTo` option to\n         * be set.\n         *\n         * @sample stock/indicators/accumulation-distribution\n         *         Accumulation/Distribution indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/accumulation-distribution\n         * @optionparent plotOptions.ad\n         */\n        ADIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 *\n                 * @since 6.0.0\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        extend(ADIndicator.prototype, {\n            nameComponents: false,\n            nameBase: 'Accumulation/Distribution'\n        });\n        SeriesRegistry.registerSeriesType('ad', ADIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `AD` series. If the [type](#series.ad.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ad\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/accumulation-distribution\n         * @apioption series.ad\n         */\n        ''; // add doclet above to transpiled file\n\n        return ADIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/AO/AOIndicator.js', [_modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { noop } = H;\n        const { column: { prototype: columnProto }, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, correctFloat, isArray } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AO series type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ao\n         *\n         * @augments Highcharts.Series\n         */\n        class AOIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            drawGraph() {\n                const indicator = this, options = indicator.options, points = indicator.points, userColor = indicator.userOptions.color, positiveColor = options.greaterBarColor, negativeColor = options.lowerBarColor, firstPoint = points[0];\n                let i;\n                if (!userColor && firstPoint) {\n                    firstPoint.color = positiveColor;\n                    for (i = 1; i < points.length; i++) {\n                        if (points[i].y > points[i - 1].y) {\n                            points[i].color = positiveColor;\n                        }\n                        else if (points[i].y < points[i - 1].y) {\n                            points[i].color = negativeColor;\n                        }\n                        else {\n                            points[i].color = points[i - 1].color;\n                        }\n                    }\n                }\n            }\n            getValues(series) {\n                const shortPeriod = 5, longPeriod = 34, xVal = series.xData || [], yVal = series.yData || [], yValLen = yVal.length, AO = [], // 0- date, 1- Awesome Oscillator\n                xData = [], yData = [], high = 1, low = 2;\n                let shortSMA, // Shorter Period SMA\n                longSMA, // Longer Period SMA\n                awesome, shortLastIndex, longLastIndex, price, i, j, longSum = 0, shortSum = 0;\n                if (xVal.length <= longPeriod ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = 0; i < longPeriod - 1; i++) {\n                    price = (yVal[i][high] + yVal[i][low]) / 2;\n                    if (i >= longPeriod - shortPeriod) {\n                        shortSum = correctFloat(shortSum + price);\n                    }\n                    longSum = correctFloat(longSum + price);\n                }\n                for (j = longPeriod - 1; j < yValLen; j++) {\n                    price = (yVal[j][high] + yVal[j][low]) / 2;\n                    shortSum = correctFloat(shortSum + price);\n                    longSum = correctFloat(longSum + price);\n                    shortSMA = shortSum / shortPeriod;\n                    longSMA = longSum / longPeriod;\n                    awesome = correctFloat(shortSMA - longSMA);\n                    AO.push([xVal[j], awesome]);\n                    xData.push(xVal[j]);\n                    yData.push(awesome);\n                    shortLastIndex = j + 1 - shortPeriod;\n                    longLastIndex = j + 1 - longPeriod;\n                    shortSum = correctFloat(shortSum -\n                        (yVal[shortLastIndex][high] +\n                            yVal[shortLastIndex][low]) / 2);\n                    longSum = correctFloat(longSum -\n                        (yVal[longLastIndex][high] +\n                            yVal[longLastIndex][low]) / 2);\n                }\n                return {\n                    values: AO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Awesome Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`\n         *\n         * @sample {highstock} stock/indicators/ao\n         *         Awesome\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               params, pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/ao\n         * @optionparent plotOptions.ao\n         */\n        AOIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0\n            },\n            /**\n             * Color of the Awesome oscillator series bar that is greater than the\n             * previous one. Note that if a `color` is defined, the `color`\n             * takes precedence and the `greaterBarColor` is ignored.\n             *\n             * @sample {highstock} stock/indicators/ao/\n             *         greaterBarColor\n             *\n             * @type  {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since 7.0.0\n             */\n            greaterBarColor: \"#06b535\" /* Palette.positiveColor */,\n            /**\n             * Color of the Awesome oscillator series bar that is lower than the\n             * previous one. Note that if a `color` is defined, the `color`\n             * takes precedence and the `lowerBarColor` is ignored.\n             *\n             * @sample {highstock} stock/indicators/ao/\n             *         lowerBarColor\n             *\n             * @type  {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since 7.0.0\n             */\n            lowerBarColor: \"#f21313\" /* Palette.negativeColor */,\n            threshold: 0,\n            groupPadding: 0.2,\n            pointPadding: 0.2,\n            crisp: false,\n            states: {\n                hover: {\n                    halo: {\n                        size: 0\n                    }\n                }\n            }\n        });\n        extend(AOIndicator.prototype, {\n            nameBase: 'AO',\n            nameComponents: void 0,\n            // Columns support:\n            markerAttribs: noop,\n            getColumnMetrics: columnProto.getColumnMetrics,\n            crispCol: columnProto.crispCol,\n            translate: columnProto.translate,\n            drawPoints: columnProto.drawPoints\n        });\n        SeriesRegistry.registerSeriesType('ao', AOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `AO` series. If the [type](#series.ao.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ao\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ao\n         * @apioption series.ao\n         */\n        ''; // for including the above in the doclets\n\n        return AOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MultipleLinesComposition.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Wojciech Chmiel\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: { prototype: smaProto } } = SeriesRegistry.seriesTypes;\n        const { defined, error, merge } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var MultipleLinesComposition;\n        (function (MultipleLinesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            /**\n             * Additional lines DOCS names. Elements of linesApiNames array should\n             * be consistent with DOCS line names defined in your implementation.\n             * Notice that linesApiNames should have decreased amount of elements\n             * relative to pointArrayMap (without pointValKey).\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            const linesApiNames = ['bottomLine'];\n            /**\n             * Lines ids. Required to plot appropriate amount of lines.\n             * Notice that pointArrayMap should have more elements than\n             * linesApiNames, because it contains main line and additional lines ids.\n             * Also it should be consistent with amount of lines calculated in\n             * getValues method from your implementation.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            const pointArrayMap = ['top', 'bottom'];\n            /**\n             * Names of the lines, between which the area should be plotted.\n             * If the drawing of the area should\n             * be disabled for some indicators, leave this option as an empty array.\n             * Names should be the same as the names in the pointArrayMap.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            const areaLinesNames = ['top'];\n            /**\n             * Main line id.\n             *\n             * @private\n             * @type {string}\n             */\n            const pointValKey = 'top';\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Composition useful for all indicators that have more than one line.\n             * Compose it with your implementation where you will provide the\n             * `getValues` method appropriate to your indicator and `pointArrayMap`,\n             * `pointValKey`, `linesApiNames` properties. Notice that `pointArrayMap`\n             * should be consistent with the amount of lines calculated in the\n             * `getValues` method.\n             *\n             * @private\n             */\n            function compose(IndicatorClass) {\n                const proto = IndicatorClass.prototype;\n                proto.linesApiNames = (proto.linesApiNames ||\n                    linesApiNames.slice());\n                proto.pointArrayMap = (proto.pointArrayMap ||\n                    pointArrayMap.slice());\n                proto.pointValKey = (proto.pointValKey ||\n                    pointValKey);\n                proto.areaLinesNames = (proto.areaLinesNames ||\n                    areaLinesNames.slice());\n                proto.drawGraph = indicatorDrawGraph;\n                proto.getGraphPath = indicatorGetGraphPath;\n                proto.toYData = indicatorToYData;\n                proto.translate = indicatorTranslate;\n                return IndicatorClass;\n            }\n            MultipleLinesComposition.compose = compose;\n            /**\n             * Generate the API name of the line\n             *\n             * @private\n             * @param propertyName name of the line\n             */\n            function getLineName(propertyName) {\n                return ('plot' +\n                    propertyName.charAt(0).toUpperCase() +\n                    propertyName.slice(1));\n            }\n            /**\n             * Create translatedLines Collection based on pointArrayMap.\n             *\n             * @private\n             * @param {string} [excludedValue]\n             *        Main line id\n             * @return {Array<string>}\n             *         Returns translated lines names without excluded value.\n             */\n            function getTranslatedLinesNames(indicator, excludedValue) {\n                const translatedLines = [];\n                (indicator.pointArrayMap || []).forEach((propertyName) => {\n                    if (propertyName !== excludedValue) {\n                        translatedLines.push(getLineName(propertyName));\n                    }\n                });\n                return translatedLines;\n            }\n            /**\n             * Draw main and additional lines.\n             *\n             * @private\n             */\n            function indicatorDrawGraph() {\n                const indicator = this, pointValKey = indicator.pointValKey, linesApiNames = indicator.linesApiNames, areaLinesNames = indicator.areaLinesNames, mainLinePoints = indicator.points, mainLineOptions = indicator.options, mainLinePath = indicator.graph, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, \n                // additional lines point place holders:\n                secondaryLines = [], secondaryLinesNames = getTranslatedLinesNames(indicator, pointValKey);\n                let pointsLength = mainLinePoints.length, point;\n                // Generate points for additional lines:\n                secondaryLinesNames.forEach((plotLine, index) => {\n                    // create additional lines point place holders\n                    secondaryLines[index] = [];\n                    while (pointsLength--) {\n                        point = mainLinePoints[pointsLength];\n                        secondaryLines[index].push({\n                            x: point.x,\n                            plotX: point.plotX,\n                            plotY: point[plotLine],\n                            isNull: !defined(point[plotLine])\n                        });\n                    }\n                    pointsLength = mainLinePoints.length;\n                });\n                // Modify options and generate area fill:\n                if (indicator.userOptions.fillColor && areaLinesNames.length) {\n                    const index = secondaryLinesNames.indexOf(getLineName(areaLinesNames[0])), secondLinePoints = secondaryLines[index], firstLinePoints = areaLinesNames.length === 1 ?\n                        mainLinePoints :\n                        secondaryLines[secondaryLinesNames.indexOf(getLineName(areaLinesNames[1]))], originalColor = indicator.color;\n                    indicator.points = firstLinePoints;\n                    indicator.nextPoints = secondLinePoints;\n                    indicator.color = indicator.userOptions.fillColor;\n                    indicator.options = merge(mainLinePoints, gappedExtend);\n                    indicator.graph = indicator.area;\n                    indicator.fillGraph = true;\n                    smaProto.drawGraph.call(indicator);\n                    indicator.area = indicator.graph;\n                    // Clean temporary properties:\n                    delete indicator.nextPoints;\n                    delete indicator.fillGraph;\n                    indicator.color = originalColor;\n                }\n                // Modify options and generate additional lines:\n                linesApiNames.forEach((lineName, i) => {\n                    if (secondaryLines[i]) {\n                        indicator.points = secondaryLines[i];\n                        if (mainLineOptions[lineName]) {\n                            indicator.options = merge(mainLineOptions[lineName].styles, gappedExtend);\n                        }\n                        else {\n                            error('Error: \"There is no ' + lineName +\n                                ' in DOCS options declared. Check if linesApiNames' +\n                                ' are consistent with your DOCS line names.\"');\n                        }\n                        indicator.graph = indicator['graph' + lineName];\n                        smaProto.drawGraph.call(indicator);\n                        // Now save lines:\n                        indicator['graph' + lineName] = indicator.graph;\n                    }\n                    else {\n                        error('Error: \"' + lineName + ' doesn\\'t have equivalent ' +\n                            'in pointArrayMap. To many elements in linesApiNames ' +\n                            'relative to pointArrayMap.\"');\n                    }\n                });\n                // Restore options and draw a main line:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.graph = mainLinePath;\n                smaProto.drawGraph.call(indicator);\n            }\n            /**\n             * Create the path based on points provided as argument.\n             * If indicator.nextPoints option is defined, create the areaFill.\n             *\n             * @private\n             * @param points Points on which the path should be created\n             */\n            function indicatorGetGraphPath(points) {\n                let areaPath, path = [], higherAreaPath = [];\n                points = points || this.points;\n                // Render Span\n                if (this.fillGraph && this.nextPoints) {\n                    areaPath = smaProto.getGraphPath.call(this, this.nextPoints);\n                    if (areaPath && areaPath.length) {\n                        areaPath[0][0] = 'L';\n                        path = smaProto.getGraphPath.call(this, points);\n                        higherAreaPath = areaPath.slice(0, path.length);\n                        // Reverse points, so that the areaFill will start from the end:\n                        for (let i = higherAreaPath.length - 1; i >= 0; i--) {\n                            path.push(higherAreaPath[i]);\n                        }\n                    }\n                }\n                else {\n                    path = smaProto.getGraphPath.apply(this, arguments);\n                }\n                return path;\n            }\n            /**\n             * @private\n             * @param {Highcharts.Point} point\n             *        Indicator point\n             * @return {Array<number>}\n             *         Returns point Y value for all lines\n             */\n            function indicatorToYData(point) {\n                const pointColl = [];\n                (this.pointArrayMap || []).forEach((propertyName) => {\n                    pointColl.push(point[propertyName]);\n                });\n                return pointColl;\n            }\n            /**\n             * Add lines plot pixel values.\n             *\n             * @private\n             */\n            function indicatorTranslate() {\n                const pointArrayMap = this.pointArrayMap;\n                let LinesNames = [], value;\n                LinesNames = getTranslatedLinesNames(this);\n                smaProto.translate.apply(this, arguments);\n                this.points.forEach((point) => {\n                    pointArrayMap.forEach((propertyName, i) => {\n                        value = point[propertyName];\n                        // If the modifier, like for example compare exists,\n                        // modified the original value by that method, #15867.\n                        if (this.dataModify) {\n                            value = this.dataModify.modifyValue(value);\n                        }\n                        if (value !== null) {\n                            point[LinesNames[i]] = this.yAxis.toPixels(value, true);\n                        }\n                    });\n                });\n            }\n        })(MultipleLinesComposition || (MultipleLinesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return MultipleLinesComposition;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Aroon/AroonIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils\n        // Index of element with extreme value from array (min or max)\n        /**\n         * @private\n         */\n        function getExtremeIndexInArray(arr, extreme) {\n            let extremeValue = arr[0], valueIndex = 0, i;\n            for (i = 1; i < arr.length; i++) {\n                if (extreme === 'max' && arr[i] >= extremeValue ||\n                    extreme === 'min' && arr[i] <= extremeValue) {\n                    extremeValue = arr[i];\n                    valueIndex = i;\n                }\n            }\n            return valueIndex;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Aroon series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.aroon\n         *\n         * @augments Highcharts.Series\n         */\n        class AroonIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1- Aroon Up, 2- Aroon Down\n                AR = [], xData = [], yData = [], low = 2, high = 1;\n                let aroonUp, aroonDown, xLow, xHigh, i, slicedY;\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = period - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - period + 1, i + 2);\n                    xLow = getExtremeIndexInArray(slicedY.map(function (elem) {\n                        return pick(elem[low], elem);\n                    }), 'min');\n                    xHigh = getExtremeIndexInArray(slicedY.map(function (elem) {\n                        return pick(elem[high], elem);\n                    }), 'max');\n                    aroonUp = (xHigh / period) * 100;\n                    aroonDown = (xLow / period) * 100;\n                    if (xVal[i + 1]) {\n                        AR.push([xVal[i + 1], aroonUp, aroonDown]);\n                        xData.push(xVal[i + 1]);\n                        yData.push([aroonUp, aroonDown]);\n                    }\n                }\n                return {\n                    values: AR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Aroon. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/aroon\n         *         Aroon\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/aroon\n         * @optionparent plotOptions.aroon\n         */\n        AroonIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of aroon series points.\n             *\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 25\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'\n            },\n            /**\n             * aroonDown line options.\n             */\n            aroonDown: {\n                /**\n                 * Styles for an aroonDown line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.aroon.color](#plotOptions.aroon.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(AroonIndicator.prototype, {\n            areaLinesNames: [],\n            linesApiNames: ['aroonDown'],\n            nameBase: 'Aroon',\n            pointArrayMap: ['y', 'aroonDown'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(AroonIndicator);\n        SeriesRegistry.registerSeriesType('aroon', AroonIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Aroon indicator. If the [type](#series.aroon.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.aroon\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/aroon\n         * @apioption series.aroon\n         */\n        ''; // to avoid removal of the above jsdoc\n\n        return AroonIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/AroonOscillator/AroonOscillatorIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { aroon: AroonIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Aroon Oscillator series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.aroonoscillator\n         *\n         * @augments Highcharts.Series\n         */\n        class AroonOscillatorIndicator extends AroonIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                // 0- date, 1- Aroon Oscillator\n                const ARO = [], xData = [], yData = [];\n                let aroonUp, aroonDown, oscillator, i;\n                const aroon = super.getValues.call(this, series, params);\n                for (i = 0; i < aroon.yData.length; i++) {\n                    aroonUp = aroon.yData[i][0];\n                    aroonDown = aroon.yData[i][1];\n                    oscillator = aroonUp - aroonDown;\n                    ARO.push([aroon.xData[i], oscillator]);\n                    xData.push(aroon.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: ARO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Aroon Oscillator. This series requires the `linkedTo` option to be set\n         * and should be loaded after the `stock/indicators/indicators.js` and\n         * `stock/indicators/aroon.js`.\n         *\n         * @sample {highstock} stock/indicators/aroon-oscillator\n         *         Aroon Oscillator\n         *\n         * @extends      plotOptions.aroon\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, aroonDown, colorAxis, compare, compareBase,\n         *               joinBy, keys, navigatorOptions, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *               showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/aroon\n         * @requires     stock/indicators/aroon-oscillator\n         * @optionparent plotOptions.aroonoscillator\n         */\n        AroonOscillatorIndicator.defaultOptions = merge(AroonIndicator.defaultOptions, {\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b>: {point.y}'\n            }\n        });\n        extend(AroonOscillatorIndicator.prototype, {\n            nameBase: 'Aroon Oscillator',\n            linesApiNames: [],\n            pointArrayMap: ['y'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(AroonIndicator);\n        SeriesRegistry.registerSeriesType('aroonoscillator', AroonOscillatorIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `Aroon Oscillator` series. If the [type](#series.aroonoscillator.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.aroonoscillator\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, aroonDown, colorAxis, compare, compareBase, dataParser,\n         *            dataURL, joinBy, keys, navigatorOptions, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *            showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/aroon\n         * @requires  stock/indicators/aroon-oscillator\n         * @apioption series.aroonoscillator\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return AroonOscillatorIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ATR/ATRIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulateAverage(points, xVal, yVal, i) {\n            const xValue = xVal[i], yValue = yVal[i];\n            points.push([xValue, yValue]);\n        }\n        /**\n         * @private\n         */\n        function getTR(currentPoint, prevPoint) {\n            const pointY = currentPoint, prevY = prevPoint, HL = pointY[1] - pointY[2], HCp = typeof prevY === 'undefined' ? 0 : Math.abs(pointY[1] - prevY[3]), LCp = typeof prevY === 'undefined' ? 0 : Math.abs(pointY[2] - prevY[3]), TR = Math.max(HL, HCp, LCp);\n            return TR;\n        }\n        /**\n         * @private\n         */\n        function populateAverage(points, xVal, yVal, i, period, prevATR) {\n            const x = xVal[i - 1], TR = getTR(yVal[i - 1], yVal[i - 2]), y = (((prevATR * (period - 1)) + TR) / period);\n            return [x, y];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ATR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.atr\n         *\n         * @augments Highcharts.Series\n         */\n        class ATRIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, xValue = xVal[0], yValue = yVal[0], points = [[xValue, yValue]], ATR = [], xData = [], yData = [];\n                let point, i, prevATR = 0, range = 1, TR = 0;\n                if ((xVal.length <= period) ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = 1; i <= yValLen; i++) {\n                    accumulateAverage(points, xVal, yVal, i);\n                    if (period < range) {\n                        point = populateAverage(points, xVal, yVal, i, period, prevATR);\n                        prevATR = point[1];\n                        ATR.push(point);\n                        xData.push(point[0]);\n                        yData.push(point[1]);\n                    }\n                    else if (period === range) {\n                        prevATR = TR / (i - 1);\n                        ATR.push([xVal[i - 1], prevATR]);\n                        xData.push(xVal[i - 1]);\n                        yData.push(prevATR);\n                        range++;\n                    }\n                    else {\n                        TR += getTR(yVal[i - 1], yVal[i - 2]);\n                        range++;\n                    }\n                }\n                return {\n                    values: ATR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Average true range indicator (ATR). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/atr\n         *         ATR indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/atr\n         * @optionparent plotOptions.atr\n         */\n        ATRIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            }\n        });\n        SeriesRegistry.registerSeriesType('atr', ATRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `ATR` series. If the [type](#series.atr.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.atr\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/atr\n         * @apioption series.atr\n         */\n        ''; // to include the above in the js output\n\n        return ATRIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/BB/BBIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /**\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function getStandardDeviation(arr, index, isOHLC, mean) {\n            const arrLen = arr.length;\n            let i = 0, std = 0, value, variance = 0;\n            for (; i < arrLen; i++) {\n                value = (isOHLC ? arr[i][index] : arr[i]) - mean;\n                variance += value * value;\n            }\n            variance = variance / (arrLen - 1);\n            std = Math.sqrt(variance);\n            return std;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Bollinger Bands series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.bb\n         *\n         * @augments Highcharts.Series\n         */\n        class BBIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                SeriesRegistry.seriesTypes.sma.prototype.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    topLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    bottomLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const period = params.period, standardDeviation = params.standardDeviation, xData = [], yData = [], xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-middle line, 2-top line, 3-bottom line\n                BB = [];\n                // middle line, top line and bottom line\n                let ML, TL, BL, date, slicedX, slicedY, stdDev, point, i;\n                if (xVal.length < period) {\n                    return;\n                }\n                const isOHLC = isArray(yVal[0]);\n                for (i = period; i <= yValLen; i++) {\n                    slicedX = xVal.slice(i - period, i);\n                    slicedY = yVal.slice(i - period, i);\n                    point = SeriesRegistry.seriesTypes.sma.prototype.getValues.call(this, {\n                        xData: slicedX,\n                        yData: slicedY\n                    }, params);\n                    date = point.xData[0];\n                    ML = point.yData[0];\n                    stdDev = getStandardDeviation(slicedY, params.index, isOHLC, ML);\n                    TL = ML + standardDeviation * stdDev;\n                    BL = ML - standardDeviation * stdDev;\n                    BB.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: BB,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Bollinger bands (BB). This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/bollinger-bands\n         *         Bollinger bands\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/bollinger-bands\n         * @optionparent plotOptions.bb\n         */\n        BBIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Bollinger Bands Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type      {Highcharts.ColorType}\n             * @since     9.3.2\n             * @apioption plotOptions.bb.fillColor\n             */\n            /**\n             * Parameters used in calculation of the regression points.\n             */\n            params: {\n                period: 20,\n                /**\n                 * Standard deviation for top and bottom bands.\n                 */\n                standardDeviation: 2,\n                index: 3\n            },\n            /**\n             * Bottom line options.\n             */\n            bottomLine: {\n                /**\n                 * Styles for the bottom line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.bb.color](#plotOptions.bb.color).\n                     *\n                     * @type  {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * Top line options.\n             *\n             * @extends plotOptions.bb.bottomLine\n             */\n            topLine: {\n                /**\n                 * Styles for the top line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.bb.color](#plotOptions.bb.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'\n            },\n            marker: {\n                enabled: false\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(BBIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            nameComponents: ['period', 'standardDeviation'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(BBIndicator);\n        SeriesRegistry.registerSeriesType('bb', BBIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A bollinger bands indicator. If the [type](#series.bb.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.bb\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/bollinger-bands\n         * @apioption series.bb\n         */\n        ''; // to include the above in the js output\n\n        return BBIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/CCI/CCIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function sumArray(array) {\n            return array.reduce(function (prev, cur) {\n                return prev + cur;\n            }, 0);\n        }\n        /**\n         * @private\n         */\n        function meanDeviation(arr, sma) {\n            const len = arr.length;\n            let sum = 0, i;\n            for (i = 0; i < len; i++) {\n                sum += Math.abs(sma - (arr[i]));\n            }\n            return sum;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CCI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cci\n         *\n         * @augments Highcharts.Series\n         */\n        class CCIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, TP = [], CCI = [], xData = [], yData = [];\n                let CCIPoint, p, periodTP = [], len, range = 1, smaTP, TPtemp, meanDev, i;\n                // CCI requires close value\n                if (xVal.length <= period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // accumulate first N-points\n                while (range < period) {\n                    p = yVal[range - 1];\n                    TP.push((p[1] + p[2] + p[3]) / 3);\n                    range++;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    p = yVal[i - 1];\n                    TPtemp = (p[1] + p[2] + p[3]) / 3;\n                    len = TP.push(TPtemp);\n                    periodTP = TP.slice(len - period);\n                    smaTP = sumArray(periodTP) / period;\n                    meanDev = meanDeviation(periodTP, smaTP) / period;\n                    CCIPoint = ((TPtemp - smaTP) / (0.015 * meanDev));\n                    CCI.push([xVal[i - 1], CCIPoint]);\n                    xData.push(xVal[i - 1]);\n                    yData.push(CCIPoint);\n                }\n                return {\n                    values: CCI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Commodity Channel Index (CCI). This series requires `linkedTo` option to\n         * be set.\n         *\n         * @sample stock/indicators/cci\n         *         CCI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cci\n         * @optionparent plotOptions.cci\n         */\n        CCIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            }\n        });\n        SeriesRegistry.registerSeriesType('cci', CCIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CCI` series. If the [type](#series.cci.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cci\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cci\n         * @apioption series.cci\n         */\n        ''; // to include the above in the js output\n\n        return CCIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/CMF/CMFIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Author: Sebastian Domas\n         *\n         *  Chaikin Money Flow indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CMF series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cmf\n         *\n         * @augments Highcharts.Series\n         */\n        class CMFIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.nameBase = 'Chaikin Money Flow';\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Checks if the series and volumeSeries are accessible, number of\n             * points.x is longer than period, is series has OHLC data\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @return {boolean} True if series is valid and can be computed,\n             * otherwise false.\n             */\n            isValid() {\n                const chart = this.chart, options = this.options, series = this.linkedParent, volumeSeries = (this.volumeSeries ||\n                    (this.volumeSeries =\n                        chart.get(options.params.volumeSeriesID))), isSeriesOHLC = (series &&\n                    series.yData &&\n                    series.yData[0].length === 4);\n                /**\n                 * @private\n                 * @param {Highcharts.Series} serie to check length validity on.\n                 * @return {boolean|undefined} true if length is valid.\n                 */\n                function isLengthValid(serie) {\n                    return serie.xData &&\n                        serie.xData.length >= options.params.period;\n                }\n                return !!(series &&\n                    volumeSeries &&\n                    isLengthValid(series) &&\n                    isLengthValid(volumeSeries) && isSeriesOHLC);\n            }\n            /**\n             * Returns indicator's data.\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @param {Highcharts.Series} series to calculate values from\n             * @param {Highcharts.CMFIndicatorParamsOptions} params to pass\n             * @return {boolean|Highcharts.IndicatorNullableValuesObject} Returns false if the\n             * indicator is not valid, otherwise returns Values object.\n             */\n            getValues(series, params) {\n                if (!this.isValid()) {\n                    return;\n                }\n                return this.getMoneyFlow(series.xData, series.yData, this.volumeSeries.yData, params.period);\n            }\n            /**\n             * @private\n             *\n             * @param {Array<number>} xData\n             * x timestamp values\n             *\n             * @param {Array<number>} seriesYData\n             * yData of basic series\n             *\n             * @param {Array<number>} volumeSeriesYData\n             * yData of volume series\n             *\n             * @param {number} period\n             * indicator's param\n             *\n             * @return {Highcharts.IndicatorNullableValuesObject}\n             * object containing computed money flow data\n             */\n            getMoneyFlow(xData, seriesYData, volumeSeriesYData, period) {\n                const len = seriesYData.length, moneyFlowVolume = [], moneyFlowXData = [], moneyFlowYData = [], values = [];\n                let i, point, nullIndex = -1, sumVolume = 0, sumMoneyFlowVolume = 0;\n                /**\n                 * Calculates money flow volume, changes i, nullIndex vars from\n                 * upper scope!\n                 *\n                 * @private\n                 *\n                 * @param {Array<number>} ohlc\n                 * OHLC point\n                 *\n                 * @param {number} volume\n                 * Volume point's y value\n                 *\n                 * @return {number|null}\n                 * Volume * moneyFlowMultiplier\n                 */\n                function getMoneyFlowVolume(ohlc, volume) {\n                    const high = ohlc[1], low = ohlc[2], close = ohlc[3], isValid = volume !== null &&\n                        high !== null &&\n                        low !== null &&\n                        close !== null &&\n                        high !== low;\n                    /**\n                     * @private\n                     * @param {number} h\n                     * High value\n                     * @param {number} l\n                     * Low value\n                     * @param {number} c\n                     * Close value\n                     * @return {number}\n                     * Calculated multiplier for the point\n                     */\n                    function getMoneyFlowMultiplier(h, l, c) {\n                        return ((c - l) - (h - c)) / (h - l);\n                    }\n                    return isValid ?\n                        getMoneyFlowMultiplier(high, low, close) * volume :\n                        ((nullIndex = i), null);\n                }\n                if (period > 0 && period <= len) {\n                    for (i = 0; i < period; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                    }\n                    moneyFlowXData.push(xData[i - 1]);\n                    moneyFlowYData.push(i - nullIndex >= period && sumVolume !== 0 ?\n                        sumMoneyFlowVolume / sumVolume :\n                        null);\n                    values.push([moneyFlowXData[0], moneyFlowYData[0]]);\n                    for (; i < len; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume -= volumeSeriesYData[i - period];\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume -= moneyFlowVolume[i - period];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                        point = [\n                            xData[i],\n                            i - nullIndex >= period ?\n                                sumMoneyFlowVolume / sumVolume :\n                                null\n                        ];\n                        moneyFlowXData.push(point[0]);\n                        moneyFlowYData.push(point[1]);\n                        values.push([point[0], point[1]]);\n                    }\n                }\n                return {\n                    values: values,\n                    xData: moneyFlowXData,\n                    yData: moneyFlowYData\n                };\n            }\n        }\n        /**\n         * Chaikin Money Flow indicator (cmf).\n         *\n         * @sample stock/indicators/cmf/\n         *         Chaikin Money Flow indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @excluding    animationLimit\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cmf\n         * @optionparent plotOptions.cmf\n         */\n        CMFIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indicator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        SeriesRegistry.registerSeriesType('cmf', CMFIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CMF` series. If the [type](#series.cmf.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cmf\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cmf\n         * @apioption series.cmf\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return CMFIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DMI/DMIIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *  (c) 2010-2024 Rafal Sebestjanski\n         *\n         *  Directional Movement Index (DMI) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Directional Movement Index (DMI) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dmi\n         *\n         * @augments Highcharts.Series\n         */\n        class DMIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            calculateDM(yVal, i, isPositiveDM) {\n                const currentHigh = yVal[i][1], currentLow = yVal[i][2], previousHigh = yVal[i - 1][1], previousLow = yVal[i - 1][2];\n                let DM;\n                if (currentHigh - previousHigh > previousLow - currentLow) {\n                    // for +DM\n                    DM = isPositiveDM ? Math.max(currentHigh - previousHigh, 0) : 0;\n                }\n                else {\n                    // for -DM\n                    DM = !isPositiveDM ? Math.max(previousLow - currentLow, 0) : 0;\n                }\n                return correctFloat(DM);\n            }\n            calculateDI(smoothedDM, tr) {\n                return smoothedDM / tr * 100;\n            }\n            calculateDX(plusDI, minusDI) {\n                return correctFloat(Math.abs(plusDI - minusDI) / Math.abs(plusDI + minusDI) * 100);\n            }\n            smoothValues(accumulatedValues, currentValue, period) {\n                return correctFloat(accumulatedValues - accumulatedValues / period + currentValue);\n            }\n            getTR(currentPoint, prevPoint) {\n                return correctFloat(Math.max(\n                // currentHigh - currentLow\n                currentPoint[1] - currentPoint[2], \n                // currentHigh - previousClose\n                !prevPoint ? 0 : Math.abs(currentPoint[1] - prevPoint[3]), \n                // currentLow - previousClose\n                !prevPoint ? 0 : Math.abs(currentPoint[2] - prevPoint[3])));\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, DMI = [], xData = [], yData = [];\n                if (\n                // Check period, if bigger than points length, skip\n                (xVal.length <= period) ||\n                    // Only ohlc data is valid\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                let prevSmoothedPlusDM = 0, prevSmoothedMinusDM = 0, prevSmoothedTR = 0, i;\n                for (i = 1; i < yValLen; i++) {\n                    let smoothedPlusDM, smoothedMinusDM, smoothedTR, plusDM, // +DM\n                    minusDM, // -DM\n                    TR, plusDI, // +DI\n                    minusDI, // -DI\n                    DX;\n                    if (i <= period) {\n                        plusDM = this.calculateDM(yVal, i, true);\n                        minusDM = this.calculateDM(yVal, i);\n                        TR = this.getTR(yVal[i], yVal[i - 1]);\n                        // Accumulate first period values to smooth them later\n                        prevSmoothedPlusDM += plusDM;\n                        prevSmoothedMinusDM += minusDM;\n                        prevSmoothedTR += TR;\n                        // Get all values for the first point\n                        if (i === period) {\n                            plusDI = this.calculateDI(prevSmoothedPlusDM, prevSmoothedTR);\n                            minusDI = this.calculateDI(prevSmoothedMinusDM, prevSmoothedTR);\n                            DX = this.calculateDX(prevSmoothedPlusDM, prevSmoothedMinusDM);\n                            DMI.push([xVal[i], DX, plusDI, minusDI]);\n                            xData.push(xVal[i]);\n                            yData.push([DX, plusDI, minusDI]);\n                        }\n                    }\n                    else {\n                        // Calculate current values\n                        plusDM = this.calculateDM(yVal, i, true);\n                        minusDM = this.calculateDM(yVal, i);\n                        TR = this.getTR(yVal[i], yVal[i - 1]);\n                        // Smooth +DM, -DM and TR\n                        smoothedPlusDM = this.smoothValues(prevSmoothedPlusDM, plusDM, period);\n                        smoothedMinusDM = this.smoothValues(prevSmoothedMinusDM, minusDM, period);\n                        smoothedTR = this.smoothValues(prevSmoothedTR, TR, period);\n                        // Save current smoothed values for the next step\n                        prevSmoothedPlusDM = smoothedPlusDM;\n                        prevSmoothedMinusDM = smoothedMinusDM;\n                        prevSmoothedTR = smoothedTR;\n                        // Get all next points (except the first one calculated above)\n                        plusDI = this.calculateDI(prevSmoothedPlusDM, prevSmoothedTR);\n                        minusDI = this.calculateDI(prevSmoothedMinusDM, prevSmoothedTR);\n                        DX = this.calculateDX(prevSmoothedPlusDM, prevSmoothedMinusDM);\n                        DMI.push([xVal[i], DX, plusDI, minusDI]);\n                        xData.push(xVal[i]);\n                        yData.push([DX, plusDI, minusDI]);\n                    }\n                }\n                return {\n                    values: DMI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Directional Movement Index (DMI).\n         * This series requires the `linkedTo` option to be set and should\n         * be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/dmi\n         *         DMI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dmi\n         * @optionparent plotOptions.dmi\n         */\n        DMIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color: {point.color}\">' +\n                    '\\u25CF</span><b> {series.name}</b><br/>' +\n                    '<span style=\"color: {point.color}\">DX</span>: {point.y}<br/>' +\n                    '<span style=\"color: ' +\n                    '{point.series.options.plusDILine.styles.lineColor}\">' +\n                    '+DI</span>: {point.plusDI}<br/>' +\n                    '<span style=\"color: ' +\n                    '{point.series.options.minusDILine.styles.lineColor}\">' +\n                    '-DI</span>: {point.minusDI}<br/>'\n            },\n            /**\n             * +DI line options.\n             */\n            plusDILine: {\n                /**\n                 * Styles for the +DI line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: \"#06b535\" /* Palette.positiveColor */ // green-ish\n                }\n            },\n            /**\n             * -DI line options.\n             */\n            minusDILine: {\n                /**\n                 * Styles for the -DI line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: \"#f21313\" /* Palette.negativeColor */ // red-ish\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(DMIIndicator.prototype, {\n            areaLinesNames: [],\n            nameBase: 'DMI',\n            linesApiNames: ['plusDILine', 'minusDILine'],\n            pointArrayMap: ['y', 'plusDI', 'minusDI'],\n            parallelArrays: ['x', 'y', 'plusDI', 'minusDI'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(DMIIndicator);\n        SeriesRegistry.registerSeriesType('dmi', DMIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The Directional Movement Index (DMI) indicator series.\n         * If the [type](#series.dmi.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dmi\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dmi\n         * @apioption series.dmi\n         */\n        ''; // to include the above in the js output\n\n        return DMIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DPO/DPOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, correctFloat, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulatePoints(sum, yVal, i, index, subtract) {\n            const price = pick(yVal[i][index], yVal[i]);\n            if (subtract) {\n                return correctFloat(sum - price);\n            }\n            return correctFloat(sum + price);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The DPO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dpo\n         *\n         * @augments Highcharts.Series\n         */\n        class DPOIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, index = params.index, offset = Math.floor(period / 2 + 1), range = period + offset, xVal = series.xData || [], yVal = series.yData || [], yValLen = yVal.length, \n                // 0- date, 1- Detrended Price Oscillator\n                DPO = [], xData = [], yData = [];\n                let oscillator, periodIndex, rangeIndex, price, i, j, sum = 0;\n                if (xVal.length <= range) {\n                    return;\n                }\n                // Accumulate first N-points for SMA\n                for (i = 0; i < period - 1; i++) {\n                    sum = accumulatePoints(sum, yVal, i, index);\n                }\n                // Detrended Price Oscillator formula:\n                // DPO = Price - Simple moving average [from (n / 2 + 1) days ago]\n                for (j = 0; j <= yValLen - range; j++) {\n                    periodIndex = j + period - 1;\n                    rangeIndex = j + range - 1;\n                    // adding the last period point\n                    sum = accumulatePoints(sum, yVal, periodIndex, index);\n                    price = pick(yVal[rangeIndex][index], yVal[rangeIndex]);\n                    oscillator = price - sum / period;\n                    // subtracting the first period point\n                    sum = accumulatePoints(sum, yVal, j, index, true);\n                    DPO.push([xVal[rangeIndex], oscillator]);\n                    xData.push(xVal[rangeIndex]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: DPO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Detrended Price Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/dpo\n         *         Detrended Price Oscillator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dpo\n         * @optionparent plotOptions.dpo\n         */\n        DPOIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of Detrended Price Oscillator series\n             * points.\n             */\n            params: {\n                index: 0,\n                /**\n                 * Period for Detrended Price Oscillator\n                 */\n                period: 21\n            }\n        });\n        extend(DPOIndicator.prototype, {\n            nameBase: 'DPO'\n        });\n        SeriesRegistry.registerSeriesType('dpo', DPOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Detrended Price Oscillator. If the [type](#series.dpo.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dpo\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dpo\n         * @apioption series.dpo\n         */\n        ''; // to include the above in the js output'\n\n        return DPOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Chaikin/ChaikinIndicator.js', [_modules['Stock/Indicators/AD/ADIndicator.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AD, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge, error } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Chaikin series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.chaikin\n         *\n         * @augments Highcharts.Series\n         */\n        class ChaikinIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, period = params.period, \n                // 0- date, 1- Chaikin Oscillator\n                CHA = [], xData = [], yData = [];\n                let oscillator, i;\n                // Check if periods are correct\n                if (periods.length !== 2 || periods[1] <= periods[0]) {\n                    error('Error: \"Chaikin requires two periods. Notice, first ' +\n                        'period should be lower than the second one.\"');\n                    return;\n                }\n                // Accumulation Distribution Line data\n                const ADL = AD.prototype.getValues.call(this, series, {\n                    volumeSeriesID: params.volumeSeriesID,\n                    period: period\n                });\n                // Check if adl is calculated properly, if not skip\n                if (!ADL) {\n                    return;\n                }\n                // Shorter Period EMA\n                const SPE = super.getValues.call(this, ADL, {\n                    period: periods[0]\n                });\n                // Longer Period EMA\n                const LPE = super.getValues.call(this, ADL, {\n                    period: periods[1]\n                });\n                // Check if ema is calculated properly, if not skip\n                if (!SPE || !LPE) {\n                    return;\n                }\n                const periodsOffset = periods[1] - periods[0];\n                for (i = 0; i < LPE.yData.length; i++) {\n                    oscillator = correctFloat(SPE.yData[i + periodsOffset] -\n                        LPE.yData[i]);\n                    CHA.push([LPE.xData[i], oscillator]);\n                    xData.push(LPE.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: CHA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Chaikin Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/chaikin\n         *         Chaikin Oscillator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/chaikin\n         * @optionparent plotOptions.chaikin\n         */\n        ChaikinIndicator.defaultOptions = merge(EMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of Chaikin Oscillator\n             * series points.\n             *\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume',\n                /**\n                 * Parameter used indirectly for calculating the `AD` indicator.\n                 * Decides about the number of data points that are taken\n                 * into account for the indicator calculations.\n                 */\n                period: 9,\n                /**\n                 * Periods for Chaikin Oscillator calculations.\n                 *\n                 * @type    {Array<number>}\n                 * @default [3, 10]\n                 */\n                periods: [3, 10]\n            }\n        });\n        extend(ChaikinIndicator.prototype, {\n            nameBase: 'Chaikin Osc',\n            nameComponents: ['periods']\n        });\n        SeriesRegistry.registerSeriesType('chaikin', ChaikinIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Chaikin Oscillator` series. If the [type](#series.chaikin.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.chaikin\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, stacking, showInNavigator\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/chaikin\n         * @apioption series.chaikin\n         */\n        ''; // to include the above in the js output\n\n        return ChaikinIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/CMO/CMOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isNumber, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CMO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cmo\n         *\n         * @augments Highcharts.Series\n         */\n        class CMOIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, CMO = [], xData = [], yData = [];\n                let i, index = params.index, values;\n                if (xVal.length < period) {\n                    return;\n                }\n                if (isNumber(yVal[0])) {\n                    values = yVal;\n                }\n                else {\n                    // In case of the situation, where the series type has data length\n                    // shorter then 4 (HLC, range), this ensures that we are not trying\n                    // to reach the index out of bounds\n                    index = Math.min(index, yVal[0].length - 1);\n                    values = yVal.map((value) => value[index]);\n                }\n                let firstAddedSum = 0, sumOfHigherValues = 0, sumOfLowerValues = 0, y;\n                // Calculate first point, check if the first value\n                // was added to sum of higher/lower values, and what was the value.\n                for (let j = period; j > 0; j--) {\n                    if (values[j] > values[j - 1]) {\n                        sumOfHigherValues += values[j] - values[j - 1];\n                    }\n                    else if (values[j] < values[j - 1]) {\n                        sumOfLowerValues += values[j - 1] - values[j];\n                    }\n                }\n                // You might divide by 0 if all values are equal,\n                // so return 0 in this case.\n                y =\n                    sumOfHigherValues + sumOfLowerValues > 0 ?\n                        (100 * (sumOfHigherValues - sumOfLowerValues)) /\n                            (sumOfHigherValues + sumOfLowerValues) :\n                        0;\n                xData.push(xVal[period]);\n                yData.push(y);\n                CMO.push([xVal[period], y]);\n                for (i = period + 1; i < yValLen; i++) {\n                    firstAddedSum = Math.abs(values[i - period - 1] - values[i - period]);\n                    if (values[i] > values[i - 1]) {\n                        sumOfHigherValues += values[i] - values[i - 1];\n                    }\n                    else if (values[i] < values[i - 1]) {\n                        sumOfLowerValues += values[i - 1] - values[i];\n                    }\n                    // Check, to which sum was the first value added to,\n                    // and subtract this value from given sum.\n                    if (values[i - period] > values[i - period - 1]) {\n                        sumOfHigherValues -= firstAddedSum;\n                    }\n                    else {\n                        sumOfLowerValues -= firstAddedSum;\n                    }\n                    // Same as above.\n                    y =\n                        sumOfHigherValues + sumOfLowerValues > 0 ?\n                            (100 * (sumOfHigherValues - sumOfLowerValues)) /\n                                (sumOfHigherValues + sumOfLowerValues) :\n                            0;\n                    xData.push(xVal[i]);\n                    yData.push(y);\n                    CMO.push([xVal[i], y]);\n                }\n                return {\n                    values: CMO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Chande Momentum Oscilator (CMO) technical indicator. This series\n         * requires the `linkedTo` option to be set and should be loaded after\n         * the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/cmo\n         *         CMO indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cmo\n         * @optionparent plotOptions.cmo\n         */\n        CMOIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                period: 20,\n                index: 3\n            }\n        });\n        SeriesRegistry.registerSeriesType('cmo', CMOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CMO` series. If the [type](#series.cmo.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cmo\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cmo\n         * @apioption series.cmo\n         */\n        (''); // to include the above in the js output\n\n        return CMOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DEMA/DEMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The DEMA series Type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dema\n         *\n         * @augments Highcharts.Series\n         */\n        class DEMAIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEMA(yVal, prevEMA, SMA, index, i, xVal) {\n                return super.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, this.EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getValues(series, params) {\n                const period = params.period, EMAvalues = [], doubledPeriod = 2 * period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, DEMA = [], xDataDema = [], yDataDema = [];\n                let accumulatePeriodPoints = 0, EMA = 0, \n                // EMA(EMA)\n                EMAlevel2, \n                // EMA of previous point\n                prevEMA, prevEMAlevel2, \n                // EMA values array\n                i, index = -1, DEMAPoint, SMA = 0;\n                this.EMApercent = (2 / (period + 1));\n                // Check period, if bigger than EMA points length, skip\n                if (yValLen < 2 * period - 1) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                accumulatePeriodPoints =\n                    super.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                SMA = accumulatePeriodPoints / period;\n                accumulatePeriodPoints = 0;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 2; i++) {\n                    if (i < yValLen + 1) {\n                        EMA = this.getEMA(yVal, prevEMA, SMA, index, i)[1];\n                        EMAvalues.push(EMA);\n                    }\n                    prevEMA = EMA;\n                    // Summing first period points for EMA(EMA)\n                    if (i < doubledPeriod) {\n                        accumulatePeriodPoints += EMA;\n                    }\n                    else {\n                        // Calculate DEMA\n                        // First DEMA point\n                        if (i === doubledPeriod) {\n                            SMA = accumulatePeriodPoints / period;\n                        }\n                        EMA = EMAvalues[i - period - 1];\n                        EMAlevel2 = this.getEMA([EMA], prevEMAlevel2, SMA)[1];\n                        DEMAPoint = [\n                            xVal[i - 2],\n                            correctFloat(2 * EMA - EMAlevel2)\n                        ];\n                        DEMA.push(DEMAPoint);\n                        xDataDema.push(DEMAPoint[0]);\n                        yDataDema.push(DEMAPoint[1]);\n                        prevEMAlevel2 = EMAlevel2;\n                    }\n                }\n                return {\n                    values: DEMA,\n                    xData: xDataDema,\n                    yData: yDataDema\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Double exponential moving average (DEMA) indicator. This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/dema\n         *         DEMA indicator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dema\n         * @optionparent plotOptions.dema\n         */\n        DEMAIndicator.defaultOptions = merge(EMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('dema', DEMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `DEMA` series. If the [type](#series.dema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dema\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dema\n         * @apioption series.dema\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return DEMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/TEMA/TEMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The TEMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.tema\n         *\n         * @augments Highcharts.Series\n         */\n        class TEMAIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEMA(yVal, prevEMA, SMA, index, i, xVal) {\n                return super.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, this.EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getTemaPoint(xVal, tripledPeriod, EMAlevels, i) {\n                const TEMAPoint = [\n                    xVal[i - 3],\n                    correctFloat(3 * EMAlevels.level1 -\n                        3 * EMAlevels.level2 + EMAlevels.level3)\n                ];\n                return TEMAPoint;\n            }\n            getValues(series, params) {\n                const period = params.period, doubledPeriod = 2 * period, tripledPeriod = 3 * period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, tema = [], xDataTema = [], yDataTema = [], \n                // EMA values array\n                emaValues = [], emaLevel2Values = [], \n                // This object contains all EMA EMAlevels calculated like below\n                // EMA = level1\n                // EMA(EMA) = level2,\n                // EMA(EMA(EMA)) = level3,\n                emaLevels = {};\n                let index = -1, accumulatePeriodPoints = 0, sma = 0, \n                // EMA of previous point\n                prevEMA, prevEMAlevel2, i, temaPoint;\n                this.EMApercent = (2 / (period + 1));\n                // Check period, if bigger than EMA points length, skip\n                if (yValLen < 3 * period - 2) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                accumulatePeriodPoints = super.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                sma = accumulatePeriodPoints / period;\n                accumulatePeriodPoints = 0;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 3; i++) {\n                    if (i < yValLen + 1) {\n                        emaLevels.level1 = this.getEMA(yVal, prevEMA, sma, index, i)[1];\n                        emaValues.push(emaLevels.level1);\n                    }\n                    prevEMA = emaLevels.level1;\n                    // Summing first period points for ema(ema)\n                    if (i < doubledPeriod) {\n                        accumulatePeriodPoints += emaLevels.level1;\n                    }\n                    else {\n                        // Calculate dema\n                        // First dema point\n                        if (i === doubledPeriod) {\n                            sma = accumulatePeriodPoints / period;\n                            accumulatePeriodPoints = 0;\n                        }\n                        emaLevels.level1 = emaValues[i - period - 1];\n                        emaLevels.level2 = this.getEMA([emaLevels.level1], prevEMAlevel2, sma)[1];\n                        emaLevel2Values.push(emaLevels.level2);\n                        prevEMAlevel2 = emaLevels.level2;\n                        // Summing first period points for ema(ema(ema))\n                        if (i < tripledPeriod) {\n                            accumulatePeriodPoints += emaLevels.level2;\n                        }\n                        else {\n                            // Calculate tema\n                            // First tema point\n                            if (i === tripledPeriod) {\n                                sma = accumulatePeriodPoints / period;\n                            }\n                            if (i === yValLen + 1) {\n                                // Calculate the last ema and emaEMA points\n                                emaLevels.level1 = emaValues[i - period - 1];\n                                emaLevels.level2 = this.getEMA([emaLevels.level1], prevEMAlevel2, sma)[1];\n                                emaLevel2Values.push(emaLevels.level2);\n                            }\n                            emaLevels.level1 = emaValues[i - period - 2];\n                            emaLevels.level2 = emaLevel2Values[i - 2 * period - 1];\n                            emaLevels.level3 = this.getEMA([emaLevels.level2], emaLevels.prevLevel3, sma)[1];\n                            temaPoint = this.getTemaPoint(xVal, tripledPeriod, emaLevels, i);\n                            // Make sure that point exists (for TRIX oscillator)\n                            if (temaPoint) {\n                                tema.push(temaPoint);\n                                xDataTema.push(temaPoint[0]);\n                                yDataTema.push(temaPoint[1]);\n                            }\n                            emaLevels.prevLevel3 = emaLevels.level3;\n                        }\n                    }\n                }\n                return {\n                    values: tema,\n                    xData: xDataTema,\n                    yData: yDataTema\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Triple exponential moving average (TEMA) indicator. This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/tema\n         *         TEMA indicator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/tema\n         * @optionparent plotOptions.tema\n         */\n        TEMAIndicator.defaultOptions = merge(EMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('tema', TEMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TEMA` series. If the [type](#series.tema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.tema\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/tema\n         * @apioption series.tema\n         */\n        ''; // to include the above in the js output\n\n        return TEMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/TRIX/TRIXIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { tema: TEMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The TRIX series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.trix\n         *\n         * @augments Highcharts.Series\n         */\n        class TRIXIndicator extends TEMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            // TRIX is calculated using TEMA so we just extend getTemaPoint method.\n            getTemaPoint(xVal, tripledPeriod, EMAlevels, i) {\n                if (i > tripledPeriod) {\n                    return [\n                        xVal[i - 3],\n                        EMAlevels.prevLevel3 !== 0 ?\n                            correctFloat(EMAlevels.level3 - EMAlevels.prevLevel3) /\n                                EMAlevels.prevLevel3 * 100 : null\n                    ];\n                }\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Triple exponential average (TRIX) oscillator. This series requires\n         * `linkedTo` option to be set.\n         *\n         * @sample {highstock} stock/indicators/trix\n         * TRIX indicator\n         *\n         * @extends      plotOptions.tema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/tema\n         * @requires     stock/indicators/trix\n         * @optionparent plotOptions.trix\n         */\n        TRIXIndicator.defaultOptions = merge(TEMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('trix', TRIXIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TRIX` series. If the [type](#series.trix.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.trix\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/tema\n         * @apioption series.trix\n         */\n        ''; // to include the above in the js output\n\n        return TRIXIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/APO/APOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, error } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The APO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.apo\n         *\n         * @augments Highcharts.Series\n         */\n        class APOIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, index = params.index, \n                // 0- date, 1- Absolute price oscillator\n                APO = [], xData = [], yData = [];\n                let oscillator, i;\n                // Check if periods are correct\n                if (periods.length !== 2 || periods[1] <= periods[0]) {\n                    error('Error: \"APO requires two periods. Notice, first period ' +\n                        'should be lower than the second one.\"');\n                    return;\n                }\n                // Shorter Period EMA\n                const SPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[0]\n                });\n                // Longer Period EMA\n                const LPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[1]\n                });\n                // Check if ema is calculated properly, if not skip\n                if (!SPE || !LPE) {\n                    return;\n                }\n                const periodsOffset = periods[1] - periods[0];\n                for (i = 0; i < LPE.yData.length; i++) {\n                    oscillator = (SPE.yData[i + periodsOffset] -\n                        LPE.yData[i]);\n                    APO.push([LPE.xData[i], oscillator]);\n                    xData.push(LPE.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: APO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Absolute Price Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/apo\n         *         Absolute Price Oscillator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/apo\n         * @optionparent plotOptions.apo\n         */\n        APOIndicator.defaultOptions = merge(EMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of Absolute Price Oscillator\n             * series points.\n             *\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * Periods for Absolute Price Oscillator calculations.\n                 *\n                 * @type    {Array<number>}\n                 * @default [10, 20]\n                 * @since   7.0.0\n                 */\n                periods: [10, 20]\n            }\n        });\n        extend(APOIndicator.prototype, {\n            nameBase: 'APO',\n            nameComponents: ['periods']\n        });\n        SeriesRegistry.registerSeriesType('apo', APOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `Absolute Price Oscillator` series. If the [type](#series.apo.type) option\n         * is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.apo\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/apo\n         * @apioption series.apo\n         */\n        ''; // to include the above in the js output\n\n        return APOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/IKH/IKHIndicator.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, Color, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { parse: color } = Color;\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { defined, extend, isArray, isNumber, getClosestDistance, merge, objectEach } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function maxHigh(arr) {\n            return arr.reduce(function (max, res) {\n                return Math.max(max, res[1]);\n            }, -Infinity);\n        }\n        /**\n         * @private\n         */\n        function minLow(arr) {\n            return arr.reduce(function (min, res) {\n                return Math.min(min, res[2]);\n            }, Infinity);\n        }\n        /**\n         * @private\n         */\n        function highlowLevel(arr) {\n            return {\n                high: maxHigh(arr),\n                low: minLow(arr)\n            };\n        }\n        /**\n         * Check two lines intersection (line a1-a2 and b1-b2)\n         * Source: https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\n         * @private\n         */\n        function checkLineIntersection(a1, a2, b1, b2) {\n            if (a1 && a2 && b1 && b2) {\n                const saX = a2.plotX - a1.plotX, // Auxiliary section a2-a1 X\n                saY = a2.plotY - a1.plotY, // Auxiliary section a2-a1 Y\n                sbX = b2.plotX - b1.plotX, // Auxiliary section b2-b1 X\n                sbY = b2.plotY - b1.plotY, // Auxiliary section b2-b1 Y\n                sabX = a1.plotX - b1.plotX, // Auxiliary section a1-b1 X\n                sabY = a1.plotY - b1.plotY, // Auxiliary section a1-b1 Y\n                // First degree Bézier parameters\n                u = (-saY * sabX + saX * sabY) / (-sbX * saY + saX * sbY), t = (sbX * sabY - sbY * sabX) / (-sbX * saY + saX * sbY);\n                if (u >= 0 && u <= 1 && t >= 0 && t <= 1) {\n                    return {\n                        plotX: a1.plotX + t * saX,\n                        plotY: a1.plotY + t * saY\n                    };\n                }\n            }\n        }\n        /**\n         * Parameter opt (indicator options object) include indicator, points,\n         * nextPoints, color, options, gappedExtend and graph properties\n         * @private\n         */\n        function drawSenkouSpan(opt) {\n            const indicator = opt.indicator;\n            indicator.points = opt.points;\n            indicator.nextPoints = opt.nextPoints;\n            indicator.color = opt.color;\n            indicator.options = merge(opt.options.senkouSpan.styles, opt.gap);\n            indicator.graph = opt.graph;\n            indicator.fillGraph = true;\n            SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n        }\n        /**\n         * Data integrity in Ichimoku is different than default 'averages':\n         * Point: [undefined, value, value, ...] is correct\n         * Point: [undefined, undefined, undefined, ...] is incorrect\n         * @private\n         */\n        function ichimokuAverages() {\n            const ret = [];\n            let isEmptyRange;\n            [].forEach.call(arguments, function (arr, i) {\n                ret.push(ApproximationRegistry.average(arr));\n                isEmptyRange = !isEmptyRange && typeof ret[i] === 'undefined';\n            });\n            // Return undefined when first elem. is undefined and let\n            // sum method handle null (#7377)\n            return isEmptyRange ? void 0 : ret;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The IKH series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ikh\n         *\n         * @augments Highcharts.Series\n         */\n        class IKHIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = [];\n                this.options = {};\n                this.points = [];\n                this.graphCollection = [];\n            }\n            /* *\n             *\n             * Functions\n             *\n             * */\n            init() {\n                super.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    tenkanLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    kijunLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    chikouLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    senkouSpanA: {\n                        styles: {\n                            lineColor: this.color,\n                            fill: color(this.color).setOpacity(0.5).get()\n                        }\n                    },\n                    senkouSpanB: {\n                        styles: {\n                            lineColor: this.color,\n                            fill: color(this.color).setOpacity(0.5).get()\n                        }\n                    },\n                    senkouSpan: {\n                        styles: {\n                            fill: color(this.color).setOpacity(0.2).get()\n                        }\n                    }\n                }, this.options);\n            }\n            toYData(point) {\n                return [\n                    point.tenkanSen,\n                    point.kijunSen,\n                    point.chikouSpan,\n                    point.senkouSpanA,\n                    point.senkouSpanB\n                ];\n            }\n            translate() {\n                const indicator = this;\n                SeriesRegistry.seriesTypes.sma.prototype.translate.apply(indicator);\n                for (const point of indicator.points) {\n                    for (const key of indicator.pointArrayMap) {\n                        const pointValue = point[key];\n                        if (isNumber(pointValue)) {\n                            point['plot' + key] = indicator.yAxis.toPixels(pointValue, true);\n                            // Add extra parameters for support tooltip in moved\n                            // lines\n                            point.plotY = point['plot' + key];\n                            point.tooltipPos = [\n                                point.plotX,\n                                point['plot' + key]\n                            ];\n                            point.isNull = false;\n                        }\n                    }\n                }\n            }\n            drawGraph() {\n                const indicator = this, mainLinePoints = indicator.points, mainLineOptions = indicator.options, mainLinePath = indicator.graph, mainColor = indicator.color, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, pointArrayMapLength = indicator.pointArrayMap.length, allIchimokuPoints = [\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    []\n                ], ikhMap = {\n                    tenkanLine: allIchimokuPoints[0],\n                    kijunLine: allIchimokuPoints[1],\n                    chikouLine: allIchimokuPoints[2],\n                    senkouSpanA: allIchimokuPoints[3],\n                    senkouSpanB: allIchimokuPoints[4],\n                    senkouSpan: allIchimokuPoints[5]\n                }, intersectIndexColl = [], senkouSpanOptions = indicator\n                    .options.senkouSpan, color = senkouSpanOptions.color ||\n                    senkouSpanOptions.styles.fill, negativeColor = senkouSpanOptions.negativeColor, \n                // Points to create color and negativeColor senkouSpan\n                points = [\n                    [],\n                    [] // Points negative color\n                ], \n                // For span, we need an access to the next points, used in\n                // getGraphPath()\n                nextPoints = [\n                    [],\n                    [] // NextPoints negative color\n                ];\n                let pointsLength = mainLinePoints.length, lineIndex = 0, position, point, i, startIntersect, endIntersect, sectionPoints, sectionNextPoints, pointsPlotYSum, nextPointsPlotYSum, senkouSpanTempColor, concatArrIndex, j, k;\n                indicator.ikhMap = ikhMap;\n                // Generate points for all lines and spans lines:\n                while (pointsLength--) {\n                    point = mainLinePoints[pointsLength];\n                    for (i = 0; i < pointArrayMapLength; i++) {\n                        position = indicator.pointArrayMap[i];\n                        if (defined(point[position])) {\n                            allIchimokuPoints[i].push({\n                                plotX: point.plotX,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            });\n                        }\n                    }\n                    if (negativeColor && pointsLength !== mainLinePoints.length - 1) {\n                        // Check if lines intersect\n                        const index = ikhMap.senkouSpanB.length - 1, intersect = checkLineIntersection(ikhMap.senkouSpanA[index - 1], ikhMap.senkouSpanA[index], ikhMap.senkouSpanB[index - 1], ikhMap.senkouSpanB[index]);\n                        if (intersect) {\n                            const intersectPointObj = {\n                                plotX: intersect.plotX,\n                                plotY: intersect.plotY,\n                                isNull: false,\n                                intersectPoint: true\n                            };\n                            // Add intersect point to ichimoku points collection\n                            // Create senkouSpan sections\n                            ikhMap.senkouSpanA.splice(index, 0, intersectPointObj);\n                            ikhMap.senkouSpanB.splice(index, 0, intersectPointObj);\n                            intersectIndexColl.push(index);\n                        }\n                    }\n                }\n                // Modify options and generate lines:\n                objectEach(ikhMap, (values, lineName) => {\n                    if (mainLineOptions[lineName] &&\n                        lineName !== 'senkouSpan') {\n                        // First line is rendered by default option\n                        indicator.points = allIchimokuPoints[lineIndex];\n                        indicator.options = merge(mainLineOptions[lineName].styles, gappedExtend);\n                        indicator.graph = indicator['graph' + lineName];\n                        indicator.fillGraph = false;\n                        indicator.color = mainColor;\n                        SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n                        // Now save line\n                        indicator['graph' + lineName] = indicator.graph;\n                    }\n                    lineIndex++;\n                });\n                // Generate senkouSpan area:\n                // If graphCollection exist then remove svg\n                // element and indicator property\n                if (indicator.graphCollection) {\n                    for (const graphName of indicator.graphCollection) {\n                        indicator[graphName].destroy();\n                        delete indicator[graphName];\n                    }\n                }\n                // Clean graphCollection or initialize it\n                indicator.graphCollection = [];\n                // When user set negativeColor property\n                if (negativeColor && ikhMap.senkouSpanA[0] && ikhMap.senkouSpanB[0]) {\n                    // Add first and last point to senkouSpan area sections\n                    intersectIndexColl.unshift(0);\n                    intersectIndexColl.push(ikhMap.senkouSpanA.length - 1);\n                    // Populate points and nextPoints arrays\n                    for (j = 0; j < intersectIndexColl.length - 1; j++) {\n                        startIntersect = intersectIndexColl[j];\n                        endIntersect = intersectIndexColl[j + 1];\n                        sectionPoints = ikhMap.senkouSpanB.slice(startIntersect, endIntersect + 1);\n                        sectionNextPoints = ikhMap.senkouSpanA.slice(startIntersect, endIntersect + 1);\n                        // Add points to color or negativeColor arrays\n                        // Check the middle point (if exist)\n                        if (Math.floor(sectionPoints.length / 2) >= 1) {\n                            const x = Math.floor(sectionPoints.length / 2);\n                            // When middle points has equal values\n                            // Compare all points plotY value sum\n                            if (sectionPoints[x].plotY === sectionNextPoints[x].plotY) {\n                                pointsPlotYSum = 0;\n                                nextPointsPlotYSum = 0;\n                                for (k = 0; k < sectionPoints.length; k++) {\n                                    pointsPlotYSum += sectionPoints[k].plotY;\n                                    nextPointsPlotYSum += sectionNextPoints[k].plotY;\n                                }\n                                concatArrIndex =\n                                    pointsPlotYSum > nextPointsPlotYSum ? 0 : 1;\n                                points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                                nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                            }\n                            else {\n                                // Compare middle point of the section\n                                concatArrIndex = (sectionPoints[x].plotY > sectionNextPoints[x].plotY) ? 0 : 1;\n                                points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                                nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                            }\n                        }\n                        else {\n                            // Compare first point of the section\n                            concatArrIndex = (sectionPoints[0].plotY > sectionNextPoints[0].plotY) ? 0 : 1;\n                            points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                            nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                        }\n                    }\n                    // Render color and negativeColor paths\n                    ['graphsenkouSpanColor', 'graphsenkouSpanNegativeColor'].forEach(function (areaName, i) {\n                        if (points[i].length && nextPoints[i].length) {\n                            senkouSpanTempColor = i === 0 ? color : negativeColor;\n                            drawSenkouSpan({\n                                indicator: indicator,\n                                points: points[i],\n                                nextPoints: nextPoints[i],\n                                color: senkouSpanTempColor,\n                                options: mainLineOptions,\n                                gap: gappedExtend,\n                                graph: indicator[areaName]\n                            });\n                            // Now save line\n                            indicator[areaName] = indicator.graph;\n                            indicator.graphCollection.push(areaName);\n                        }\n                    });\n                }\n                else {\n                    // When user set only senkouSpan style.fill property\n                    drawSenkouSpan({\n                        indicator: indicator,\n                        points: ikhMap.senkouSpanB,\n                        nextPoints: ikhMap.senkouSpanA,\n                        color: color,\n                        options: mainLineOptions,\n                        gap: gappedExtend,\n                        graph: indicator.graphsenkouSpan\n                    });\n                    // Now save line\n                    indicator.graphsenkouSpan = indicator.graph;\n                }\n                // Clean temporary properties:\n                delete indicator.nextPoints;\n                delete indicator.fillGraph;\n                // Restore options and draw the Tenkan line:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.graph = mainLinePath;\n                indicator.color = mainColor;\n            }\n            getGraphPath(points) {\n                const indicator = this;\n                let path = [], spanA, spanAarr = [];\n                points = points || this.points;\n                // Render Senkou Span\n                if (indicator.fillGraph && indicator.nextPoints) {\n                    spanA = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath.call(indicator, \n                    // Reverse points, so Senkou Span A will start from the end:\n                    indicator.nextPoints);\n                    if (spanA && spanA.length) {\n                        spanA[0][0] = 'L';\n                        path = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath\n                            .call(indicator, points);\n                        spanAarr = spanA.slice(0, path.length);\n                        for (let i = spanAarr.length - 1; i >= 0; i--) {\n                            path.push(spanAarr[i]);\n                        }\n                    }\n                }\n                else {\n                    path = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath\n                        .apply(indicator, arguments);\n                }\n                return path;\n            }\n            getValues(series, params) {\n                const period = params.period, periodTenkan = params.periodTenkan, periodSenkouSpanB = params.periodSenkouSpanB, xVal = series.xData, yVal = series.yData, xAxis = series.xAxis, yValLen = (yVal && yVal.length) || 0, closestPointRange = getClosestDistance(xAxis.series.map((s) => s.xData || [])), IKH = [], xData = [];\n                let date, slicedTSY, slicedKSY, slicedSSBY, pointTS, pointKS, pointSSB, i, TS, KS, CS, SSA, SSB;\n                // Ikh requires close value\n                if (xVal.length <= period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // Add timestamps at the beginning\n                const dateStart = xVal[0] - period * closestPointRange;\n                for (i = 0; i < period; i++) {\n                    xData.push(dateStart + i * closestPointRange);\n                }\n                for (i = 0; i < yValLen; i++) {\n                    // Tenkan Sen\n                    if (i >= periodTenkan) {\n                        slicedTSY = yVal.slice(i - periodTenkan, i);\n                        pointTS = highlowLevel(slicedTSY);\n                        TS = (pointTS.high + pointTS.low) / 2;\n                    }\n                    if (i >= period) {\n                        slicedKSY = yVal.slice(i - period, i);\n                        pointKS = highlowLevel(slicedKSY);\n                        KS = (pointKS.high + pointKS.low) / 2;\n                        SSA = (TS + KS) / 2;\n                    }\n                    if (i >= periodSenkouSpanB) {\n                        slicedSSBY = yVal.slice(i - periodSenkouSpanB, i);\n                        pointSSB = highlowLevel(slicedSSBY);\n                        SSB = (pointSSB.high + pointSSB.low) / 2;\n                    }\n                    CS = yVal[i][3];\n                    date = xVal[i];\n                    if (typeof IKH[i] === 'undefined') {\n                        IKH[i] = [];\n                    }\n                    if (typeof IKH[i + period - 1] === 'undefined') {\n                        IKH[i + period - 1] = [];\n                    }\n                    IKH[i + period - 1][0] = TS;\n                    IKH[i + period - 1][1] = KS;\n                    IKH[i + period - 1][2] = void 0;\n                    if (typeof IKH[i + 1] === 'undefined') {\n                        IKH[i + 1] = [];\n                    }\n                    IKH[i + 1][2] = CS;\n                    if (i <= period) {\n                        IKH[i + period - 1][3] = void 0;\n                        IKH[i + period - 1][4] = void 0;\n                    }\n                    if (typeof IKH[i + 2 * period - 2] === 'undefined') {\n                        IKH[i + 2 * period - 2] = [];\n                    }\n                    IKH[i + 2 * period - 2][3] = SSA;\n                    IKH[i + 2 * period - 2][4] = SSB;\n                    xData.push(date);\n                }\n                // Add timestamps for further points\n                for (i = 1; i <= period; i++) {\n                    xData.push(date + i * closestPointRange);\n                }\n                return {\n                    values: IKH,\n                    xData: xData,\n                    yData: IKH\n                };\n            }\n        }\n        /**\n         * Ichimoku Kinko Hyo (IKH). This series requires `linkedTo` option to be\n         * set.\n         *\n         * @sample stock/indicators/ichimoku-kinko-hyo\n         *         Ichimoku Kinko Hyo indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/ichimoku-kinko-hyo\n         * @optionparent plotOptions.ikh\n         */\n        IKHIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 26,\n                /**\n                 * The base period for Tenkan calculations.\n                 */\n                periodTenkan: 9,\n                /**\n                 * The base period for Senkou Span B calculations\n                 */\n                periodSenkouSpanB: 52\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {series.name}</b><br/>' +\n                    'TENKAN SEN: {point.tenkanSen:.3f}<br/>' +\n                    'KIJUN SEN: {point.kijunSen:.3f}<br/>' +\n                    'CHIKOU SPAN: {point.chikouSpan:.3f}<br/>' +\n                    'SENKOU SPAN A: {point.senkouSpanA:.3f}<br/>' +\n                    'SENKOU SPAN B: {point.senkouSpanB:.3f}<br/>'\n            },\n            /**\n             * The styles for Tenkan line\n             */\n            tenkanLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Kijun line\n             */\n            kijunLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Chikou line\n             */\n            chikouLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Senkou Span A line\n             */\n            senkouSpanA: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Senkou Span B line\n             */\n            senkouSpanB: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for area between Senkou Span A and B.\n             */\n            senkouSpan: {\n                /**\n                 * Color of the area between Senkou Span A and B,\n                 * when Senkou Span A is above Senkou Span B. Note that if\n                 * a `style.fill` is defined, the `color` takes precedence and\n                 * the `style.fill` is ignored.\n                 *\n                 * @see [senkouSpan.styles.fill](#series.ikh.senkouSpan.styles.fill)\n                 *\n                 * @sample stock/indicators/ichimoku-kinko-hyo\n                 *         Ichimoku Kinko Hyo color\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @since     7.0.0\n                 * @apioption plotOptions.ikh.senkouSpan.color\n                 */\n                /**\n                 * Color of the area between Senkou Span A and B,\n                 * when Senkou Span A is under Senkou Span B.\n                 *\n                 * @sample stock/indicators/ikh-negative-color\n                 *         Ichimoku Kinko Hyo negativeColor\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @since     7.0.0\n                 * @apioption plotOptions.ikh.senkouSpan.negativeColor\n                 */\n                styles: {\n                    /**\n                     * Color of the area between Senkou Span A and B.\n                     *\n                     * @deprecated\n                     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     */\n                    fill: 'rgba(255, 0, 0, 0.5)'\n                }\n            },\n            dataGrouping: {\n                approximation: 'ichimoku-averages'\n            }\n        });\n        extend(IKHIndicator.prototype, {\n            pointArrayMap: [\n                'tenkanSen',\n                'kijunSen',\n                'chikouSpan',\n                'senkouSpanA',\n                'senkouSpanB'\n            ],\n            pointValKey: 'tenkanSen',\n            nameComponents: ['periodSenkouSpanB', 'period', 'periodTenkan']\n        });\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        ApproximationRegistry['ichimoku-averages'] = ichimokuAverages;\n        SeriesRegistry.registerSeriesType('ikh', IKHIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `IKH` series. If the [type](#series.ikh.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ikh\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ichimoku-kinko-hyo\n         * @apioption series.ikh\n         */\n        (''); // add doclet above to transpiled file\n\n        return IKHIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/KeltnerChannels/KeltnerChannelsIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Keltner Channels series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.keltnerchannels\n         *\n         * @augments Highcharts.Series\n         */\n        class KeltnerChannelsIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                SeriesRegistry.seriesTypes.sma.prototype.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    topLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    bottomLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const period = params.period, periodATR = params.periodATR, multiplierATR = params.multiplierATR, index = params.index, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // Keltner Channels array structure:\n                // 0-date, 1-top line, 2-middle line, 3-bottom line\n                KC = [], seriesEMA = SeriesRegistry.seriesTypes.ema.prototype.getValues(series, {\n                    period: period,\n                    index: index\n                }), seriesATR = SeriesRegistry.seriesTypes.atr.prototype.getValues(series, {\n                    period: periodATR\n                }), xData = [], yData = [];\n                // middle line, top line and bottom lineI\n                let ML, TL, BL, date, pointEMA, pointATR, i;\n                if (yValLen < period) {\n                    return;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    pointEMA = seriesEMA.values[i - period];\n                    pointATR = seriesATR.values[i - periodATR];\n                    date = pointEMA[0];\n                    TL = correctFloat(pointEMA[1] + (multiplierATR * pointATR[1]));\n                    BL = correctFloat(pointEMA[1] - (multiplierATR * pointATR[1]));\n                    ML = pointEMA[1];\n                    KC.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: KC,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Keltner Channels. This series requires the `linkedTo` option to be set\n         * and should be loaded after the `stock/indicators/indicators.js`,\n         * `stock/indicators/atr.js`, and `stock/ema/.js`.\n         *\n         * @sample {highstock} stock/indicators/keltner-channels\n         *         Keltner Channels\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart,showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/keltner-channels\n         * @optionparent plotOptions.keltnerchannels\n         */\n        KeltnerChannelsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Keltner Channels Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type {Highcharts.Color}\n             * @since 9.3.2\n             * @apioption plotOptions.keltnerchannels.fillColor\n             *\n             */\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                index: 0,\n                period: 20,\n                /**\n                 * The ATR period.\n                 */\n                periodATR: 10,\n                /**\n                 * The ATR multiplier.\n                 */\n                multiplierATR: 2\n            },\n            /**\n             * Bottom line options.\n             *\n             */\n            bottomLine: {\n                /**\n                 * Styles for a bottom line.\n                 *\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * `plotOptions.keltnerchannels.color`\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * Top line options.\n             *\n             * @extends plotOptions.keltnerchannels.bottomLine\n             */\n            topLine: {\n                styles: {\n                    lineWidth: 1,\n                    lineColor: void 0\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'\n            },\n            marker: {\n                enabled: false\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            },\n            lineWidth: 1\n        });\n        extend(KeltnerChannelsIndicator.prototype, {\n            nameBase: 'Keltner Channels',\n            areaLinesNames: ['top', 'bottom'],\n            nameComponents: ['period', 'periodATR', 'multiplierATR'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(KeltnerChannelsIndicator);\n        SeriesRegistry.registerSeriesType('keltnerchannels', KeltnerChannelsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Keltner Channels indicator. If the [type](#series.keltnerchannels.type)\n         * option is not specified, it is inherited from[chart.type](#chart.type).\n         *\n         * @extends      series,plotOptions.keltnerchannels\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *               joinBy, keys, navigatorOptions, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *               stacking, showInNavigator\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/keltner-channels\n         * @apioption    series.keltnerchannels\n         */\n        ''; // to include the above in the js output\n\n        return KeltnerChannelsIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Klinger/KlingerIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, error, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Klinger oscillator series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.klinger\n         *\n         * @augments Highcharts.Series\n         */\n        class KlingerIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            calculateTrend(yVal, i) {\n                const isUpward = yVal[i][1] + yVal[i][2] + yVal[i][3] >\n                    yVal[i - 1][1] + yVal[i - 1][2] + yVal[i - 1][3];\n                return isUpward ? 1 : -1;\n            }\n            // Checks if the series and volumeSeries are accessible, number of\n            // points.x is longer than period, is series has OHLC data\n            isValidData(firstYVal) {\n                const chart = this.chart, options = this.options, series = this.linkedParent, isSeriesOHLC = isArray(firstYVal) &&\n                    firstYVal.length === 4, volumeSeries = this.volumeSeries ||\n                    (this.volumeSeries =\n                        chart.get(options.params.volumeSeriesID));\n                if (!volumeSeries) {\n                    error('Series ' +\n                        options.params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                }\n                const isLengthValid = [series, volumeSeries].every(function (series) {\n                    return series && series.xData && series.xData.length >=\n                        options.params.slowAvgPeriod;\n                });\n                return !!(isLengthValid && isSeriesOHLC);\n            }\n            getCM(previousCM, DM, trend, previousTrend, prevoiusDM) {\n                return correctFloat(DM + (trend === previousTrend ? previousCM : prevoiusDM));\n            }\n            getDM(high, low) {\n                return correctFloat(high - low);\n            }\n            getVolumeForce(yVal) {\n                const volumeForce = [];\n                let CM = 0, // cumulative measurement\n                DM, // daily measurement\n                force, i = 1, // start from second point\n                previousCM = 0, previousDM = yVal[0][1] - yVal[0][2], // initial DM\n                previousTrend = 0, trend;\n                for (i; i < yVal.length; i++) {\n                    trend = this.calculateTrend(yVal, i);\n                    DM = this.getDM(yVal[i][1], yVal[i][2]);\n                    // For the first iteration when the previousTrend doesn't exist,\n                    // previousCM doesn't exist either, but it doesn't matter becouse\n                    // it's filltered out in the getCM method in else statement,\n                    // (in this iteration, previousCM can be raplaced with the DM).\n                    CM = this.getCM(previousCM, DM, trend, previousTrend, previousDM);\n                    force = this.volumeSeries.yData[i] *\n                        trend * Math.abs(2 * ((DM / CM) - 1)) * 100;\n                    volumeForce.push([force]);\n                    // Before next iteration, assign the current as the previous.\n                    previousTrend = trend;\n                    previousCM = CM;\n                    previousDM = DM;\n                }\n                return volumeForce;\n            }\n            getEMA(yVal, prevEMA, SMA, EMApercent, index, i, xVal) {\n                return EMAIndicator.prototype.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getSMA(period, index, values) {\n                return EMAIndicator.prototype\n                    .accumulatePeriodPoints(period, index, values) / period;\n            }\n            getValues(series, params) {\n                const Klinger = [], xVal = series.xData, yVal = series.yData, xData = [], yData = [], calcSingal = [];\n                let KO, i = 0, fastEMA = 0, slowEMA, \n                // signalEMA: number|undefined = void 0,\n                previousFastEMA = void 0, previousSlowEMA = void 0, signal = null;\n                // If the necessary conditions are not fulfilled, don't proceed.\n                if (!this.isValidData(yVal[0])) {\n                    return;\n                }\n                // Calculate the Volume Force array.\n                const volumeForce = this.getVolumeForce(yVal);\n                // Calculate SMA for the first points.\n                const SMAFast = this.getSMA(params.fastAvgPeriod, 0, volumeForce), SMASlow = this.getSMA(params.slowAvgPeriod, 0, volumeForce);\n                // Calculate EMApercent for the first points.\n                const fastEMApercent = 2 / (params.fastAvgPeriod + 1), slowEMApercent = 2 / (params.slowAvgPeriod + 1);\n                // Calculate KO\n                for (i; i < yVal.length; i++) {\n                    // Get EMA for fast period.\n                    if (i >= params.fastAvgPeriod) {\n                        fastEMA = this.getEMA(volumeForce, previousFastEMA, SMAFast, fastEMApercent, 0, i, xVal)[1];\n                        previousFastEMA = fastEMA;\n                    }\n                    // Get EMA for slow period.\n                    if (i >= params.slowAvgPeriod) {\n                        slowEMA = this.getEMA(volumeForce, previousSlowEMA, SMASlow, slowEMApercent, 0, i, xVal)[1];\n                        previousSlowEMA = slowEMA;\n                        KO = correctFloat(fastEMA - slowEMA);\n                        calcSingal.push(KO);\n                        // Calculate signal SMA\n                        if (calcSingal.length >= params.signalPeriod) {\n                            signal = calcSingal.slice(-params.signalPeriod)\n                                .reduce((prev, curr) => prev + curr) / params.signalPeriod;\n                        }\n                        Klinger.push([xVal[i], KO, signal]);\n                        xData.push(xVal[i]);\n                        yData.push([KO, signal]);\n                    }\n                }\n                return {\n                    values: Klinger,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Klinger oscillator. This series requires the `linkedTo` option to be set\n         * and should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/klinger\n         *         Klinger oscillator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/klinger\n         * @optionparent plotOptions.klinger\n         */\n        KlingerIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of Klinger Oscillator.\n             *\n             * @excluding index, period\n             */\n            params: {\n                /**\n                 * The fast period for indicator calculations.\n                 */\n                fastAvgPeriod: 34,\n                /**\n                 * The slow period for indicator calculations.\n                 */\n                slowAvgPeriod: 55,\n                /**\n                 * The base period for signal calculations.\n                 */\n                signalPeriod: 13,\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indiator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            signalLine: {\n                /**\n                 * Styles for a signal line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.klinger.color\n                     * ](#plotOptions.klinger.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: '#ff0000'\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color: {point.color}\">\\u25CF</span>' +\n                    '<b> {series.name}</b><br/>' +\n                    '<span style=\"color: {point.color}\">Klinger</span>: ' +\n                    '{point.y}<br/>' +\n                    '<span style=\"color: ' +\n                    '{point.series.options.signalLine.styles.lineColor}\">' +\n                    'Signal</span>' +\n                    ': {point.signal}<br/>'\n            }\n        });\n        extend(KlingerIndicator.prototype, {\n            areaLinesNames: [],\n            linesApiNames: ['signalLine'],\n            nameBase: 'Klinger',\n            nameComponents: ['fastAvgPeriod', 'slowAvgPeriod'],\n            pointArrayMap: ['y', 'signal'],\n            parallelArrays: ['x', 'y', 'signal'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(KlingerIndicator);\n        SeriesRegistry.registerSeriesType('klinger', KlingerIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Klinger oscillator. If the [type](#series.klinger.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.klinger\n         * @since 9.1.0\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/klinger\n         * @apioption series.klinger\n         */\n        ''; // to include the above in the js output\n\n        return KlingerIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MACD/MACDIndicator.js', [_modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { noop } = H;\n        const { column: ColumnSeries, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, correctFloat, defined, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MACD series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.macd\n         *\n         * @augments Highcharts.Series\n         */\n        class MACDIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                SeriesRegistry.seriesTypes.sma.prototype.init.apply(this, arguments);\n                const originalColor = this.color;\n                // Check whether series is initialized. It may be not initialized,\n                // when any of required indicators is missing.\n                if (this.options) {\n                    // If the default colour doesn't set, get the next available from\n                    // the array and apply it #15608.\n                    if (defined(this.colorIndex)) {\n                        if (this.options.signalLine &&\n                            this.options.signalLine.styles &&\n                            !this.options.signalLine.styles.lineColor) {\n                            this.options.colorIndex = this.colorIndex + 1;\n                            this.getCyclic('color', void 0, this.chart.options.colors);\n                            this.options.signalLine.styles.lineColor =\n                                this.color;\n                        }\n                        if (this.options.macdLine &&\n                            this.options.macdLine.styles &&\n                            !this.options.macdLine.styles.lineColor) {\n                            this.options.colorIndex = this.colorIndex + 1;\n                            this.getCyclic('color', void 0, this.chart.options.colors);\n                            this.options.macdLine.styles.lineColor =\n                                this.color;\n                        }\n                    }\n                    // Zones have indexes automatically calculated, we need to\n                    // translate them to support multiple lines within one indicator\n                    this.macdZones = {\n                        zones: this.options.macdLine.zones,\n                        startIndex: 0\n                    };\n                    this.signalZones = {\n                        zones: this.macdZones.zones.concat(this.options.signalLine.zones),\n                        startIndex: this.macdZones.zones.length\n                    };\n                }\n                // Reset color and index #15608.\n                this.color = originalColor;\n            }\n            toYData(point) {\n                return [point.y, point.signal, point.MACD];\n            }\n            translate() {\n                const indicator = this, plotNames = ['plotSignal', 'plotMACD'];\n                H.seriesTypes.column.prototype.translate.apply(indicator);\n                indicator.points.forEach(function (point) {\n                    [point.signal, point.MACD].forEach(function (value, i) {\n                        if (value !== null) {\n                            point[plotNames[i]] =\n                                indicator.yAxis.toPixels(value, true);\n                        }\n                    });\n                });\n            }\n            destroy() {\n                // this.graph is null due to removing two times the same SVG element\n                this.graph = null;\n                this.graphmacd = this.graphmacd && this.graphmacd.destroy();\n                this.graphsignal = this.graphsignal && this.graphsignal.destroy();\n                SeriesRegistry.seriesTypes.sma.prototype.destroy.apply(this, arguments);\n            }\n            drawGraph() {\n                const indicator = this, mainLinePoints = indicator.points, mainLineOptions = indicator.options, histogramZones = indicator.zones, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, otherSignals = [[], []];\n                let point, pointsLength = mainLinePoints.length;\n                // Generate points for top and bottom lines:\n                while (pointsLength--) {\n                    point = mainLinePoints[pointsLength];\n                    if (defined(point.plotMACD)) {\n                        otherSignals[0].push({\n                            plotX: point.plotX,\n                            plotY: point.plotMACD,\n                            isNull: !defined(point.plotMACD)\n                        });\n                    }\n                    if (defined(point.plotSignal)) {\n                        otherSignals[1].push({\n                            plotX: point.plotX,\n                            plotY: point.plotSignal,\n                            isNull: !defined(point.plotMACD)\n                        });\n                    }\n                }\n                // Modify options and generate smoothing line:\n                ['macd', 'signal'].forEach((lineName, i) => {\n                    indicator.points = otherSignals[i];\n                    indicator.options = merge(mainLineOptions[`${lineName}Line`]?.styles || {}, gappedExtend);\n                    indicator.graph = indicator[`graph${lineName}`];\n                    // Zones extension:\n                    indicator.zones = (indicator[`${lineName}Zones`].zones || []).slice(indicator[`${lineName}Zones`].startIndex || 0);\n                    SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n                    indicator[`graph${lineName}`] = indicator.graph;\n                });\n                // Restore options:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.zones = histogramZones;\n            }\n            applyZones() {\n                // Histogram zones are handled by drawPoints method\n                // Here we need to apply zones for all lines\n                const histogramZones = this.zones;\n                // signalZones.zones contains all zones:\n                this.zones = this.signalZones.zones;\n                SeriesRegistry.seriesTypes.sma.prototype.applyZones.call(this);\n                // applyZones hides only main series.graph, hide macd line manually\n                if (this.graphmacd && this.options.macdLine.zones.length) {\n                    this.graphmacd.hide();\n                }\n                this.zones = histogramZones;\n            }\n            getValues(series, params) {\n                const indexToShift = (params.longPeriod - params.shortPeriod), // #14197\n                MACD = [], xMACD = [], yMACD = [];\n                let shortEMA, longEMA, i, j = 0, signalLine = [];\n                if (series.xData.length <\n                    params.longPeriod + params.signalPeriod) {\n                    return;\n                }\n                // Calculating the short and long EMA used when calculating the MACD\n                shortEMA = SeriesRegistry.seriesTypes.ema.prototype.getValues(series, {\n                    period: params.shortPeriod,\n                    index: params.index\n                });\n                longEMA = SeriesRegistry.seriesTypes.ema.prototype.getValues(series, {\n                    period: params.longPeriod,\n                    index: params.index\n                });\n                shortEMA = shortEMA.values;\n                longEMA = longEMA.values;\n                // Subtract each Y value from the EMA's and create the new dataset\n                // (MACD)\n                for (i = 0; i <= shortEMA.length; i++) {\n                    if (defined(longEMA[i]) &&\n                        defined(longEMA[i][1]) &&\n                        defined(shortEMA[i + indexToShift]) &&\n                        defined(shortEMA[i + indexToShift][0])) {\n                        MACD.push([\n                            shortEMA[i + indexToShift][0],\n                            0,\n                            null,\n                            shortEMA[i + indexToShift][1] -\n                                longEMA[i][1]\n                        ]);\n                    }\n                }\n                // Set the Y and X data of the MACD. This is used in calculating the\n                // signal line.\n                for (i = 0; i < MACD.length; i++) {\n                    xMACD.push(MACD[i][0]);\n                    yMACD.push([0, null, MACD[i][3]]);\n                }\n                // Setting the signalline (Signal Line: X-day EMA of MACD line).\n                signalLine = SeriesRegistry.seriesTypes.ema.prototype.getValues({\n                    xData: xMACD,\n                    yData: yMACD\n                }, {\n                    period: params.signalPeriod,\n                    index: 2\n                });\n                signalLine = signalLine.values;\n                // Setting the MACD Histogram. In comparison to the loop with pure\n                // MACD this loop uses MACD x value not xData.\n                for (i = 0; i < MACD.length; i++) {\n                    // detect the first point\n                    if (MACD[i][0] >= signalLine[0][0]) {\n                        MACD[i][2] = signalLine[j][1];\n                        yMACD[i] = [0, signalLine[j][1], MACD[i][3]];\n                        if (MACD[i][3] === null) {\n                            MACD[i][1] = 0;\n                            yMACD[i][0] = 0;\n                        }\n                        else {\n                            MACD[i][1] = correctFloat(MACD[i][3] -\n                                signalLine[j][1]);\n                            yMACD[i][0] = correctFloat(MACD[i][3] -\n                                signalLine[j][1]);\n                        }\n                        j++;\n                    }\n                }\n                return {\n                    values: MACD,\n                    xData: xMACD,\n                    yData: yMACD\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Moving Average Convergence Divergence (MACD). This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample stock/indicators/macd\n         *         MACD indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/macd\n         * @optionparent plotOptions.macd\n         */\n        MACDIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The short period for indicator calculations.\n                 */\n                shortPeriod: 12,\n                /**\n                 * The long period for indicator calculations.\n                 */\n                longPeriod: 26,\n                /**\n                 * The base period for signal calculations.\n                 */\n                signalPeriod: 9,\n                period: 26\n            },\n            /**\n             * The styles for signal line\n             */\n            signalLine: {\n                /**\n                 * @sample stock/indicators/macd-zones\n                 *         Zones in MACD\n                 *\n                 * @extends plotOptions.macd.zones\n                 */\n                zones: [],\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type  {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for macd line\n             */\n            macdLine: {\n                /**\n                 * @sample stock/indicators/macd-zones\n                 *         Zones in MACD\n                 *\n                 * @extends plotOptions.macd.zones\n                 */\n                zones: [],\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type  {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: 0,\n            groupPadding: 0.1,\n            pointPadding: 0.1,\n            crisp: false,\n            states: {\n                hover: {\n                    halo: {\n                        size: 0\n                    }\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {series.name}</b><br/>' +\n                    'Value: {point.MACD}<br/>' +\n                    'Signal: {point.signal}<br/>' +\n                    'Histogram: {point.y}<br/>'\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            },\n            minPointLength: 0\n        });\n        extend(MACDIndicator.prototype, {\n            nameComponents: ['longPeriod', 'shortPeriod', 'signalPeriod'],\n            // \"y\" value is treated as Histogram data\n            pointArrayMap: ['y', 'signal', 'MACD'],\n            parallelArrays: ['x', 'y', 'signal', 'MACD'],\n            pointValKey: 'y',\n            // Columns support:\n            markerAttribs: noop,\n            getColumnMetrics: H.seriesTypes.column.prototype.getColumnMetrics,\n            crispCol: H.seriesTypes.column.prototype.crispCol,\n            drawPoints: H.seriesTypes.column.prototype.drawPoints\n        });\n        SeriesRegistry.registerSeriesType('macd', MACDIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `MACD` series. If the [type](#series.macd.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.macd\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/macd\n         * @apioption series.macd\n         */\n        ''; // to include the above in the js output\n\n        return MACDIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MFI/MFIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Money Flow Index indicator for Highcharts Stock\n         *\n         *  (c) 2010-2024 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, error, isArray } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function sumArray(array) {\n            return array.reduce(function (prev, cur) {\n                return prev + cur;\n            });\n        }\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        function calculateTypicalPrice(point) {\n            return (point[1] + point[2] + point[3]) / 3;\n        }\n        function calculateRawMoneyFlow(typicalPrice, volume) {\n            return typicalPrice * volume;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MFI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.mfi\n         *\n         * @augments Highcharts.Series\n         */\n        class MFIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, decimals = params.decimals, volumeSeries = series.chart.get(params.volumeSeriesID), yValVolume = (volumeSeries && volumeSeries.yData), MFI = [], xData = [], yData = [], positiveMoneyFlow = [], negativeMoneyFlow = [];\n                let newTypicalPrice, oldTypicalPrice, rawMoneyFlow, negativeMoneyFlowSum, positiveMoneyFlowSum, moneyFlowRatio, MFIPoint, i, isUp = false, \n                // MFI starts calculations from the second point\n                // Cause we need to calculate change between two points\n                range = 1;\n                if (!volumeSeries) {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                // MFI requires high low and close values\n                if ((xVal.length <= period) || !isArray(yVal[0]) ||\n                    yVal[0].length !== 4 ||\n                    !yValVolume) {\n                    return;\n                }\n                // Calculate first typical price\n                newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                // Accumulate first N-points\n                while (range < period + 1) {\n                    // Calculate if up or down\n                    oldTypicalPrice = newTypicalPrice;\n                    newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                    isUp = newTypicalPrice >= oldTypicalPrice;\n                    // Calculate raw money flow\n                    rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[range]);\n                    // Add to array\n                    positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                    negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    range++;\n                }\n                for (i = range - 1; i < yValLen; i++) {\n                    if (i > range - 1) {\n                        // Remove first point from array\n                        positiveMoneyFlow.shift();\n                        negativeMoneyFlow.shift();\n                        // Calculate if up or down\n                        oldTypicalPrice = newTypicalPrice;\n                        newTypicalPrice = calculateTypicalPrice(yVal[i]);\n                        isUp = newTypicalPrice > oldTypicalPrice;\n                        // Calculate raw money flow\n                        rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[i]);\n                        // Add to array\n                        positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                        negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    }\n                    // Calculate sum of negative and positive money flow:\n                    negativeMoneyFlowSum = sumArray(negativeMoneyFlow);\n                    positiveMoneyFlowSum = sumArray(positiveMoneyFlow);\n                    moneyFlowRatio = positiveMoneyFlowSum / negativeMoneyFlowSum;\n                    MFIPoint = toFixed(100 - (100 / (1 + moneyFlowRatio)), decimals);\n                    MFI.push([xVal[i], MFIPoint]);\n                    xData.push(xVal[i]);\n                    yData.push(MFIPoint);\n                }\n                return {\n                    values: MFI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Money Flow Index. This series requires `linkedTo` option to be set and\n         * should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/mfi\n         *         Money Flow Index Indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/mfi\n         * @optionparent plotOptions.mfi\n         */\n        MFIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume',\n                /**\n                 * Number of maximum decimals that are used in MFI calculations.\n                 */\n                decimals: 4\n            }\n        });\n        extend(MFIIndicator.prototype, {\n            nameBase: 'Money Flow Index'\n        });\n        SeriesRegistry.registerSeriesType('mfi', MFIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `MFI` series. If the [type](#series.mfi.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.mfi\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/mfi\n         * @apioption series.mfi\n         */\n        ''; // to include the above in the js output\n\n        return MFIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Momentum/MomentumIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function populateAverage(xVal, yVal, i, period, index) {\n            const mmY = yVal[i - 1][index] - yVal[i - period - 1][index], mmX = xVal[i - 1];\n            return [mmX, mmY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Momentum series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.momentum\n         *\n         * @augments Highcharts.Series\n         */\n        class MomentumIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, index = params.index, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, MM = [], xData = [], yData = [];\n                let i, MMPoint;\n                if (xVal.length <= period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (!isArray(yVal[0])) {\n                    return;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = (period + 1); i < yValLen; i++) {\n                    MMPoint = populateAverage(xVal, yVal, i, period, index);\n                    MM.push(MMPoint);\n                    xData.push(MMPoint[0]);\n                    yData.push(MMPoint[1]);\n                }\n                MMPoint = populateAverage(xVal, yVal, i, period, index);\n                MM.push(MMPoint);\n                xData.push(MMPoint[0]);\n                yData.push(MMPoint[1]);\n                return {\n                    values: MM,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Momentum. This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/momentum\n         *         Momentum indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/momentum\n         * @optionparent plotOptions.momentum\n         */\n        MomentumIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3\n            }\n        });\n        extend(MomentumIndicator.prototype, {\n            nameBase: 'Momentum'\n        });\n        SeriesRegistry.registerSeriesType('momentum', MomentumIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Momentum` series. If the [type](#series.momentum.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.momentum\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/momentum\n         * @apioption series.momentum\n         */\n        ''; // to include the above in the js output\n\n        return MomentumIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/NATR/NATRIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { atr: ATRIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The NATR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.natr\n         *\n         * @augments Highcharts.Series\n         */\n        class NATRIndicator extends ATRIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const atrData = (super.getValues.apply(this, arguments)), atrLength = atrData.values.length, yVal = series.yData;\n                let i = 0, period = params.period - 1;\n                if (!atrData) {\n                    return;\n                }\n                for (; i < atrLength; i++) {\n                    atrData.yData[i] = (atrData.values[i][1] / yVal[period][3] * 100);\n                    atrData.values[i][1] = atrData.yData[i];\n                    period++;\n                }\n                return atrData;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Normalized average true range indicator (NATR). This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js` and `stock/indicators/atr.js`.\n         *\n         * @sample {highstock} stock/indicators/natr\n         *         NATR indicator\n         *\n         * @extends      plotOptions.atr\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/natr\n         * @optionparent plotOptions.natr\n         */\n        NATRIndicator.defaultOptions = merge(ATRIndicator.defaultOptions, {\n            tooltip: {\n                valueSuffix: '%'\n            }\n        });\n        SeriesRegistry.registerSeriesType('natr', NATRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `NATR` series. If the [type](#series.natr.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.natr\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/atr\n         * @requires  stock/indicators/natr\n         * @apioption series.natr\n         */\n        ''; // to include the above in the js output'\n\n        return NATRIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/OBV/OBVIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isNumber, error, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The OBV series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.obv\n         *\n         * @augments Highcharts.Series\n         */\n        class OBVIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const volumeSeries = series.chart.get(params.volumeSeriesID), xVal = series.xData, yVal = series.yData, OBV = [], xData = [], yData = [], hasOHLC = !isNumber(yVal[0]);\n                let OBVPoint = [], i = 1, previousOBV = 0, curentOBV = 0, previousClose = 0, curentClose = 0, volume;\n                // Checks if volume series exists.\n                if (volumeSeries) {\n                    volume = volumeSeries.yData;\n                    // Add first point and get close value.\n                    OBVPoint = [xVal[0], previousOBV];\n                    previousClose = hasOHLC ?\n                        yVal[0][3] : yVal[0];\n                    OBV.push(OBVPoint);\n                    xData.push(xVal[0]);\n                    yData.push(OBVPoint[1]);\n                    for (i; i < yVal.length; i++) {\n                        curentClose = hasOHLC ?\n                            yVal[i][3] : yVal[i];\n                        if (curentClose > previousClose) { // up\n                            curentOBV = previousOBV + volume[i];\n                        }\n                        else if (curentClose === previousClose) { // constant\n                            curentOBV = previousOBV;\n                        }\n                        else { // down\n                            curentOBV = previousOBV - volume[i];\n                        }\n                        // Add point.\n                        OBVPoint = [xVal[i], curentOBV];\n                        // Assign current as previous for next iteration.\n                        previousOBV = curentOBV;\n                        previousClose = curentClose;\n                        OBV.push(OBVPoint);\n                        xData.push(xVal[i]);\n                        yData.push(OBVPoint[1]);\n                    }\n                }\n                else {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                return {\n                    values: OBV,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * On-Balance Volume (OBV) technical indicator. This series\n         * requires the `linkedTo` option to be set and should be loaded after\n         * the `stock/indicators/indicators.js` file. Through the `volumeSeriesID`\n         * there also should be linked the volume series.\n         *\n         * @sample stock/indicators/obv\n         *         OBV indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/obv\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @optionparent plotOptions.obv\n         */\n        OBVIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            marker: {\n                enabled: false\n            },\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indicator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            tooltip: {\n                valueDecimals: 0\n            }\n        });\n        extend(OBVIndicator.prototype, {\n            nameComponents: void 0\n        });\n        SeriesRegistry.registerSeriesType('obv', OBVIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `OBV` series. If the [type](#series.obv.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.obv\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/obv\n         * @apioption series.obv\n         */\n        ''; // to include the above in the js output\n\n        return OBVIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PivotPoints/PivotPointsPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const SMAPoint = SeriesRegistry.seriesTypes.sma.prototype.pointClass;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function destroyExtraLabels(point, functionName) {\n            const props = point.series.pointArrayMap;\n            let prop, i = props.length;\n            SeriesRegistry.seriesTypes.sma.prototype.pointClass.prototype[functionName].call(point);\n            while (i--) {\n                prop = 'dataLabel' + props[i];\n                // S4 dataLabel could be removed by parent method:\n                if (point[prop] && point[prop].element) {\n                    point[prop].destroy();\n                }\n                point[prop] = null;\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class PivotPointsPoint extends SMAPoint {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            destroyElements() {\n                destroyExtraLabels(this, 'destroyElements');\n            }\n            // This method is called when removing points, e.g. series.update()\n            destroy() {\n                destroyExtraLabels(this, 'destroyElements');\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return PivotPointsPoint;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PivotPoints/PivotPointsIndicator.js', [_modules['Stock/Indicators/PivotPoints/PivotPointsPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (PivotPointsPoint, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend, defined, isArray } = U;\n        /**\n         *\n         *  Class\n         *\n         **/\n        /**\n         * The Pivot Points series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pivotpoints\n         *\n         * @augments Highcharts.Series\n         */\n        class PivotPointsIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            toYData(point) {\n                return [point.P]; // The rest should not affect extremes\n            }\n            translate() {\n                const indicator = this;\n                super.translate.apply(indicator);\n                indicator.points.forEach(function (point) {\n                    indicator.pointArrayMap.forEach(function (value) {\n                        if (defined(point[value])) {\n                            point['plot' + value] = (indicator.yAxis.toPixels(point[value], true));\n                        }\n                    });\n                });\n                // Pivot points are rendered as horizontal lines\n                // And last point start not from the next one (as it's the last one)\n                // But from the approximated last position in a given range\n                indicator.plotEndPoint = indicator.xAxis.toPixels(indicator.endPoint, true);\n            }\n            getGraphPath(points) {\n                const indicator = this, allPivotPoints = ([[], [], [], [], [], [], [], [], []]), pointArrayMapLength = indicator.pointArrayMap.length;\n                let endPoint = indicator.plotEndPoint, path = [], position, point, pointsLength = points.length, i;\n                while (pointsLength--) {\n                    point = points[pointsLength];\n                    for (i = 0; i < pointArrayMapLength; i++) {\n                        position = indicator.pointArrayMap[i];\n                        if (defined(point[position])) {\n                            allPivotPoints[i].push({\n                                // Start left:\n                                plotX: point.plotX,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            }, {\n                                // Go to right:\n                                plotX: endPoint,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            }, {\n                                // And add null points in path to generate breaks:\n                                plotX: endPoint,\n                                plotY: null,\n                                isNull: true\n                            });\n                        }\n                    }\n                    endPoint = point.plotX;\n                }\n                allPivotPoints.forEach((pivotPoints) => {\n                    path = path.concat(super.getGraphPath.call(indicator, pivotPoints));\n                });\n                return path;\n            }\n            // TODO: Rewrite this logic to use multiple datalabels\n            drawDataLabels() {\n                const indicator = this, pointMapping = indicator.pointArrayMap;\n                let currentLabel, pointsLength, point, i;\n                if (indicator.options.dataLabels.enabled) {\n                    pointsLength = indicator.points.length;\n                    // For every Resistance/Support group we need to render labels.\n                    // Add one more item, which will just store dataLabels from\n                    // previous iteration\n                    pointMapping.concat([false]).forEach((position, k) => {\n                        i = pointsLength;\n                        while (i--) {\n                            point = indicator.points[i];\n                            if (!position) {\n                                // Store S4 dataLabel too:\n                                point['dataLabel' + pointMapping[k - 1]] =\n                                    point.dataLabel;\n                            }\n                            else {\n                                point.y = point[position];\n                                point.pivotLine = position;\n                                point.plotY = point['plot' + position];\n                                currentLabel = point['dataLabel' + position];\n                                // Store previous label\n                                if (k) {\n                                    point['dataLabel' + pointMapping[k - 1]] = point.dataLabel;\n                                }\n                                if (!point.dataLabels) {\n                                    point.dataLabels = [];\n                                }\n                                point.dataLabels[0] = point.dataLabel =\n                                    currentLabel =\n                                        currentLabel && currentLabel.element ?\n                                            currentLabel :\n                                            null;\n                            }\n                        }\n                        super.drawDataLabels\n                            .call(indicator);\n                    });\n                }\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, placement = this[params.algorithm + 'Placement'], \n                // 0- from, 1- to, 2- R1, 3- R2, 4- pivot, 5- S1 etc.\n                PP = [], xData = [], yData = [];\n                let endTimestamp, slicedXLen, slicedX, slicedY, lastPP, pivot, avg, i;\n                // Pivot Points requires high, low and close values\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = period + 1; i <= yValLen + period; i += period) {\n                    slicedX = xVal.slice(i - period - 1, i);\n                    slicedY = yVal.slice(i - period - 1, i);\n                    slicedXLen = slicedX.length;\n                    endTimestamp = slicedX[slicedXLen - 1];\n                    pivot = this.getPivotAndHLC(slicedY);\n                    avg = placement(pivot);\n                    lastPP = PP.push([endTimestamp]\n                        .concat(avg));\n                    xData.push(endTimestamp);\n                    yData.push(PP[lastPP - 1].slice(1));\n                }\n                // We don't know exact position in ordinal axis\n                // So we use simple logic:\n                // Get first point in last range, calculate visible average range\n                // and multiply by period\n                this.endPoint = slicedX[0] + ((endTimestamp - slicedX[0]) /\n                    slicedXLen) * period;\n                return {\n                    values: PP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            getPivotAndHLC(values) {\n                const close = values[values.length - 1][3];\n                let high = -Infinity, low = Infinity;\n                values.forEach(function (p) {\n                    high = Math.max(high, p[1]);\n                    low = Math.min(low, p[2]);\n                });\n                const pivot = (high + low + close) / 3;\n                return [pivot, high, low, close];\n            }\n            standardPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    null,\n                    null,\n                    values[0] + diff,\n                    values[0] * 2 - values[2],\n                    values[0],\n                    values[0] * 2 - values[1],\n                    values[0] - diff,\n                    null,\n                    null\n                ];\n                return avg;\n            }\n            camarillaPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    values[3] + diff * 1.5,\n                    values[3] + diff * 1.25,\n                    values[3] + diff * 1.1666,\n                    values[3] + diff * 1.0833,\n                    values[0],\n                    values[3] - diff * 1.0833,\n                    values[3] - diff * 1.1666,\n                    values[3] - diff * 1.25,\n                    values[3] - diff * 1.5\n                ];\n                return avg;\n            }\n            fibonacciPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    null,\n                    values[0] + diff,\n                    values[0] + diff * 0.618,\n                    values[0] + diff * 0.382,\n                    values[0],\n                    values[0] - diff * 0.382,\n                    values[0] - diff * 0.618,\n                    values[0] - diff,\n                    null\n                ];\n                return avg;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Pivot points indicator. This series requires the `linkedTo` option to be\n         * set and should be loaded after `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/pivot-points\n         *         Pivot points\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/pivotpoints\n         * @optionparent plotOptions.pivotpoints\n         */\n        PivotPointsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 28,\n                /**\n                 * Algorithm used to calculate resistance and support lines based\n                 * on pivot points. Implemented algorithms: `'standard'`,\n                 * `'fibonacci'` and `'camarilla'`\n                 */\n                algorithm: 'standard'\n            },\n            marker: {\n                enabled: false\n            },\n            enableMouseTracking: false,\n            dataLabels: {\n                enabled: true,\n                format: '{point.pivotLine}'\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(PivotPointsIndicator.prototype, {\n            nameBase: 'Pivot Points',\n            pointArrayMap: ['R4', 'R3', 'R2', 'R1', 'P', 'S1', 'S2', 'S3', 'S4'],\n            pointValKey: 'P',\n            pointClass: PivotPointsPoint\n        });\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        SeriesRegistry.registerSeriesType('pivotpoints', PivotPointsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A pivot points indicator. If the [type](#series.pivotpoints.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.pivotpoints\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/pivotpoints\n         * @apioption series.pivotpoints\n         */\n        ''; // to include the above in the js output'\n\n        return PivotPointsIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PPO/PPOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge, error } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The PPO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ppo\n         *\n         * @augments Highcharts.Series\n         */\n        class PPOIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, index = params.index, \n                // 0- date, 1- Percentage Price Oscillator\n                PPO = [], xData = [], yData = [];\n                let oscillator, i;\n                // Check if periods are correct\n                if (periods.length !== 2 || periods[1] <= periods[0]) {\n                    error('Error: \"PPO requires two periods. Notice, first period ' +\n                        'should be lower than the second one.\"');\n                    return;\n                }\n                // Shorter Period EMA\n                const SPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[0]\n                });\n                // Longer Period EMA\n                const LPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[1]\n                });\n                // Check if ema is calculated properly, if not skip\n                if (!SPE || !LPE) {\n                    return;\n                }\n                const periodsOffset = periods[1] - periods[0];\n                for (i = 0; i < LPE.yData.length; i++) {\n                    oscillator = correctFloat((SPE.yData[i + periodsOffset] -\n                        LPE.yData[i]) /\n                        LPE.yData[i] *\n                        100);\n                    PPO.push([LPE.xData[i], oscillator]);\n                    xData.push(LPE.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: PPO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Percentage Price Oscillator. This series requires the\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/ppo\n         *         Percentage Price Oscillator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/ppo\n         * @optionparent plotOptions.ppo\n         */\n        PPOIndicator.defaultOptions = merge(EMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of Percentage Price Oscillator series\n             * points.\n             *\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * Periods for Percentage Price Oscillator calculations.\n                 *\n                 * @type    {Array<number>}\n                 * @default [12, 26]\n                 */\n                periods: [12, 26]\n            }\n        });\n        extend(PPOIndicator.prototype, {\n            nameBase: 'PPO',\n            nameComponents: ['periods']\n        });\n        SeriesRegistry.registerSeriesType('ppo', PPOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Percentage Price Oscillator` series. If the [type](#series.ppo.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ppo\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ppo\n         * @apioption series.ppo\n         */\n        ''; // to include the above in the js output\n\n        return PPOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ArrayUtilities.js', [], function () {\n        /**\n         *\n         *  (c) 2010-2024 Pawel Fus & Daniel Studencki\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get extremes of array filled by OHLC data.\n         *\n         * @private\n         *\n         * @param {Array<Array<number>>} arr\n         * Array of OHLC points (arrays).\n         *\n         * @param {number} minIndex\n         * Index of \"low\" value in point array.\n         *\n         * @param {number} maxIndex\n         * Index of \"high\" value in point array.\n         *\n         * @return {Array<number,number>}\n         * Returns array with min and max value.\n         */\n        function getArrayExtremes(arr, minIndex, maxIndex) {\n            return arr.reduce((prev, target) => [\n                Math.min(prev[0], target[minIndex]),\n                Math.max(prev[1], target[maxIndex])\n            ], [Number.MAX_VALUE, -Number.MAX_VALUE]);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const ArrayUtilities = {\n            getArrayExtremes\n        };\n\n        return ArrayUtilities;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PC/PCIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Color/Palettes.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, MultipleLinesComposition, Palettes, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Price Channel series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pc\n         *\n         * @augments Highcharts.Series\n         */\n        class PCIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-top line, 2-middle line, 3-bottom line\n                PC = [], \n                // middle line, top line and bottom line\n                low = 2, high = 1, xData = [], yData = [];\n                let ML, TL, BL, date, slicedY, extremes, i;\n                if (yValLen < period) {\n                    return;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    date = xVal[i - 1];\n                    slicedY = yVal.slice(i - period, i);\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    TL = extremes[1];\n                    BL = extremes[0];\n                    ML = (TL + BL) / 2;\n                    PC.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: PC,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Price channel (PC). This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/price-channel\n         *         Price Channel\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/price-channel\n         * @optionparent plotOptions.pc\n         */\n        PCIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Price channel Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      background fill between lines\n             *\n             * @type {Highcharts.Color}\n             * @apioption plotOptions.pc.fillColor\n             *\n             */\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 20\n            },\n            lineWidth: 1,\n            topLine: {\n                styles: {\n                    /**\n                     * Color of the top line. If not set, it's inherited from\n                     * [plotOptions.pc.color](#plotOptions.pc.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: Palettes.colors[2],\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            bottomLine: {\n                styles: {\n                    /**\n                     * Color of the bottom line. If not set, it's inherited from\n                     * [plotOptions.pc.color](#plotOptions.pc.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: Palettes.colors[8],\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(PCIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            nameBase: 'Price Channel',\n            nameComponents: ['period'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(PCIndicator);\n        SeriesRegistry.registerSeriesType('pc', PCIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Price channel indicator. If the [type](#series.pc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends      series,plotOptions.pc\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *               joinBy, keys, navigatorOptions, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *               showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/price-channel\n         * @apioption    series.pc\n         */\n        ''; // to include the above in the js output\n\n        return PCIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PriceEnvelopes/PriceEnvelopesIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Price Envelopes series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.priceenvelopes\n         *\n         * @augments Highcharts.Series\n         */\n        class PriceEnvelopesIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                super.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    topLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    bottomLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const period = params.period, topPercent = params.topBand, botPercent = params.bottomBand, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-top line, 2-middle line, 3-bottom line\n                PE = [], \n                // middle line, top line and bottom line\n                xData = [], yData = [];\n                let ML, TL, BL, date, slicedX, slicedY, point, i;\n                // Price envelopes requires close value\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    slicedX = xVal.slice(i - period, i);\n                    slicedY = yVal.slice(i - period, i);\n                    point = super.getValues({\n                        xData: slicedX,\n                        yData: slicedY\n                    }, params);\n                    date = point.xData[0];\n                    ML = point.yData[0];\n                    TL = ML * (1 + topPercent);\n                    BL = ML * (1 - botPercent);\n                    PE.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: PE,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Price envelopes indicator based on [SMA](#plotOptions.sma) calculations.\n         * This series requires the `linkedTo` option to be set and should be loaded\n         * after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/price-envelopes\n         *         Price envelopes\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/price-envelopes\n         * @optionparent plotOptions.priceenvelopes\n         */\n        PriceEnvelopesIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'\n            },\n            params: {\n                period: 20,\n                /**\n                 * Percentage above the moving average that should be displayed.\n                 * 0.1 means 110%. Relative to the calculated value.\n                 */\n                topBand: 0.1,\n                /**\n                 * Percentage below the moving average that should be displayed.\n                 * 0.1 means 90%. Relative to the calculated value.\n                 */\n                bottomBand: 0.1\n            },\n            /**\n             * Bottom line options.\n             */\n            bottomLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.priceenvelopes.color](\n                     * #plotOptions.priceenvelopes.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * Top line options.\n             *\n             * @extends plotOptions.priceenvelopes.bottomLine\n             */\n            topLine: {\n                styles: {\n                    lineWidth: 1\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n            /**\n             * Option for fill color between lines in Price Envelopes Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type      {Highcharts.Color}\n             * @since 11.0.0\n             * @apioption plotOptions.priceenvelopes.fillColor\n             *\n             */\n        });\n        extend(PriceEnvelopesIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            nameComponents: ['period', 'topBand', 'bottomBand'],\n            nameBase: 'Price envelopes',\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            parallelArrays: ['x', 'y', 'top', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(PriceEnvelopesIndicator);\n        SeriesRegistry.registerSeriesType('priceenvelopes', PriceEnvelopesIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A price envelopes indicator. If the [type](#series.priceenvelopes.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.priceenvelopes\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/price-envelopes\n         * @apioption series.priceenvelopes\n         */\n        ''; // to include the above in the js output\n\n        return PriceEnvelopesIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PSAR/PSARIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Parabolic SAR indicator for Highcharts Stock\n         *\n         *  (c) 2010-2024 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        function calculateDirection(previousDirection, low, high, PSAR) {\n            if ((previousDirection === 1 && low > PSAR) ||\n                (previousDirection === -1 && high > PSAR)) {\n                return 1;\n            }\n            return -1;\n        }\n        /* *\n         * Method for calculating acceleration factor\n         * dir - direction\n         * pDir - previous Direction\n         * eP - extreme point\n         * pEP - previous extreme point\n         * inc - increment for acceleration factor\n         * maxAcc - maximum acceleration factor\n         * initAcc - initial acceleration factor\n         */\n        function getAccelerationFactor(dir, pDir, eP, pEP, pAcc, inc, maxAcc, initAcc) {\n            if (dir === pDir) {\n                if (dir === 1 && (eP > pEP)) {\n                    return (pAcc === maxAcc) ? maxAcc : toFixed(pAcc + inc, 2);\n                }\n                if (dir === -1 && (eP < pEP)) {\n                    return (pAcc === maxAcc) ? maxAcc : toFixed(pAcc + inc, 2);\n                }\n                return pAcc;\n            }\n            return initAcc;\n        }\n        function getExtremePoint(high, low, previousDirection, previousExtremePoint) {\n            if (previousDirection === 1) {\n                return (high > previousExtremePoint) ? high : previousExtremePoint;\n            }\n            return (low < previousExtremePoint) ? low : previousExtremePoint;\n        }\n        function getEPMinusPSAR(EP, PSAR) {\n            return EP - PSAR;\n        }\n        function getAccelerationFactorMultiply(accelerationFactor, EPMinusSAR) {\n            return accelerationFactor * EPMinusSAR;\n        }\n        /* *\n         * Method for calculating PSAR\n         * pdir - previous direction\n         * sDir - second previous Direction\n         * PSAR - previous PSAR\n         * pACCMultiply - previous acceleration factor multiply\n         * sLow - second previous low\n         * pLow - previous low\n         * sHigh - second previous high\n         * pHigh - previous high\n         * pEP - previous extreme point\n         */\n        function getPSAR(pdir, sDir, PSAR, pACCMulti, sLow, pLow, pHigh, sHigh, pEP) {\n            if (pdir === sDir) {\n                if (pdir === 1) {\n                    return (PSAR + pACCMulti < Math.min(sLow, pLow)) ?\n                        PSAR + pACCMulti :\n                        Math.min(sLow, pLow);\n                }\n                return (PSAR + pACCMulti > Math.max(sHigh, pHigh)) ?\n                    PSAR + pACCMulti :\n                    Math.max(sHigh, pHigh);\n            }\n            return pEP;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Parabolic SAR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.psar\n         *\n         * @augments Highcharts.Series\n         */\n        class PSARIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.nameComponents = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const xVal = series.xData, yVal = series.yData, maxAccelerationFactor = params.maxAccelerationFactor, increment = params.increment, \n                // Set initial acc factor (for every new trend!)\n                initialAccelerationFactor = params.initialAccelerationFactor, decimals = params.decimals, index = params.index, PSARArr = [], xData = [], yData = [];\n                let accelerationFactor = params.initialAccelerationFactor, direction, \n                // Extreme point is the lowest low for falling and highest high\n                // for rising psar - and we are starting with falling\n                extremePoint = yVal[0][1], EPMinusPSAR, accelerationFactorMultiply, newDirection, previousDirection = 1, prevLow, prevPrevLow, prevHigh, prevPrevHigh, PSAR = yVal[0][2], newExtremePoint, high, low, ind;\n                if (index >= yVal.length) {\n                    return;\n                }\n                for (ind = 0; ind < index; ind++) {\n                    extremePoint = Math.max(yVal[ind][1], extremePoint);\n                    PSAR = Math.min(yVal[ind][2], toFixed(PSAR, decimals));\n                }\n                direction = (yVal[ind][1] > PSAR) ? 1 : -1;\n                EPMinusPSAR = getEPMinusPSAR(extremePoint, PSAR);\n                accelerationFactor = params.initialAccelerationFactor;\n                accelerationFactorMultiply = getAccelerationFactorMultiply(accelerationFactor, EPMinusPSAR);\n                PSARArr.push([xVal[index], PSAR]);\n                xData.push(xVal[index]);\n                yData.push(toFixed(PSAR, decimals));\n                for (ind = index + 1; ind < yVal.length; ind++) {\n                    prevLow = yVal[ind - 1][2];\n                    prevPrevLow = yVal[ind - 2][2];\n                    prevHigh = yVal[ind - 1][1];\n                    prevPrevHigh = yVal[ind - 2][1];\n                    high = yVal[ind][1];\n                    low = yVal[ind][2];\n                    // Null points break PSAR\n                    if (prevPrevLow !== null &&\n                        prevPrevHigh !== null &&\n                        prevLow !== null &&\n                        prevHigh !== null &&\n                        high !== null &&\n                        low !== null) {\n                        PSAR = getPSAR(direction, previousDirection, PSAR, accelerationFactorMultiply, prevPrevLow, prevLow, prevHigh, prevPrevHigh, extremePoint);\n                        newExtremePoint = getExtremePoint(high, low, direction, extremePoint);\n                        newDirection = calculateDirection(previousDirection, low, high, PSAR);\n                        accelerationFactor = getAccelerationFactor(newDirection, direction, newExtremePoint, extremePoint, accelerationFactor, increment, maxAccelerationFactor, initialAccelerationFactor);\n                        EPMinusPSAR = getEPMinusPSAR(newExtremePoint, PSAR);\n                        accelerationFactorMultiply = getAccelerationFactorMultiply(accelerationFactor, EPMinusPSAR);\n                        PSARArr.push([xVal[ind], toFixed(PSAR, decimals)]);\n                        xData.push(xVal[ind]);\n                        yData.push(toFixed(PSAR, decimals));\n                        previousDirection = direction;\n                        direction = newDirection;\n                        extremePoint = newExtremePoint;\n                    }\n                }\n                return {\n                    values: PSARArr,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Parabolic SAR. This series requires `linkedTo`\n         * option to be set and should be loaded\n         * after `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/psar\n         *         Parabolic SAR Indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/psar\n         * @optionparent plotOptions.psar\n         */\n        PSARIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            lineWidth: 0,\n            marker: {\n                enabled: true\n            },\n            states: {\n                hover: {\n                    lineWidthPlus: 0\n                }\n            },\n            /**\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * The initial value for acceleration factor.\n                 * Acceleration factor is starting with this value\n                 * and increases by specified increment each time\n                 * the extreme point makes a new high.\n                 * AF can reach a maximum of maxAccelerationFactor,\n                 * no matter how long the uptrend extends.\n                 */\n                initialAccelerationFactor: 0.02,\n                /**\n                 * The Maximum value for acceleration factor.\n                 * AF can reach a maximum of maxAccelerationFactor,\n                 * no matter how long the uptrend extends.\n                 */\n                maxAccelerationFactor: 0.2,\n                /**\n                 * Acceleration factor increases by increment each time\n                 * the extreme point makes a new high.\n                 *\n                 * @since 6.0.0\n                 */\n                increment: 0.02,\n                /**\n                 * Index from which PSAR is starting calculation\n                 *\n                 * @since 6.0.0\n                 */\n                index: 2,\n                /**\n                 * Number of maximum decimals that are used in PSAR calculations.\n                 *\n                 * @since 6.0.0\n                 */\n                decimals: 4\n            }\n        });\n        SeriesRegistry.registerSeriesType('psar', PSARIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `PSAR` series. If the [type](#series.psar.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.psar\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/psar\n         * @apioption series.psar\n         */\n        ''; // to include the above in the js output\n\n        return PSARIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ROC/ROCIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge, extend } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function populateAverage(xVal, yVal, i, period, index) {\n            /* Calculated as:\n\n               (Closing Price [today] - Closing Price [n days ago]) /\n                Closing Price [n days ago] * 100\n\n               Return y as null when avoiding division by zero */\n            let nDaysAgoY, rocY;\n            if (index < 0) {\n                // y data given as an array of values\n                nDaysAgoY = yVal[i - period];\n                rocY = nDaysAgoY ?\n                    (yVal[i] - nDaysAgoY) / nDaysAgoY * 100 :\n                    null;\n            }\n            else {\n                // y data given as an array of arrays and the index should be used\n                nDaysAgoY = yVal[i - period][index];\n                rocY = nDaysAgoY ?\n                    (yVal[i][index] - nDaysAgoY) / nDaysAgoY * 100 :\n                    null;\n            }\n            return [xVal[i], rocY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ROC series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.roc\n         *\n         * @augments Highcharts.Series\n         */\n        class ROCIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, ROC = [], xData = [], yData = [];\n                let i, index = -1, ROCPoint;\n                // Period is used as a number of time periods ago, so we need more\n                // (at least 1 more) data than the period value\n                if (xVal.length <= period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index;\n                }\n                // i = period <-- skip first N-points\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen; i++) {\n                    ROCPoint = populateAverage(xVal, yVal, i, period, index);\n                    ROC.push(ROCPoint);\n                    xData.push(ROCPoint[0]);\n                    yData.push(ROCPoint[1]);\n                }\n                return {\n                    values: ROC,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Rate of change indicator (ROC). The indicator value for each point\n         * is defined as:\n         *\n         * `(C - Cn) / Cn * 100`\n         *\n         * where: `C` is the close value of the point of the same x in the\n         * linked series and `Cn` is the close value of the point `n` periods\n         * ago. `n` is set through [period](#plotOptions.roc.params.period).\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/roc\n         *         Rate of change indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/roc\n         * @optionparent plotOptions.roc\n         */\n        ROCIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3,\n                period: 9\n            }\n        });\n        extend(ROCIndicator.prototype, {\n            nameBase: 'Rate of Change'\n        });\n        SeriesRegistry.registerSeriesType('roc', ROCIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `ROC` series. If the [type](#series.wma.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * Rate of change indicator (ROC). The indicator value for each point\n         * is defined as:\n         *\n         * `(C - Cn) / Cn * 100`\n         *\n         * where: `C` is the close value of the point of the same x in the\n         * linked series and `Cn` is the close value of the point `n` periods\n         * ago. `n` is set through [period](#series.roc.params.period).\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @extends   series,plotOptions.roc\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/roc\n         * @apioption series.roc\n         */\n        ''; // to include the above in the js output\n\n        return ROCIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/RSI/RSIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isNumber, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The RSI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.rsi\n         *\n         * @augments Highcharts.Series\n         */\n        class RSIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, decimals = params.decimals, \n                // RSI starts calculations from the second point\n                // Cause we need to calculate change between two points\n                RSI = [], xData = [], yData = [];\n                let gain = 0, loss = 0, index = params.index, range = 1, RSIPoint, change, avgGain, avgLoss, i, values;\n                if ((xVal.length < period)) {\n                    return;\n                }\n                if (isNumber(yVal[0])) {\n                    values = yVal;\n                }\n                else {\n                    // in case of the situation, where the series type has data length\n                    // longer then 4 (HLC, range), this ensures that we are not trying\n                    // to reach the index out of bounds\n                    index = Math.min(index, yVal[0].length - 1);\n                    values = yVal\n                        .map((value) => value[index]);\n                }\n                // Calculate changes for first N points\n                while (range < period) {\n                    change = toFixed(values[range] - values[range - 1], decimals);\n                    if (change > 0) {\n                        gain += change;\n                    }\n                    else {\n                        loss += Math.abs(change);\n                    }\n                    range++;\n                }\n                // Average for first n-1 points:\n                avgGain = toFixed(gain / (period - 1), decimals);\n                avgLoss = toFixed(loss / (period - 1), decimals);\n                for (i = range; i < yValLen; i++) {\n                    change = toFixed(values[i] - values[i - 1], decimals);\n                    if (change > 0) {\n                        gain = change;\n                        loss = 0;\n                    }\n                    else {\n                        gain = 0;\n                        loss = Math.abs(change);\n                    }\n                    // Calculate smoothed averages, RS, RSI values:\n                    avgGain = toFixed((avgGain * (period - 1) + gain) / period, decimals);\n                    avgLoss = toFixed((avgLoss * (period - 1) + loss) / period, decimals);\n                    // If average-loss is equal zero, then by definition RSI is set\n                    // to 100:\n                    if (avgLoss === 0) {\n                        RSIPoint = 100;\n                        // If average-gain is equal zero, then by definition RSI is set\n                        // to 0:\n                    }\n                    else if (avgGain === 0) {\n                        RSIPoint = 0;\n                    }\n                    else {\n                        RSIPoint = toFixed(100 - (100 / (1 + (avgGain / avgLoss))), decimals);\n                    }\n                    RSI.push([xVal[i], RSIPoint]);\n                    xData.push(xVal[i]);\n                    yData.push(RSIPoint);\n                }\n                return {\n                    values: RSI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Relative strength index (RSI) technical indicator. This series\n         * requires the `linkedTo` option to be set and should be loaded after\n         * the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/rsi\n         *         RSI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/rsi\n         * @optionparent plotOptions.rsi\n         */\n        RSIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                decimals: 4,\n                index: 3\n            }\n        });\n        SeriesRegistry.registerSeriesType('rsi', RSIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `RSI` series. If the [type](#series.rsi.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.rsi\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/rsi\n         * @apioption series.rsi\n         */\n        ''; // to include the above in the js output\n\n        return RSIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Stochastic/StochasticIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Stochastic series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.stochastic\n         *\n         * @augments Highcharts.Series\n         */\n        class StochasticIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                super.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    smoothedLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const periodK = params.periods[0], periodD = params.periods[1], xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-%K, 2-%D\n                SO = [], xData = [], yData = [], close = 3, low = 2, high = 1;\n                let slicedY, CL, HL, LL, K, D = null, points, extremes, i;\n                // Stochastic requires close value\n                if (yValLen < periodK ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // If the value of initial points is constant, wait until it changes\n                // to calculate correct Stochastic values\n                let constantValues = true, j = 0;\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = periodK - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - periodK + 1, i + 1);\n                    // Calculate %K\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    LL = extremes[0]; // Lowest low in %K periods\n                    CL = yVal[i][close] - LL;\n                    HL = extremes[1] - LL;\n                    K = CL / HL * 100;\n                    if (isNaN(K) && constantValues) {\n                        j++;\n                        continue;\n                    }\n                    else if (constantValues && !isNaN(K)) {\n                        constantValues = false;\n                    }\n                    const length = xData.push(xVal[i]);\n                    // If N-period previous values are constant which results in NaN %K,\n                    // we need to use previous %K value if it is a number,\n                    // otherwise we should use null\n                    if (isNaN(K)) {\n                        yData.push([\n                            yData[length - 2] &&\n                                typeof yData[length - 2][0] === 'number' ?\n                                yData[length - 2][0] : null,\n                            null\n                        ]);\n                    }\n                    else {\n                        yData.push([K, null]);\n                    }\n                    // Calculate smoothed %D, which is SMA of %K\n                    if (i >= j + (periodK - 1) + (periodD - 1)) {\n                        points = super.getValues({\n                            xData: xData.slice(-periodD),\n                            yData: yData.slice(-periodD)\n                        }, {\n                            period: periodD\n                        });\n                        D = points.yData[0];\n                    }\n                    SO.push([xVal[i], K, D]);\n                    yData[length - 1][1] = D;\n                }\n                return {\n                    values: SO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Stochastic oscillator. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/stochastic\n         *         Stochastic oscillator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/stochastic\n         * @optionparent plotOptions.stochastic\n         */\n        StochasticIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * Periods for Stochastic oscillator: [%K, %D].\n                 *\n                 * @type    {Array<number,number>}\n                 * @default [14, 3]\n                 */\n                periods: [14, 3]\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'\n            },\n            /**\n             * Smoothed line options.\n             */\n            smoothedLine: {\n                /**\n                 * Styles for a smoothed line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.stochastic.color\n                     * ](#plotOptions.stochastic.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(StochasticIndicator.prototype, {\n            areaLinesNames: [],\n            nameComponents: ['periods'],\n            nameBase: 'Stochastic',\n            pointArrayMap: ['y', 'smoothed'],\n            parallelArrays: ['x', 'y', 'smoothed'],\n            pointValKey: 'y',\n            linesApiNames: ['smoothedLine']\n        });\n        MultipleLinesComposition.compose(StochasticIndicator);\n        SeriesRegistry.registerSeriesType('stochastic', StochasticIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Stochastic indicator. If the [type](#series.stochastic.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.stochastic\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/stochastic\n         * @apioption series.stochastic\n         */\n        ''; // to include the above in the js output\n\n        return StochasticIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/SlowStochastic/SlowStochasticIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator, stochastic: StochasticIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Slow Stochastic series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.slowstochastic\n         *\n         * @augments Highcharts.Series\n         */\n        class SlowStochasticIndicator extends StochasticIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, fastValues = super.getValues.call(this, series, params), slowValues = {\n                    values: [],\n                    xData: [],\n                    yData: []\n                };\n                if (!fastValues) {\n                    return;\n                }\n                slowValues.xData = fastValues.xData.slice(periods[1] - 1);\n                const fastYData = fastValues.yData.slice(periods[1] - 1);\n                // Get SMA(%D)\n                const smoothedValues = SMAIndicator.prototype.getValues.call(this, {\n                    xData: slowValues.xData,\n                    yData: fastYData\n                }, {\n                    index: 1,\n                    period: periods[2]\n                });\n                if (!smoothedValues) {\n                    return;\n                }\n                // Format data\n                for (let i = 0, xDataLen = slowValues.xData.length; i < xDataLen; i++) {\n                    slowValues.yData[i] = [\n                        fastYData[i][1],\n                        smoothedValues.yData[i - periods[2] + 1] || null\n                    ];\n                    slowValues.values[i] = [\n                        slowValues.xData[i],\n                        fastYData[i][1],\n                        smoothedValues.yData[i - periods[2] + 1] || null\n                    ];\n                }\n                return slowValues;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Slow Stochastic oscillator. This series requires the `linkedTo` option\n         * to be set and should be loaded after `stock/indicators/indicators.js`\n         * and `stock/indicators/stochastic.js` files.\n         *\n         * @sample stock/indicators/slow-stochastic\n         *         Slow Stochastic oscillator\n         *\n         * @extends      plotOptions.stochastic\n         * @since        8.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/stochastic\n         * @requires     stock/indicators/slowstochastic\n         * @optionparent plotOptions.slowstochastic\n         */\n        SlowStochasticIndicator.defaultOptions = merge(StochasticIndicator.defaultOptions, {\n            params: {\n                /**\n                 * Periods for Slow Stochastic oscillator: [%K, %D, SMA(%D)].\n                 *\n                 * @type    {Array<number,number,number>}\n                 * @default [14, 3, 3]\n                 */\n                periods: [14, 3, 3]\n            }\n        });\n        extend(SlowStochasticIndicator.prototype, {\n            nameBase: 'Slow Stochastic'\n        });\n        SeriesRegistry.registerSeriesType('slowstochastic', SlowStochasticIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Slow Stochastic indicator. If the [type](#series.slowstochastic.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.slowstochastic\n         * @since     8.0.0\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/stochastic\n         * @requires  stock/indicators/slowstochastic\n         * @apioption series.slowstochastic\n         */\n        ''; // to include the above in the js output\n\n        return SlowStochasticIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Supertrend/SupertrendIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { atr: ATRIndicator, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { addEvent, correctFloat, isArray, extend, merge, objectEach } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function createPointObj(mainSeries, index, close) {\n            return {\n                index: index,\n                close: mainSeries.yData[index][close],\n                x: mainSeries.xData[index]\n            };\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Supertrend series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.supertrend\n         *\n         * @augments Highcharts.Series\n         */\n        class SupertrendIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                const indicator = this;\n                super.init.apply(indicator, arguments);\n                // Only after series are linked add some additional logic/properties.\n                const unbinder = addEvent(this.chart.constructor, 'afterLinkSeries', () => {\n                    // Protection for a case where the indicator is being updated,\n                    // for a brief moment the indicator is deleted.\n                    if (indicator.options) {\n                        const options = indicator.options, parentOptions = indicator.linkedParent.options;\n                        // Indicator cropThreshold has to be equal linked series one\n                        // reduced by period due to points comparison in drawGraph\n                        // (#9787)\n                        options.cropThreshold = (parentOptions.cropThreshold -\n                            (options.params.period - 1));\n                    }\n                    unbinder();\n                }, {\n                    order: 1\n                });\n            }\n            drawGraph() {\n                const indicator = this, indicOptions = indicator.options, \n                // Series that indicator is linked to\n                mainSeries = indicator.linkedParent, mainLinePoints = (mainSeries ? mainSeries.points : []), indicPoints = indicator.points, indicPath = indicator.graph, \n                // Points offset between lines\n                tempOffset = mainLinePoints.length - indicPoints.length, offset = tempOffset > 0 ? tempOffset : 0, \n                // @todo: fix when ichi-moku indicator is merged to master.\n                gappedExtend = {\n                    options: {\n                        gapSize: indicOptions.gapSize\n                    }\n                }, \n                // Sorted supertrend points array\n                groupedPoints = {\n                    top: [],\n                    bottom: [],\n                    intersect: [] // Change trend line points\n                }, \n                // Options for trend lines\n                supertrendLineOptions = {\n                    top: {\n                        styles: {\n                            lineWidth: indicOptions.lineWidth,\n                            lineColor: (indicOptions.fallingTrendColor ||\n                                indicOptions.color),\n                            dashStyle: indicOptions.dashStyle\n                        }\n                    },\n                    bottom: {\n                        styles: {\n                            lineWidth: indicOptions.lineWidth,\n                            lineColor: (indicOptions.risingTrendColor ||\n                                indicOptions.color),\n                            dashStyle: indicOptions.dashStyle\n                        }\n                    },\n                    intersect: indicOptions.changeTrendLine\n                }, close = 3;\n                let // Supertrend line point\n                point, \n                // Supertrend line next point (has smaller x pos than point)\n                nextPoint, \n                // Main series points\n                mainPoint, nextMainPoint, \n                // Used when supertrend and main points are shifted\n                // relative to each other\n                prevMainPoint, prevPrevMainPoint, \n                // Used when particular point color is set\n                pointColor, \n                // Temporary points that fill groupedPoints array\n                newPoint, newNextPoint, indicPointsLen = indicPoints.length;\n                // Loop which sort supertrend points\n                while (indicPointsLen--) {\n                    point = indicPoints[indicPointsLen];\n                    nextPoint = indicPoints[indicPointsLen - 1];\n                    mainPoint = mainLinePoints[indicPointsLen - 1 + offset];\n                    nextMainPoint = mainLinePoints[indicPointsLen - 2 + offset];\n                    prevMainPoint = mainLinePoints[indicPointsLen + offset];\n                    prevPrevMainPoint = mainLinePoints[indicPointsLen + offset + 1];\n                    pointColor = point.options.color;\n                    newPoint = {\n                        x: point.x,\n                        plotX: point.plotX,\n                        plotY: point.plotY,\n                        isNull: false\n                    };\n                    // When mainPoint is the last one (left plot area edge)\n                    // but supertrend has additional one\n                    if (!nextMainPoint &&\n                        mainPoint && mainSeries.yData[mainPoint.index - 1]) {\n                        nextMainPoint = createPointObj(mainSeries, mainPoint.index - 1, close);\n                    }\n                    // When prevMainPoint is the last one (right plot area edge)\n                    // but supertrend has additional one (and points are shifted)\n                    if (!prevPrevMainPoint &&\n                        prevMainPoint && mainSeries.yData[prevMainPoint.index + 1]) {\n                        prevPrevMainPoint = createPointObj(mainSeries, prevMainPoint.index + 1, close);\n                    }\n                    // When points are shifted (right or left plot area edge)\n                    if (!mainPoint &&\n                        nextMainPoint && mainSeries.yData[nextMainPoint.index + 1]) {\n                        mainPoint = createPointObj(mainSeries, nextMainPoint.index + 1, close);\n                    }\n                    else if (!mainPoint &&\n                        prevMainPoint && mainSeries.yData[prevMainPoint.index - 1]) {\n                        mainPoint = createPointObj(mainSeries, prevMainPoint.index - 1, close);\n                    }\n                    // Check if points are shifted relative to each other\n                    if (point &&\n                        mainPoint &&\n                        prevMainPoint &&\n                        nextMainPoint &&\n                        point.x !== mainPoint.x) {\n                        if (point.x === prevMainPoint.x) {\n                            nextMainPoint = mainPoint;\n                            mainPoint = prevMainPoint;\n                        }\n                        else if (point.x === nextMainPoint.x) {\n                            mainPoint = nextMainPoint;\n                            nextMainPoint = {\n                                close: mainSeries.yData[mainPoint.index - 1][close],\n                                x: mainSeries.xData[mainPoint.index - 1]\n                            };\n                        }\n                        else if (prevPrevMainPoint && point.x === prevPrevMainPoint.x) {\n                            mainPoint = prevPrevMainPoint;\n                            nextMainPoint = prevMainPoint;\n                        }\n                    }\n                    if (nextPoint && nextMainPoint && mainPoint) {\n                        newNextPoint = {\n                            x: nextPoint.x,\n                            plotX: nextPoint.plotX,\n                            plotY: nextPoint.plotY,\n                            isNull: false\n                        };\n                        if (point.y >= mainPoint.close &&\n                            nextPoint.y >= nextMainPoint.close) {\n                            point.color = (pointColor || indicOptions.fallingTrendColor ||\n                                indicOptions.color);\n                            groupedPoints.top.push(newPoint);\n                        }\n                        else if (point.y < mainPoint.close &&\n                            nextPoint.y < nextMainPoint.close) {\n                            point.color = (pointColor || indicOptions.risingTrendColor ||\n                                indicOptions.color);\n                            groupedPoints.bottom.push(newPoint);\n                        }\n                        else {\n                            groupedPoints.intersect.push(newPoint);\n                            groupedPoints.intersect.push(newNextPoint);\n                            // Additional null point to make a gap in line\n                            groupedPoints.intersect.push(merge(newNextPoint, {\n                                isNull: true\n                            }));\n                            if (point.y >= mainPoint.close &&\n                                nextPoint.y < nextMainPoint.close) {\n                                point.color = (pointColor || indicOptions.fallingTrendColor ||\n                                    indicOptions.color);\n                                nextPoint.color = (pointColor || indicOptions.risingTrendColor ||\n                                    indicOptions.color);\n                                groupedPoints.top.push(newPoint);\n                                groupedPoints.top.push(merge(newNextPoint, {\n                                    isNull: true\n                                }));\n                            }\n                            else if (point.y < mainPoint.close &&\n                                nextPoint.y >= nextMainPoint.close) {\n                                point.color = (pointColor || indicOptions.risingTrendColor ||\n                                    indicOptions.color);\n                                nextPoint.color = (pointColor || indicOptions.fallingTrendColor ||\n                                    indicOptions.color);\n                                groupedPoints.bottom.push(newPoint);\n                                groupedPoints.bottom.push(merge(newNextPoint, {\n                                    isNull: true\n                                }));\n                            }\n                        }\n                    }\n                    else if (mainPoint) {\n                        if (point.y >= mainPoint.close) {\n                            point.color = (pointColor || indicOptions.fallingTrendColor ||\n                                indicOptions.color);\n                            groupedPoints.top.push(newPoint);\n                        }\n                        else {\n                            point.color = (pointColor || indicOptions.risingTrendColor ||\n                                indicOptions.color);\n                            groupedPoints.bottom.push(newPoint);\n                        }\n                    }\n                }\n                // Generate lines:\n                objectEach(groupedPoints, function (values, lineName) {\n                    indicator.points = values;\n                    indicator.options = merge(supertrendLineOptions[lineName].styles, gappedExtend);\n                    indicator.graph = indicator['graph' + lineName + 'Line'];\n                    SMAIndicator.prototype.drawGraph.call(indicator);\n                    // Now save line\n                    indicator['graph' + lineName + 'Line'] = indicator.graph;\n                });\n                // Restore options:\n                indicator.points = indicPoints;\n                indicator.options = indicOptions;\n                indicator.graph = indicPath;\n            }\n            // Supertrend (Multiplier, Period) Formula:\n            // BASIC UPPERBAND = (HIGH + LOW) / 2 + Multiplier * ATR(Period)\n            // BASIC LOWERBAND = (HIGH + LOW) / 2 - Multiplier * ATR(Period)\n            // FINAL UPPERBAND =\n            //     IF(\n            //      Current BASICUPPERBAND  < Previous FINAL UPPERBAND AND\n            //      Previous Close > Previous FINAL UPPERBAND\n            //     ) THEN (Current BASIC UPPERBAND)\n            //     ELSE (Previous FINALUPPERBAND)\n            // FINAL LOWERBAND =\n            //     IF(\n            //      Current BASIC LOWERBAND  > Previous FINAL LOWERBAND AND\n            //      Previous Close < Previous FINAL LOWERBAND\n            //     ) THEN (Current BASIC LOWERBAND)\n            //     ELSE (Previous FINAL LOWERBAND)\n            // SUPERTREND =\n            //     IF(\n            //      Previous Supertrend == Previous FINAL UPPERBAND AND\n            //      Current Close < Current FINAL UPPERBAND\n            //     ) THAN Current FINAL UPPERBAND\n            //     ELSE IF(\n            //      Previous Supertrend == Previous FINAL LOWERBAND AND\n            //      Current Close < Current FINAL LOWERBAND\n            //     ) THAN Current FINAL UPPERBAND\n            //     ELSE IF(\n            //      Previous Supertrend == Previous FINAL UPPERBAND AND\n            //      Current Close > Current FINAL UPPERBAND\n            //     ) THAN Current FINAL LOWERBAND\n            //     ELSE IF(\n            //      Previous Supertrend == Previous FINAL LOWERBAND AND\n            //      Current Close > Current FINAL LOWERBAND\n            //     ) THAN Current FINAL LOWERBAND\n            getValues(series, params) {\n                const period = params.period, multiplier = params.multiplier, xVal = series.xData, yVal = series.yData, \n                // 0- date, 1- Supertrend indicator\n                st = [], xData = [], yData = [], close = 3, low = 2, high = 1, periodsOffset = (period === 0) ? 0 : period - 1, finalUp = [], finalDown = [];\n                let atrData = [], basicUp, basicDown, supertrend, prevFinalUp, prevFinalDown, prevST, // previous Supertrend\n                prevY, y, i;\n                if ((xVal.length <= period) || !isArray(yVal[0]) ||\n                    yVal[0].length !== 4 || period < 0) {\n                    return;\n                }\n                atrData = ATRIndicator.prototype.getValues.call(this, series, {\n                    period: period\n                }).yData;\n                for (i = 0; i < atrData.length; i++) {\n                    y = yVal[periodsOffset + i];\n                    prevY = yVal[periodsOffset + i - 1] || [];\n                    prevFinalUp = finalUp[i - 1];\n                    prevFinalDown = finalDown[i - 1];\n                    prevST = yData[i - 1];\n                    if (i === 0) {\n                        prevFinalUp = prevFinalDown = prevST = 0;\n                    }\n                    basicUp = correctFloat((y[high] + y[low]) / 2 + multiplier * atrData[i]);\n                    basicDown = correctFloat((y[high] + y[low]) / 2 - multiplier * atrData[i]);\n                    if ((basicUp < prevFinalUp) ||\n                        (prevY[close] > prevFinalUp)) {\n                        finalUp[i] = basicUp;\n                    }\n                    else {\n                        finalUp[i] = prevFinalUp;\n                    }\n                    if ((basicDown > prevFinalDown) ||\n                        (prevY[close] < prevFinalDown)) {\n                        finalDown[i] = basicDown;\n                    }\n                    else {\n                        finalDown[i] = prevFinalDown;\n                    }\n                    if (prevST === prevFinalUp && y[close] < finalUp[i] ||\n                        prevST === prevFinalDown && y[close] < finalDown[i]) {\n                        supertrend = finalUp[i];\n                    }\n                    else if (prevST === prevFinalUp && y[close] > finalUp[i] ||\n                        prevST === prevFinalDown && y[close] > finalDown[i]) {\n                        supertrend = finalDown[i];\n                    }\n                    st.push([xVal[periodsOffset + i], supertrend]);\n                    xData.push(xVal[periodsOffset + i]);\n                    yData.push(supertrend);\n                }\n                return {\n                    values: st,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Supertrend indicator. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js` and\n         * `stock/indicators/sma.js`.\n         *\n         * @sample {highstock} stock/indicators/supertrend\n         *         Supertrend indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, cropThreshold, negativeColor, colorAxis, joinBy,\n         *               keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking, threshold\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/supertrend\n         * @optionparent plotOptions.supertrend\n         */\n        SupertrendIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of Supertrend indicator series points.\n             *\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * Multiplier for Supertrend Indicator.\n                 */\n                multiplier: 3,\n                /**\n                 * The base period for indicator Supertrend Indicator calculations.\n                 * This is the number of data points which are taken into account\n                 * for the indicator calculations.\n                 */\n                period: 10\n            },\n            /**\n             * Color of the Supertrend series line that is beneath the main series.\n             *\n             * @sample {highstock} stock/indicators/supertrend/\n             *         Example with risingTrendColor\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            risingTrendColor: \"#06b535\" /* Palette.positiveColor */,\n            /**\n             * Color of the Supertrend series line that is above the main series.\n             *\n             * @sample {highstock} stock/indicators/supertrend/\n             *         Example with fallingTrendColor\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            fallingTrendColor: \"#f21313\" /* Palette.negativeColor */,\n            /**\n             * The styles for the Supertrend line that intersect main series.\n             *\n             * @sample {highstock} stock/indicators/supertrend/\n             *         Example with changeTrendLine\n             */\n            changeTrendLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: \"#333333\" /* Palette.neutralColor80 */,\n                    /**\n                     * The dash or dot style of the grid lines. For possible\n                     * values, see\n                     * [this demonstration](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-dashstyle-all/).\n                     *\n                     * @sample {highcharts} highcharts/yaxis/gridlinedashstyle/\n                     *         Long dashes\n                     * @sample {highstock} stock/xaxis/gridlinedashstyle/\n                     *         Long dashes\n                     *\n                     * @type  {Highcharts.DashStyleValue}\n                     * @since 7.0.0\n                     */\n                    dashStyle: 'LongDash'\n                }\n            }\n        });\n        extend(SupertrendIndicator.prototype, {\n            nameBase: 'Supertrend',\n            nameComponents: ['multiplier', 'period']\n        });\n        SeriesRegistry.registerSeriesType('supertrend', SupertrendIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Supertrend indicator` series. If the [type](#series.supertrend.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.supertrend\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, cropThreshold, data, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, negativeColor, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *            showInNavigator, stacking, threshold\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/supertrend\n         * @apioption series.supertrend\n         */\n        ''; // to include the above in the js output\n\n        return SupertrendIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VBP/VBPPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        const { sma: { prototype: { pointClass: SMAPoint } } } = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class VBPPoint extends SMAPoint {\n            // Required for destroying negative part of volume\n            destroy() {\n                // @todo: this.negativeGraphic doesn't seem to be used anywhere\n                if (this.negativeGraphic) {\n                    this.negativeGraphic = this.negativeGraphic.destroy();\n                }\n                super.destroy.apply(this, arguments);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return VBPPoint;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VBP/VBPIndicator.js', [_modules['Stock/Indicators/VBP/VBPPoint.js'], _modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (VBPPoint, A, H, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Paweł Dalek\n         *\n         *  Volume By Price (VBP) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { animObject } = A;\n        const { noop } = H;\n        const { column: { prototype: columnProto }, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { addEvent, arrayMax, arrayMin, correctFloat, defined, error, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const abs = Math.abs;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils\n        /**\n         * @private\n         */\n        function arrayExtremesOHLC(data) {\n            const dataLength = data.length;\n            let min = data[0][3], max = min, i = 1, currentPoint;\n            for (; i < dataLength; i++) {\n                currentPoint = data[i][3];\n                if (currentPoint < min) {\n                    min = currentPoint;\n                }\n                if (currentPoint > max) {\n                    max = currentPoint;\n                }\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Volume By Price (VBP) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.vbp\n         *\n         * @augments Highcharts.Series\n         */\n        class VBPIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init(chart, options) {\n                const indicator = this;\n                // series.update() sends data that is not necessary\n                // as everything is calculated in getValues(), #17007\n                delete options.data;\n                super.init.apply(indicator, arguments);\n                // Only after series are linked add some additional logic/properties.\n                const unbinder = addEvent(this.chart.constructor, 'afterLinkSeries', function () {\n                    // Protection for a case where the indicator is being updated,\n                    // for a brief moment the indicator is deleted.\n                    if (indicator.options) {\n                        const params = indicator.options.params, baseSeries = indicator.linkedParent, volumeSeries = chart.get(params.volumeSeriesID);\n                        indicator.addCustomEvents(baseSeries, volumeSeries);\n                    }\n                    unbinder();\n                }, {\n                    order: 1\n                });\n                return indicator;\n            }\n            // Adds events related with removing series\n            addCustomEvents(baseSeries, volumeSeries) {\n                const indicator = this, toEmptyIndicator = () => {\n                    indicator.chart.redraw();\n                    indicator.setData([]);\n                    indicator.zoneStarts = [];\n                    if (indicator.zoneLinesSVG) {\n                        indicator.zoneLinesSVG = indicator.zoneLinesSVG.destroy();\n                    }\n                };\n                // If base series is deleted, indicator series data is filled with\n                // an empty array\n                indicator.dataEventsToUnbind.push(addEvent(baseSeries, 'remove', function () {\n                    toEmptyIndicator();\n                }));\n                // If volume series is deleted, indicator series data is filled with\n                // an empty array\n                if (volumeSeries) {\n                    indicator.dataEventsToUnbind.push(addEvent(volumeSeries, 'remove', function () {\n                        toEmptyIndicator();\n                    }));\n                }\n                return indicator;\n            }\n            // Initial animation\n            animate(init) {\n                const series = this, inverted = series.chart.inverted, group = series.group, attr = {};\n                if (!init && group) {\n                    const position = inverted ? series.yAxis.top : series.xAxis.left;\n                    if (inverted) {\n                        group['forceAnimate:translateY'] = true;\n                        attr.translateY = position;\n                    }\n                    else {\n                        group['forceAnimate:translateX'] = true;\n                        attr.translateX = position;\n                    }\n                    group.animate(attr, extend(animObject(series.options.animation), {\n                        step: function (val, fx) {\n                            series.group.attr({\n                                scaleX: Math.max(0.001, fx.pos)\n                            });\n                        }\n                    }));\n                }\n            }\n            drawPoints() {\n                const indicator = this;\n                if (indicator.options.volumeDivision.enabled) {\n                    indicator.posNegVolume(true, true);\n                    columnProto.drawPoints.apply(indicator, arguments);\n                    indicator.posNegVolume(false, false);\n                }\n                columnProto.drawPoints.apply(indicator, arguments);\n            }\n            // Function responsible for dividing volume into positive and negative\n            posNegVolume(initVol, pos) {\n                const indicator = this, signOrder = pos ?\n                    ['positive', 'negative'] :\n                    ['negative', 'positive'], volumeDivision = indicator.options.volumeDivision, pointLength = indicator.points.length;\n                let posWidths = [], negWidths = [], i = 0, pointWidth, priceZone, wholeVol, point;\n                if (initVol) {\n                    indicator.posWidths = posWidths;\n                    indicator.negWidths = negWidths;\n                }\n                else {\n                    posWidths = indicator.posWidths;\n                    negWidths = indicator.negWidths;\n                }\n                for (; i < pointLength; i++) {\n                    point = indicator.points[i];\n                    point[signOrder[0] + 'Graphic'] = point.graphic;\n                    point.graphic = point[signOrder[1] + 'Graphic'];\n                    if (initVol) {\n                        pointWidth = point.shapeArgs.width;\n                        priceZone = indicator.priceZones[i];\n                        wholeVol = priceZone.wholeVolumeData;\n                        if (wholeVol) {\n                            posWidths.push(pointWidth / wholeVol * priceZone.positiveVolumeData);\n                            negWidths.push(pointWidth / wholeVol * priceZone.negativeVolumeData);\n                        }\n                        else {\n                            posWidths.push(0);\n                            negWidths.push(0);\n                        }\n                    }\n                    point.color = pos ?\n                        volumeDivision.styles.positiveColor :\n                        volumeDivision.styles.negativeColor;\n                    point.shapeArgs.width = pos ?\n                        indicator.posWidths[i] :\n                        indicator.negWidths[i];\n                    point.shapeArgs.x = pos ?\n                        point.shapeArgs.x :\n                        indicator.posWidths[i];\n                }\n            }\n            translate() {\n                const indicator = this, options = indicator.options, chart = indicator.chart, yAxis = indicator.yAxis, yAxisMin = yAxis.min, zoneLinesOptions = indicator.options.zoneLines, priceZones = (indicator.priceZones);\n                let yBarOffset = 0, volumeDataArray, maxVolume, primalBarWidth, barHeight, barHeightP, oldBarHeight, barWidth, pointPadding, chartPlotTop, barX, barY;\n                columnProto.translate.apply(indicator);\n                const indicatorPoints = indicator.points;\n                // Do translate operation when points exist\n                if (indicatorPoints.length) {\n                    pointPadding = options.pointPadding < 0.5 ?\n                        options.pointPadding :\n                        0.1;\n                    volumeDataArray = indicator.volumeDataArray;\n                    maxVolume = arrayMax(volumeDataArray);\n                    primalBarWidth = chart.plotWidth / 2;\n                    chartPlotTop = chart.plotTop;\n                    barHeight = abs(yAxis.toPixels(yAxisMin) -\n                        yAxis.toPixels(yAxisMin + indicator.rangeStep));\n                    oldBarHeight = abs(yAxis.toPixels(yAxisMin) -\n                        yAxis.toPixels(yAxisMin + indicator.rangeStep));\n                    if (pointPadding) {\n                        barHeightP = abs(barHeight * (1 - 2 * pointPadding));\n                        yBarOffset = abs((barHeight - barHeightP) / 2);\n                        barHeight = abs(barHeightP);\n                    }\n                    indicatorPoints.forEach(function (point, index) {\n                        barX = point.barX = point.plotX = 0;\n                        barY = point.plotY = (yAxis.toPixels(priceZones[index].start) -\n                            chartPlotTop -\n                            (yAxis.reversed ?\n                                (barHeight - oldBarHeight) :\n                                barHeight) -\n                            yBarOffset);\n                        barWidth = correctFloat(primalBarWidth *\n                            priceZones[index].wholeVolumeData / maxVolume);\n                        point.pointWidth = barWidth;\n                        point.shapeArgs = indicator.crispCol.apply(// eslint-disable-line no-useless-call\n                        indicator, [barX, barY, barWidth, barHeight]);\n                        point.volumeNeg = priceZones[index].negativeVolumeData;\n                        point.volumePos = priceZones[index].positiveVolumeData;\n                        point.volumeAll = priceZones[index].wholeVolumeData;\n                    });\n                    if (zoneLinesOptions.enabled) {\n                        indicator.drawZones(chart, yAxis, indicator.zoneStarts, zoneLinesOptions.styles);\n                    }\n                }\n            }\n            getExtremes() {\n                const prevCompare = this.options.compare, prevCumulative = this.options.cumulative;\n                let ret;\n                // Temporarily disable cumulative and compare while getting the extremes\n                if (this.options.compare) {\n                    this.options.compare = void 0;\n                    ret = super.getExtremes();\n                    this.options.compare = prevCompare;\n                }\n                else if (this.options.cumulative) {\n                    this.options.cumulative = false;\n                    ret = super.getExtremes();\n                    this.options.cumulative = prevCumulative;\n                }\n                else {\n                    ret = super.getExtremes();\n                }\n                return ret;\n            }\n            getValues(series, params) {\n                const indicator = this, xValues = series.processedXData, yValues = series.processedYData, chart = indicator.chart, ranges = params.ranges, VBP = [], xData = [], yData = [], volumeSeries = chart.get(params.volumeSeriesID);\n                // Checks if base series exists\n                if (!series.chart) {\n                    error('Base series not found! In case it has been removed, add ' +\n                        'a new one.', true, chart);\n                    return;\n                }\n                // Checks if volume series exists and if it has data\n                if (!volumeSeries ||\n                    !volumeSeries.processedXData.length) {\n                    const errorMessage = volumeSeries && !volumeSeries.processedXData.length ?\n                        ' does not contain any data.' :\n                        ' not found! Check `volumeSeriesID`.';\n                    error('Series ' +\n                        params.volumeSeriesID + errorMessage, true, chart);\n                    return;\n                }\n                // Checks if series data fits the OHLC format\n                const isOHLC = isArray(yValues[0]);\n                if (isOHLC && yValues[0].length !== 4) {\n                    error('Type of ' +\n                        series.name +\n                        ' series is different than line, OHLC or candlestick.', true, chart);\n                    return;\n                }\n                // Price zones contains all the information about the zones (index,\n                // start, end, volumes, etc.)\n                const priceZones = indicator.priceZones = indicator.specifyZones(isOHLC, xValues, yValues, ranges, volumeSeries);\n                priceZones.forEach(function (zone, index) {\n                    VBP.push([zone.x, zone.end]);\n                    xData.push(VBP[index][0]);\n                    yData.push(VBP[index][1]);\n                });\n                return {\n                    values: VBP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            // Specifying where each zone should start ans end\n            specifyZones(isOHLC, xValues, yValues, ranges, volumeSeries) {\n                const indicator = this, rangeExtremes = (isOHLC ? arrayExtremesOHLC(yValues) : false), zoneStarts = indicator.zoneStarts = [], priceZones = [];\n                let lowRange = rangeExtremes ?\n                    rangeExtremes.min :\n                    arrayMin(yValues), highRange = rangeExtremes ?\n                    rangeExtremes.max :\n                    arrayMax(yValues), i = 0, j = 1;\n                // If the compare mode is set on the main series, change the VBP\n                // zones to fit new extremes, #16277.\n                const mainSeries = indicator.linkedParent;\n                if (!indicator.options.compareToMain &&\n                    mainSeries.dataModify) {\n                    lowRange = mainSeries.dataModify.modifyValue(lowRange);\n                    highRange = mainSeries.dataModify.modifyValue(highRange);\n                }\n                if (!defined(lowRange) || !defined(highRange)) {\n                    if (this.points.length) {\n                        this.setData([]);\n                        this.zoneStarts = [];\n                        if (this.zoneLinesSVG) {\n                            this.zoneLinesSVG = this.zoneLinesSVG.destroy();\n                        }\n                    }\n                    return [];\n                }\n                const rangeStep = indicator.rangeStep =\n                    correctFloat(highRange - lowRange) / ranges;\n                zoneStarts.push(lowRange);\n                for (; i < ranges - 1; i++) {\n                    zoneStarts.push(correctFloat(zoneStarts[i] + rangeStep));\n                }\n                zoneStarts.push(highRange);\n                const zoneStartsLength = zoneStarts.length;\n                //    Creating zones\n                for (; j < zoneStartsLength; j++) {\n                    priceZones.push({\n                        index: j - 1,\n                        x: xValues[0],\n                        start: zoneStarts[j - 1],\n                        end: zoneStarts[j]\n                    });\n                }\n                return indicator.volumePerZone(isOHLC, priceZones, volumeSeries, xValues, yValues);\n            }\n            // Calculating sum of volume values for a specific zone\n            volumePerZone(isOHLC, priceZones, volumeSeries, xValues, yValues) {\n                const indicator = this, volumeXData = volumeSeries.processedXData, volumeYData = volumeSeries.processedYData, lastZoneIndex = priceZones.length - 1, baseSeriesLength = yValues.length, volumeSeriesLength = volumeYData.length;\n                let previousValue, startFlag, endFlag, value, i;\n                // Checks if each point has a corresponding volume value\n                if (abs(baseSeriesLength - volumeSeriesLength)) {\n                    // If the first point don't have volume, add 0 value at the\n                    // beginning of the volume array\n                    if (xValues[0] !== volumeXData[0]) {\n                        volumeYData.unshift(0);\n                    }\n                    // If the last point don't have volume, add 0 value at the end\n                    // of the volume array\n                    if (xValues[baseSeriesLength - 1] !==\n                        volumeXData[volumeSeriesLength - 1]) {\n                        volumeYData.push(0);\n                    }\n                }\n                indicator.volumeDataArray = [];\n                priceZones.forEach(function (zone) {\n                    zone.wholeVolumeData = 0;\n                    zone.positiveVolumeData = 0;\n                    zone.negativeVolumeData = 0;\n                    for (i = 0; i < baseSeriesLength; i++) {\n                        startFlag = false;\n                        endFlag = false;\n                        value = isOHLC ? yValues[i][3] : yValues[i];\n                        previousValue = i ?\n                            (isOHLC ?\n                                yValues[i - 1][3] :\n                                yValues[i - 1]) :\n                            value;\n                        // If the compare mode is set on the main series,\n                        // change the VBP zones to fit new extremes, #16277.\n                        const mainSeries = indicator.linkedParent;\n                        if (!indicator.options.compareToMain &&\n                            mainSeries.dataModify) {\n                            value = mainSeries.dataModify.modifyValue(value);\n                            previousValue = mainSeries.dataModify\n                                .modifyValue(previousValue);\n                        }\n                        // Checks if this is the point with the\n                        // lowest close value and if so, adds it calculations\n                        if (value <= zone.start && zone.index === 0) {\n                            startFlag = true;\n                        }\n                        // Checks if this is the point with the highest\n                        // close value and if so, adds it calculations\n                        if (value >= zone.end && zone.index === lastZoneIndex) {\n                            endFlag = true;\n                        }\n                        if ((value > zone.start || startFlag) &&\n                            (value < zone.end || endFlag)) {\n                            zone.wholeVolumeData += volumeYData[i];\n                            if (previousValue > value) {\n                                zone.negativeVolumeData += volumeYData[i];\n                            }\n                            else {\n                                zone.positiveVolumeData += volumeYData[i];\n                            }\n                        }\n                    }\n                    indicator.volumeDataArray.push(zone.wholeVolumeData);\n                });\n                return priceZones;\n            }\n            // Function responsible for drawing additional lines indicating zones\n            drawZones(chart, yAxis, zonesValues, zonesStyles) {\n                const indicator = this, renderer = chart.renderer, leftLinePos = 0, rightLinePos = chart.plotWidth, verticalOffset = chart.plotTop;\n                let zoneLinesSVG = indicator.zoneLinesSVG, zoneLinesPath = [], verticalLinePos;\n                zonesValues.forEach(function (value) {\n                    verticalLinePos = yAxis.toPixels(value) - verticalOffset;\n                    zoneLinesPath = zoneLinesPath.concat(chart.renderer.crispLine([[\n                            'M',\n                            leftLinePos,\n                            verticalLinePos\n                        ], [\n                            'L',\n                            rightLinePos,\n                            verticalLinePos\n                        ]], zonesStyles.lineWidth));\n                });\n                // Create zone lines one path or update it while animating\n                if (zoneLinesSVG) {\n                    zoneLinesSVG.animate({\n                        d: zoneLinesPath\n                    });\n                }\n                else {\n                    zoneLinesSVG = indicator.zoneLinesSVG =\n                        renderer\n                            .path(zoneLinesPath)\n                            .attr({\n                            'stroke-width': zonesStyles.lineWidth,\n                            'stroke': zonesStyles.color,\n                            'dashstyle': zonesStyles.dashStyle,\n                            'zIndex': indicator.group.zIndex + 0.1\n                        })\n                            .add(indicator.group);\n                }\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Volume By Price indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/volume-by-price\n         *         Volume By Price indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/volume-by-price\n         * @optionparent plotOptions.vbp\n         */\n        VBPIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The number of price zones.\n                 */\n                ranges: 12,\n                /**\n                 * The id of volume series which is mandatory. For example using\n                 * OHLC data, volumeSeriesID='volume' means the indicator will be\n                 * calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            /**\n             * The styles for lines which determine price zones.\n             */\n            zoneLines: {\n                /**\n                 * Enable/disable zone lines.\n                 */\n                enabled: true,\n                /**\n                 * Specify the style of zone lines.\n                 *\n                 * @type    {Highcharts.CSSObject}\n                 * @default {\"color\": \"#0A9AC9\", \"dashStyle\": \"LongDash\", \"lineWidth\": 1}\n                 */\n                styles: {\n                    /** @ignore-option */\n                    color: '#0A9AC9',\n                    /** @ignore-option */\n                    dashStyle: 'LongDash',\n                    /** @ignore-option */\n                    lineWidth: 1\n                }\n            },\n            /**\n             * The styles for bars when volume is divided into positive/negative.\n             */\n            volumeDivision: {\n                /**\n                 * Option to control if volume is divided.\n                 */\n                enabled: true,\n                styles: {\n                    /**\n                     * Color of positive volume bars.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    positiveColor: 'rgba(144, 237, 125, 0.8)',\n                    /**\n                     * Color of negative volume bars.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    negativeColor: 'rgba(244, 91, 91, 0.8)'\n                }\n            },\n            // To enable series animation; must be animationLimit > pointCount\n            animationLimit: 1000,\n            enableMouseTracking: false,\n            pointPadding: 0,\n            zIndex: -1,\n            crisp: true,\n            dataGrouping: {\n                enabled: false\n            },\n            dataLabels: {\n                allowOverlap: true,\n                enabled: true,\n                format: 'P: {point.volumePos:.2f} | N: {point.volumeNeg:.2f}',\n                padding: 0,\n                style: {\n                    /** @internal */\n                    fontSize: '0.5em'\n                },\n                verticalAlign: 'top'\n            }\n        });\n        extend(VBPIndicator.prototype, {\n            nameBase: 'Volume by Price',\n            nameComponents: ['ranges'],\n            calculateOn: {\n                chart: 'render',\n                xAxis: 'afterSetExtremes'\n            },\n            pointClass: VBPPoint,\n            markerAttribs: noop,\n            drawGraph: noop,\n            getColumnMetrics: columnProto.getColumnMetrics,\n            crispCol: columnProto.crispCol\n        });\n        SeriesRegistry.registerSeriesType('vbp', VBPIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Volume By Price (VBP)` series. If the [type](#series.vbp.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.vbp\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, compare, compareBase, compareStart\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/volume-by-price\n         * @apioption series.vbp\n         */\n        ''; // to include the above in the js output\n\n        return VBPIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VWAP/VWAPIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Paweł Dalek\n         *\n         *  Volume Weighted Average Price (VWAP) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { error, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Volume Weighted Average Price (VWAP) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.vwap\n         *\n         * @augments Highcharts.Series\n         */\n        class VWAPIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const indicator = this, chart = series.chart, xValues = series.xData, yValues = series.yData, period = params.period;\n                let isOHLC = true, volumeSeries;\n                // Checks if volume series exists\n                if (!(volumeSeries = (chart.get(params.volumeSeriesID)))) {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, chart);\n                    return;\n                }\n                // Checks if series data fits the OHLC format\n                if (!(isArray(yValues[0]))) {\n                    isOHLC = false;\n                }\n                return indicator.calculateVWAPValues(isOHLC, xValues, yValues, volumeSeries, period);\n            }\n            /**\n             * Main algorithm used to calculate Volume Weighted Average Price (VWAP)\n             * values\n             *\n             * @private\n             *\n             * @param {boolean} isOHLC\n             * Says if data has OHLC format\n             *\n             * @param {Array<number>} xValues\n             * Array of timestamps\n             *\n             * @param {Array<number|Array<number,number,number,number>>} yValues\n             * Array of yValues, can be an array of a four arrays (OHLC) or array of\n             * values (line)\n             *\n             * @param {Array<*>} volumeSeries\n             * Volume series\n             *\n             * @param {number} period\n             * Number of points to be calculated\n             *\n             * @return {Object}\n             * Object contains computed VWAP\n             **/\n            calculateVWAPValues(isOHLC, xValues, yValues, volumeSeries, period) {\n                const volumeValues = volumeSeries.yData, volumeLength = volumeSeries.xData.length, pointsLength = xValues.length, cumulativePrice = [], cumulativeVolume = [], xData = [], yData = [], VWAP = [];\n                let commonLength, typicalPrice, cPrice, cVolume, i, j;\n                if (pointsLength <= volumeLength) {\n                    commonLength = pointsLength;\n                }\n                else {\n                    commonLength = volumeLength;\n                }\n                for (i = 0, j = 0; i < commonLength; i++) {\n                    // Depending on whether series is OHLC or line type, price is\n                    // average of the high, low and close or a simple value\n                    typicalPrice = isOHLC ?\n                        ((yValues[i][1] + yValues[i][2] +\n                            yValues[i][3]) / 3) :\n                        yValues[i];\n                    typicalPrice *= volumeValues[i];\n                    cPrice = j ?\n                        (cumulativePrice[i - 1] + typicalPrice) :\n                        typicalPrice;\n                    cVolume = j ?\n                        (cumulativeVolume[i - 1] + volumeValues[i]) :\n                        volumeValues[i];\n                    cumulativePrice.push(cPrice);\n                    cumulativeVolume.push(cVolume);\n                    VWAP.push([xValues[i], (cPrice / cVolume)]);\n                    xData.push(VWAP[i][0]);\n                    yData.push(VWAP[i][1]);\n                    j++;\n                    if (j === period) {\n                        j = 0;\n                    }\n                }\n                return {\n                    values: VWAP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Volume Weighted Average Price indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/vwap\n         *         Volume Weighted Average Price indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/vwap\n         * @optionparent plotOptions.vwap\n         */\n        VWAPIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 30,\n                /**\n                 * The id of volume series which is mandatory. For example using\n                 * OHLC data, volumeSeriesID='volume' means the indicator will be\n                 * calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        SeriesRegistry.registerSeriesType('vwap', VWAPIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Volume Weighted Average Price (VWAP)` series. If the\n         * [type](#series.vwap.type) option is not specified, it is inherited from\n         * [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.vwap\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/vwap\n         * @apioption series.vwap\n         */\n        ''; // to include the above in the js output\n\n        return VWAPIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/WilliamsR/WilliamsRIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Williams %R series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.williamsr\n         *\n         * @augments Highcharts.Series\n         */\n        class WilliamsRIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, WR = [], // 0- date, 1- Williams %R\n                xData = [], yData = [], close = 3, low = 2, high = 1;\n                let slicedY, extremes, R, HH, // Highest high value in period\n                LL, // Lowest low value in period\n                CC, // Current close value\n                i;\n                // Williams %R requires close value\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = period - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - period + 1, i + 1);\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    LL = extremes[0];\n                    HH = extremes[1];\n                    CC = yVal[i][close];\n                    R = ((HH - CC) / (HH - LL)) * -100;\n                    if (xVal[i]) {\n                        WR.push([xVal[i], R]);\n                        xData.push(xVal[i]);\n                        yData.push(R);\n                    }\n                }\n                return {\n                    values: WR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Williams %R. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/williams-r\n         *         Williams %R\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/williams-r\n         * @optionparent plotOptions.williamsr\n         */\n        WilliamsRIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of Williams %R series points.\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * Period for Williams %R oscillator\n                 */\n                period: 14\n            }\n        });\n        extend(WilliamsRIndicator.prototype, {\n            nameBase: 'Williams %R'\n        });\n        SeriesRegistry.registerSeriesType('williamsr', WilliamsRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Williams %R Oscillator` series. If the [type](#series.williamsr.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.williamsr\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/williams-r\n         * @apioption series.williamsr\n         */\n        ''; // adds doclets above to the transpiled file\n\n        return WilliamsRIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/WMA/WMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulateAverage(points, xVal, yVal, i, index) {\n            const xValue = xVal[i], yValue = index < 0 ? yVal[i] : yVal[i][index];\n            points.push([xValue, yValue]);\n        }\n        /**\n         * @private\n         */\n        function weightedSumArray(array, pLen) {\n            // The denominator is the sum of the number of days as a triangular number.\n            // If there are 5 days, the triangular numbers are 5, 4, 3, 2, and 1.\n            // The sum is 5 + 4 + 3 + 2 + 1 = 15.\n            const denominator = (pLen + 1) / 2 * pLen;\n            // reduce VS loop => reduce\n            return array.reduce(function (prev, cur, i) {\n                return [null, prev[1] + cur[1] * (i + 1)];\n            })[1] / denominator;\n        }\n        /**\n         * @private\n         */\n        function populateAverage(points, xVal, yVal, i) {\n            const pLen = points.length, wmaY = weightedSumArray(points, pLen), wmaX = xVal[i - 1];\n            points.shift(); // remove point until range < period\n            return [wmaX, wmaY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.wma\n         *\n         * @augments Highcharts.Series\n         */\n        class WMAIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, xValue = xVal[0], wma = [], xData = [], yData = [];\n                let range = 1, index = -1, i, wmaPoint, yValue = yVal[0];\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick\n                if (isArray(yVal[0])) {\n                    index = params.index;\n                    yValue = yVal[0][index];\n                }\n                // Starting point\n                const points = [[xValue, yValue]];\n                // Accumulate first N-points\n                while (range !== period) {\n                    accumulateAverage(points, xVal, yVal, range, index);\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    wmaPoint = populateAverage(points, xVal, yVal, i);\n                    wma.push(wmaPoint);\n                    xData.push(wmaPoint[0]);\n                    yData.push(wmaPoint[1]);\n                    accumulateAverage(points, xVal, yVal, i, index);\n                }\n                wmaPoint = populateAverage(points, xVal, yVal, i);\n                wma.push(wmaPoint);\n                xData.push(wmaPoint[0]);\n                yData.push(wmaPoint[1]);\n                return {\n                    values: wma,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Weighted moving average indicator (WMA). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/wma\n         *         Weighted moving average indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/wma\n         * @optionparent plotOptions.wma\n         */\n        WMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3,\n                period: 9\n            }\n        });\n        SeriesRegistry.registerSeriesType('wma', WMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `WMA` series. If the [type](#series.wma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.wma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/wma\n         * @apioption series.wma\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return WMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Zigzag/ZigzagIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Zig Zag series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.zigzag\n         *\n         * @augments Highcharts.Series\n         */\n        class ZigzagIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const lowIndex = params.lowIndex, highIndex = params.highIndex, deviation = params.deviation / 100, deviations = {\n                    'low': 1 + deviation,\n                    'high': 1 - deviation\n                }, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, zigzag = [], xData = [], yData = [];\n                let i, j, zigzagPoint, directionUp, exitLoop = false, yIndex = false;\n                // Exit if not enough points or no low or high values\n                if (!xVal || xVal.length <= 1 ||\n                    (yValLen &&\n                        (typeof yVal[0][lowIndex] === 'undefined' ||\n                            typeof yVal[0][highIndex] === 'undefined'))) {\n                    return;\n                }\n                // Set first zigzag point candidate\n                const firstZigzagLow = yVal[0][lowIndex], firstZigzagHigh = yVal[0][highIndex];\n                // Search for a second zigzag point candidate,\n                // this will also set first zigzag point\n                for (i = 1; i < yValLen; i++) {\n                    // required change to go down\n                    if (yVal[i][lowIndex] <= firstZigzagHigh * deviations.high) {\n                        zigzag.push([xVal[0], firstZigzagHigh]);\n                        // second zigzag point candidate\n                        zigzagPoint = [xVal[i], yVal[i][lowIndex]];\n                        // next line will be going up\n                        directionUp = true;\n                        exitLoop = true;\n                        // required change to go up\n                    }\n                    else if (yVal[i][highIndex] >= firstZigzagLow * deviations.low) {\n                        zigzag.push([xVal[0], firstZigzagLow]);\n                        // second zigzag point candidate\n                        zigzagPoint = [xVal[i], yVal[i][highIndex]];\n                        // next line will be going down\n                        directionUp = false;\n                        exitLoop = true;\n                    }\n                    if (exitLoop) {\n                        xData.push(zigzag[0][0]);\n                        yData.push(zigzag[0][1]);\n                        j = i++;\n                        i = yValLen;\n                    }\n                }\n                // Search for next zigzags\n                for (i = j; i < yValLen; i++) {\n                    if (directionUp) { // next line up\n                        // lower when going down -> change zigzag candidate\n                        if (yVal[i][lowIndex] <= zigzagPoint[1]) {\n                            zigzagPoint = [xVal[i], yVal[i][lowIndex]];\n                        }\n                        // required change to go down -> new zigzagpoint and\n                        // direction change\n                        if (yVal[i][highIndex] >=\n                            zigzagPoint[1] * deviations.low) {\n                            yIndex = highIndex;\n                        }\n                    }\n                    else { // next line down\n                        // higher when going up -> change zigzag candidate\n                        if (yVal[i][highIndex] >= zigzagPoint[1]) {\n                            zigzagPoint = [xVal[i], yVal[i][highIndex]];\n                        }\n                        // required change to go down -> new zigzagpoint and\n                        // direction change\n                        if (yVal[i][lowIndex] <=\n                            zigzagPoint[1] * deviations.high) {\n                            yIndex = lowIndex;\n                        }\n                    }\n                    if (yIndex !== false) { // new zigzag point and direction change\n                        zigzag.push(zigzagPoint);\n                        xData.push(zigzagPoint[0]);\n                        yData.push(zigzagPoint[1]);\n                        zigzagPoint = [xVal[i], yVal[i][yIndex]];\n                        directionUp = !directionUp;\n                        yIndex = false;\n                    }\n                }\n                const zigzagLen = zigzag.length;\n                // no zigzag for last point\n                if (zigzagLen !== 0 &&\n                    zigzag[zigzagLen - 1][0] < xVal[yValLen - 1]) {\n                    // set last point from zigzag candidate\n                    zigzag.push(zigzagPoint);\n                    xData.push(zigzagPoint[0]);\n                    yData.push(zigzagPoint[1]);\n                }\n                return {\n                    values: zigzag,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Zig Zag indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/zigzag\n         *         Zig Zag indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/zigzag\n         * @optionparent plotOptions.zigzag\n         */\n        ZigzagIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The point index which indicator calculations will base - low\n                 * value.\n                 *\n                 * For example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                lowIndex: 2,\n                /**\n                 * The point index which indicator calculations will base - high\n                 * value.\n                 *\n                 * For example using OHLC data, index=1 means the indicator will be\n                 * calculated using High values.\n                 */\n                highIndex: 1,\n                /**\n                 * The threshold for the value change.\n                 *\n                 * For example deviation=1 means the indicator will ignore all price\n                 * movements less than 1%.\n                 */\n                deviation: 1\n            }\n        });\n        extend(ZigzagIndicator.prototype, {\n            nameComponents: ['deviation'],\n            nameSuffixes: ['%'],\n            nameBase: 'Zig Zag'\n        });\n        SeriesRegistry.registerSeriesType('zigzag', ZigzagIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Zig Zag` series. If the [type](#series.zigzag.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.zigzag\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/zigzag\n         * @apioption series.zigzag\n         */\n        ''; // adds doclets above to transpiled file\n\n        return ZigzagIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegression/LinearRegressionIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Linear regression series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearregression\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Return the slope and intercept of a straight line function.\n             *\n             * @private\n             *\n             * @param {Array<number>} xData\n             * List of all x coordinates in a period.\n             *\n             * @param {Array<number>} yData\n             * List of all y coordinates in a period.\n             *\n             * @return {Highcharts.RegressionLineParametersObject}\n             * Object that contains the slope and the intercept of a straight line\n             * function.\n             */\n            getRegressionLineParameters(xData, yData) {\n                // least squares method\n                const yIndex = this.options.params.index, getSingleYValue = function (yValue, yIndex) {\n                    return isArray(yValue) ? yValue[yIndex] : yValue;\n                }, xSum = xData.reduce(function (accX, val) {\n                    return val + accX;\n                }, 0), ySum = yData.reduce(function (accY, val) {\n                    return getSingleYValue(val, yIndex) + accY;\n                }, 0), xMean = xSum / xData.length, yMean = ySum / yData.length;\n                let xError, yError, i, formulaNumerator = 0, formulaDenominator = 0;\n                for (i = 0; i < xData.length; i++) {\n                    xError = xData[i] - xMean;\n                    yError = getSingleYValue(yData[i], yIndex) - yMean;\n                    formulaNumerator += xError * yError;\n                    formulaDenominator += Math.pow(xError, 2);\n                }\n                const slope = formulaDenominator ?\n                    formulaNumerator / formulaDenominator : 0; // don't divide by 0\n                return {\n                    slope: slope,\n                    intercept: yMean - slope * xMean\n                };\n            }\n            /**\n             * Return the y value on a straight line.\n             *\n             * @private\n             *\n             * @param {Highcharts.RegressionLineParametersObject} lineParameters\n             * Object that contains the slope and the intercept of a straight line\n             * function.\n             *\n             * @param {number} endPointX\n             * X coordinate of the point.\n             *\n             * @return {number}\n             * Y value of the point that lies on the line.\n             */\n            getEndPointY(lineParameters, endPointX) {\n                return lineParameters.slope * endPointX + lineParameters.intercept;\n            }\n            /**\n             * Transform the coordinate system so that x values start at 0 and\n             * apply xAxisUnit.\n             *\n             * @private\n             *\n             * @param {Array<number>} xData\n             * List of all x coordinates in a period\n             *\n             * @param {number} xAxisUnit\n             * Option (see the API)\n             *\n             * @return {Array<number>}\n             * Array of transformed x data\n             */\n            transformXData(xData, xAxisUnit) {\n                const xOffset = xData[0];\n                return xData.map(function (xValue) {\n                    return (xValue - xOffset) / xAxisUnit;\n                });\n            }\n            /**\n             * Find the closest distance between points in the base series.\n             * @private\n             * @param {Array<number>} xData list of all x coordinates in the base series\n             * @return {number} - closest distance between points in the base series\n             */\n            findClosestDistance(xData) {\n                let distance, closestDistance, i;\n                for (i = 1; i < xData.length - 1; i++) {\n                    distance = xData[i] - xData[i - 1];\n                    if (distance > 0 &&\n                        (typeof closestDistance === 'undefined' ||\n                            distance < closestDistance)) {\n                        closestDistance = distance;\n                    }\n                }\n                return closestDistance;\n            }\n            // Required to be implemented - starting point for indicator's logic\n            getValues(baseSeries, regressionSeriesParams) {\n                const xData = baseSeries.xData, yData = baseSeries.yData, period = regressionSeriesParams.period, \n                // format required to be returned\n                indicatorData = {\n                    xData: [],\n                    yData: [],\n                    values: []\n                }, xAxisUnit = this.options.params.xAxisUnit ||\n                    this.findClosestDistance(xData);\n                let lineParameters, i, periodStart, periodEnd, endPointX, endPointY, periodXData, periodYData, periodTransformedXData;\n                // Iteration logic: x value of the last point within the period\n                // (end point) is used to represent the y value (regression)\n                // of the entire period.\n                for (i = period - 1; i <= xData.length - 1; i++) {\n                    periodStart = i - period + 1; // adjusted for slice() function\n                    periodEnd = i + 1; // (as above)\n                    endPointX = xData[i];\n                    periodXData = xData.slice(periodStart, periodEnd);\n                    periodYData = yData.slice(periodStart, periodEnd);\n                    periodTransformedXData = this.transformXData(periodXData, xAxisUnit);\n                    lineParameters = this.getRegressionLineParameters(periodTransformedXData, periodYData);\n                    endPointY = this.getEndPointY(lineParameters, periodTransformedXData[periodTransformedXData.length - 1]);\n                    // @todo this is probably not used anywhere\n                    indicatorData.values.push({\n                        regressionLineParameters: lineParameters,\n                        x: endPointX,\n                        y: endPointY\n                    });\n                    indicatorData.xData.push(endPointX);\n                    indicatorData.yData.push(endPointY);\n                }\n                return indicatorData;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Linear regression indicator. This series requires `linkedTo` option to be\n         * set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression\n         *         Linear regression indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/regressions\n         * @optionparent plotOptions.linearregression\n         */\n        LinearRegressionIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * Unit (in milliseconds) for the x axis distances used to\n                 * compute the regression line parameters (slope & intercept)\n                 * for every range. In Highcharts Stock the x axis values are\n                 * always represented in milliseconds which may cause that\n                 * distances between points are \"big\" integer numbers.\n                 *\n                 * Highcharts Stock's linear regression algorithm (least squares\n                 * method) will utilize these \"big\" integers for finding the\n                 * slope and the intercept of the regression line for each\n                 * period. In consequence, this value may be a very \"small\"\n                 * decimal number that's hard to interpret by a human.\n                 *\n                 * For instance: `xAxisUnit` equaled to `86400000` ms (1 day)\n                 * forces the algorithm to treat `86400000` as `1` while\n                 * computing the slope and the intercept. This may enhance the\n                 * legibility of the indicator's values.\n                 *\n                 * Default value is the closest distance between two data\n                 * points.\n                 *\n                 * In `v9.0.2`, the default value has been changed\n                 * from `undefined` to `null`.\n                 *\n                 * @sample {highstock} stock/plotoptions/linear-regression-xaxisunit\n                 *         xAxisUnit set to 1 minute\n                 *\n                 * @example\n                 * // In Liniear Regression Slope Indicator series `xAxisUnit`is\n                 * // `86400000` (1 day) and period is `3`. There're 3 points in\n                 * // the base series:\n                 *\n                 * data: [\n                 *   [Date.UTC(2020, 0, 1), 1],\n                 *   [Date.UTC(2020, 0, 2), 3],\n                 *   [Date.UTC(2020, 0, 3), 5]\n                 * ]\n                 *\n                 * // This will produce one point in the indicator series that\n                 * // has a `y` value of `2` (slope of the regression line). If\n                 * // we change the `xAxisUnit` to `1` (ms) the value of the\n                 * // indicator's point will be `2.3148148148148148e-8` which is\n                 * // harder to interpert for a human.\n                 *\n                 * @type    {null|number}\n                 * @product highstock\n                 */\n                xAxisUnit: null\n            },\n            tooltip: {\n                valueDecimals: 4\n            }\n        });\n        extend(LinearRegressionIndicator.prototype, {\n            nameBase: 'Linear Regression Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegression', LinearRegressionIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A linear regression series. If the\n         * [type](#series.linearregression.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregression\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregression\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegressionSlopes/LinearRegressionSlopesIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { linearRegression: LinearRegressionIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Linear Regression Slope series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearRegressionSlope\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionSlopesIndicator extends LinearRegressionIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEndPointY(lineParameters) {\n                return lineParameters.slope;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Linear regression slope indicator. This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression-slope\n         *         Linear regression slope indicator\n         *\n         * @extends      plotOptions.linearregression\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @optionparent plotOptions.linearregressionslope\n         */\n        LinearRegressionSlopesIndicator.defaultOptions = merge(LinearRegressionIndicator.defaultOptions);\n        extend(LinearRegressionSlopesIndicator.prototype, {\n            nameBase: 'Linear Regression Slope Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegressionSlope', LinearRegressionSlopesIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A linear regression intercept series. If the\n         * [type](#series.linearregressionslope.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregressionslope\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregressionslope\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionSlopesIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegressionIntercept/LinearRegressionInterceptIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { linearRegression: LinearRegressionIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Linear Regression Intercept series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearRegressionIntercept\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionInterceptIndicator extends LinearRegressionIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEndPointY(lineParameters) {\n                return lineParameters.intercept;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Linear regression intercept indicator. This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression-intercept\n         *         Linear intercept slope indicator\n         *\n         * @extends      plotOptions.linearregression\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @optionparent plotOptions.linearregressionintercept\n         */\n        LinearRegressionInterceptIndicator.defaultOptions = merge(LinearRegressionIndicator.defaultOptions);\n        extend(LinearRegressionInterceptIndicator.prototype, {\n            nameBase: 'Linear Regression Intercept Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegressionIntercept', LinearRegressionInterceptIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A linear regression intercept series. If the\n         * [type](#series.linearregressionintercept.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregressionintercept\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregressionintercept\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionInterceptIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegressionAngle/LinearRegressionAngleIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { linearRegression: LinearRegressionIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Linear Regression Angle series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearRegressionAngle\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionAngleIndicator extends LinearRegressionIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Convert a slope of a line to angle (in degrees) between\n             * the line and x axis\n             * @private\n             * @param {number} slope of the straight line function\n             * @return {number} angle in degrees\n             */\n            slopeToAngle(slope) {\n                return Math.atan(slope) * (180 / Math.PI); // rad to deg\n            }\n            getEndPointY(lineParameters) {\n                return this.slopeToAngle(lineParameters.slope);\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Linear regression angle indicator. This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression-angle\n         *         Linear intercept angle indicator\n         *\n         * @extends      plotOptions.linearregression\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @optionparent plotOptions.linearregressionangle\n         */\n        LinearRegressionAngleIndicator.defaultOptions = merge(LinearRegressionIndicator.defaultOptions, {\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span>' +\n                    '{series.name}: <b>{point.y}°</b><br/>'\n            }\n        });\n        extend(LinearRegressionAngleIndicator.prototype, {\n            nameBase: 'Linear Regression Angle Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegressionAngle', LinearRegressionAngleIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /**\n         * A linear regression intercept series. If the\n         * [type](#series.linearregressionangle.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregressionangle\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregressionangle\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionAngleIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ABands/ABandsIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function getBaseForBand(low, high, factor) {\n            return (((correctFloat(high - low)) /\n                ((correctFloat(high + low)) / 2)) * 1000) * factor;\n        }\n        /**\n         * @private\n         */\n        function getPointUB(high, base) {\n            return high * (correctFloat(1 + 2 * base));\n        }\n        /**\n         * @private\n         */\n        function getPointLB(low, base) {\n            return low * (correctFloat(1 - 2 * base));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ABands series type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.abands\n         *\n         * @augments Highcharts.Series\n         */\n        class ABandsIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, factor = params.factor, index = params.index, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // Upperbands\n                UB = [], \n                // Lowerbands\n                LB = [], \n                // ABANDS array structure:\n                // 0-date, 1-top line, 2-middle line, 3-bottom line\n                ABANDS = [], low = 2, high = 1, xData = [], yData = [];\n                // middle line, top line and bottom line\n                let ML, TL, BL, date, bandBase, pointSMA, ubSMA, lbSMA, slicedX, slicedY, i;\n                if (yValLen < period) {\n                    return;\n                }\n                for (i = 0; i <= yValLen; i++) {\n                    // Get UB and LB values of every point. This condition\n                    // is necessary, because there is a need to calculate current\n                    // UB nad LB values simultaneously with given period SMA\n                    // in one for loop.\n                    if (i < yValLen) {\n                        bandBase = getBaseForBand(yVal[i][low], yVal[i][high], factor);\n                        UB.push(getPointUB(yVal[i][high], bandBase));\n                        LB.push(getPointLB(yVal[i][low], bandBase));\n                    }\n                    if (i >= period) {\n                        slicedX = xVal.slice(i - period, i);\n                        slicedY = yVal.slice(i - period, i);\n                        ubSMA = super.getValues.call(this, {\n                            xData: slicedX,\n                            yData: UB.slice(i - period, i)\n                        }, {\n                            period: period\n                        });\n                        lbSMA = super.getValues.call(this, {\n                            xData: slicedX,\n                            yData: LB.slice(i - period, i)\n                        }, {\n                            period: period\n                        });\n                        pointSMA = super.getValues.call(this, {\n                            xData: slicedX,\n                            yData: slicedY\n                        }, {\n                            period: period,\n                            index: index\n                        });\n                        date = pointSMA.xData[0];\n                        TL = ubSMA.yData[0];\n                        BL = lbSMA.yData[0];\n                        ML = pointSMA.yData[0];\n                        ABANDS.push([date, TL, ML, BL]);\n                        xData.push(date);\n                        yData.push([TL, ML, BL]);\n                    }\n                }\n                return {\n                    values: ABANDS,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Acceleration bands (ABANDS). This series requires the `linkedTo` option\n         * to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/acceleration-bands\n         *         Acceleration Bands\n         *\n         * @extends      plotOptions.sma\n         * @mixes        Highcharts.MultipleLinesMixin\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking,\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/acceleration-bands\n         * @optionparent plotOptions.abands\n         */\n        ABandsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Accelleration bands Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type {Highcharts.Color}\n             * @since 9.3.2\n             * @apioption plotOptions.abands.fillColor\n             *\n             */\n            params: {\n                period: 20,\n                /**\n                 * The algorithms factor value used to calculate bands.\n                 *\n                 * @product highstock\n                 */\n                factor: 0.001,\n                index: 3\n            },\n            lineWidth: 1,\n            topLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            bottomLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(ABandsIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            nameBase: 'Acceleration Bands',\n            nameComponents: ['period', 'factor'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(ABandsIndicator);\n        SeriesRegistry.registerSeriesType('abands', ABandsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An Acceleration bands indicator. If the [type](#series.abands.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.abands\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *            stacking, showInNavigator,\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/acceleration-bands\n         * @apioption series.abands\n         */\n        ''; // to include the above in jsdoc\n\n        return ABandsIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/TrendLine/TrendLineIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, isArray } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Trend line series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.trendline\n         *\n         * @augments Highcharts.Series\n         */\n        class TrendLineIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.updateAllPoints = true;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const orgXVal = series.xData, yVal = series.yData, xVal = [], LR = [], xData = [], yData = [], index = params.index;\n                let numerator = 0, denominator = 0, xValSum = 0, yValSum = 0, counter = 0;\n                // Create an array of consecutive xValues, (don't remove duplicates)\n                for (let i = 0; i < orgXVal.length; i++) {\n                    if (i === 0 || orgXVal[i] !== orgXVal[i - 1]) {\n                        counter++;\n                    }\n                    xVal.push(counter);\n                }\n                for (let i = 0; i < xVal.length; i++) {\n                    xValSum += xVal[i];\n                    yValSum += isArray(yVal[i]) ? yVal[i][index] : yVal[i];\n                }\n                const meanX = xValSum / xVal.length, meanY = yValSum / yVal.length;\n                for (let i = 0; i < xVal.length; i++) {\n                    const y = isArray(yVal[i]) ? yVal[i][index] : yVal[i];\n                    numerator += (xVal[i] - meanX) * (y - meanY);\n                    denominator += Math.pow(xVal[i] - meanX, 2);\n                }\n                // Calculate linear regression:\n                for (let i = 0; i < xVal.length; i++) {\n                    // Check if the xVal is already used\n                    if (orgXVal[i] === xData[xData.length - 1]) {\n                        continue;\n                    }\n                    const x = orgXVal[i], y = meanY + (numerator / denominator) * (xVal[i] - meanX);\n                    LR.push([x, y]);\n                    xData.push(x);\n                    yData.push(y);\n                }\n                return {\n                    xData: xData,\n                    yData: yData,\n                    values: LR\n                };\n            }\n        }\n        /**\n         * Trendline (linear regression) fits a straight line to the selected data\n         * using a method called the Sum Of Least Squares. This series requires the\n         * `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/trendline\n         *         Trendline indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.1.3\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/trendline\n         * @optionparent plotOptions.trendline\n         */\n        TrendLineIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 *\n                 * @default 3\n                 */\n                index: 3\n            }\n        });\n        extend(TrendLineIndicator.prototype, {\n            nameBase: 'Trendline',\n            nameComponents: void 0\n        });\n        SeriesRegistry.registerSeriesType('trendline', TrendLineIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TrendLine` series. If the [type](#series.trendline.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.trendline\n         * @since     7.1.3\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/trendline\n         * @apioption series.trendline\n         */\n        ''; // to include the above in the js output\n\n        return TrendLineIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DisparityIndex/DisparityIndexIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *  (c) 2010-2024 Rafal Sebestjanski\n         *\n         *  Disparity Index technical indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, defined, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Disparity Index series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.disparityindex\n         *\n         * @augments Highcharts.Series\n         */\n        class DisparityIndexIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                const args = arguments, ctx = this, // Disparity Index indicator\n                params = args[1].params, // options.params\n                averageType = params && params.average ? params.average : void 0;\n                ctx.averageIndicator = SeriesRegistry\n                    .seriesTypes[averageType] || SMAIndicator;\n                ctx.averageIndicator.prototype.init.apply(ctx, args);\n            }\n            calculateDisparityIndex(curPrice, periodAverage) {\n                return correctFloat(curPrice - periodAverage) / periodAverage * 100;\n            }\n            getValues(series, params) {\n                const index = params.index, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, disparityIndexPoint = [], xData = [], yData = [], \n                // \"as any\" because getValues doesn't exist on typeof Series\n                averageIndicator = this.averageIndicator, isOHLC = isArray(yVal[0]), \n                // Get the average indicator's values\n                values = averageIndicator.prototype.getValues(series, params), yValues = values.yData, start = xVal.indexOf(values.xData[0]);\n                // Check period, if bigger than points length, skip\n                if (!yValues || yValues.length === 0 ||\n                    !defined(index) ||\n                    yVal.length <= start) {\n                    return;\n                }\n                // Get the Disparity Index indicator's values\n                for (let i = start; i < yValLen; i++) {\n                    const disparityIndexValue = this.calculateDisparityIndex(isOHLC ? yVal[i][index] : yVal[i], yValues[i - start]);\n                    disparityIndexPoint.push([\n                        xVal[i],\n                        disparityIndexValue\n                    ]);\n                    xData.push(xVal[i]);\n                    yData.push(disparityIndexValue);\n                }\n                return {\n                    values: disparityIndexPoint,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Disparity Index.\n         * This series requires the `linkedTo` option to be set and should\n         * be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/disparity-index\n         *         Disparity Index indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/disparity-index\n         * @optionparent plotOptions.disparityindex\n         */\n        DisparityIndexIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The average used to calculate the Disparity Index indicator.\n                 * By default it uses SMA, with EMA as an option. To use other\n                 * averages, e.g. TEMA, the `stock/indicators/tema.js` file needs to\n                 * be loaded.\n                 *\n                 * If value is different than `ema`, `dema`, `tema` or `wma`,\n                 * then sma is used.\n                 */\n                average: 'sma',\n                index: 3\n            },\n            marker: {\n                enabled: false\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(DisparityIndexIndicator.prototype, {\n            nameBase: 'Disparity Index',\n            nameComponents: ['period', 'average']\n        });\n        SeriesRegistry.registerSeriesType('disparityindex', DisparityIndexIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The Disparity Index indicator series.\n         * If the [type](#series.disparityindex.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.disparityindex\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/disparity-index\n         * @apioption series.disparityindex\n         */\n        ''; // to include the above in the js output\n\n        return DisparityIndexIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/indicators-all.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Chart","SeriesRegistry","U","line","LineSeries","seriesTypes","addEvent","fireEvent","error","extend","isArray","merge","pick","splat","SMAIndicator","destroy","dataEventsToUnbind","forEach","unbinder","arguments","getName","params","name","nameComponents","component","index","push","options","nameSuffixes","nameBase","type","toUpperCase","join","getValues","series","period","xVal","xData","yVal","yData","yValLen","length","SMA","i","range","SMAPoint","sum","values","init","chart","indicator","call","linkedSeriesUnbiner","isUpdating","hasEvents","linkedParent","linkedTo","recalculateValues","calculateOn","xAxis","processedYData","order","eventsToUnbind","croppedDataValues","oldData","points","oldDataLength","overwriteData","oldFirstPointIndex","oldLastPointIndex","croppedData","min","max","processedData","hasGroupedData","visible","cropped","cropData","concat","indexOf","x","shift","updateData","updateAllPoints","data","processedXData","isDirty","redraw","isDirtyData","linkedSeries","processData","compareToMain","dataModify","compareValue","defaultOptions","tooltip","valueDecimals","prototype","hasDerivedData","useCommonDataGrouping","registerSeriesType","sma","correctFloat","EMAIndicator","accumulatePeriodPoints","calculateEma","EMApercent","calEMA","yValue","EMA","EMAPoint","ADIndicator","populateAverage","yValVolume","_period","high","low","close","volume","len","ADPoint","volumeSeriesID","volumeSeries","get","AD","H","noop","column","columnProto","AOIndicator","drawGraph","userColor","userOptions","color","positiveColor","greaterBarColor","negativeColor","lowerBarColor","firstPoint","y","AO","awesome","shortLastIndex","longLastIndex","price","j","longSum","shortSum","longPeriod","shortSMA","threshold","groupPadding","pointPadding","crisp","states","hover","halo","size","markerAttribs","getColumnMetrics","crispCol","translate","drawPoints","MultipleLinesComposition","smaProto","defined","linesApiNames","pointArrayMap","areaLinesNames","getLineName","propertyName","charAt","slice","getTranslatedLinesNames","excludedValue","translatedLines","indicatorDrawGraph","pointValKey","mainLinePoints","mainLineOptions","mainLinePath","graph","gappedExtend","gapSize","secondaryLines","secondaryLinesNames","pointsLength","point","plotLine","plotX","plotY","isNull","fillColor","secondLinePoints","firstLinePoints","originalColor","nextPoints","area","fillGraph","lineName","styles","indicatorGetGraphPath","areaPath","higherAreaPath","getGraphPath","indicatorToYData","pointColl","indicatorTranslate","LinesNames","value","modifyValue","yAxis","toPixels","compose","IndicatorClass","proto","toYData","getExtremeIndexInArray","arr","extreme","extremeValue","valueIndex","AroonIndicator","aroonUp","aroonDown","xLow","slicedY","AR","map","elem","marker","enabled","pointFormat","lineWidth","lineColor","dataGrouping","approximation","aroon","AroonOscillatorIndicator","oscillator","ARO","getTR","currentPoint","prevPoint","Math","pointY","abs","prevY","ATRIndicator","ATR","prevATR","TR","accumulateAverage","xValue","BBIndicator","topLine","bottomLine","ML","TL","BL","date","slicedX","stdDev","standardDeviation","BB","isOHLC","getStandardDeviation","mean","arrLen","variance","sqrt","CCIIndicator","TP","CCI","CCIPoint","p","periodTP","smaTP","TPtemp","meanDev","sumArray","array","reduce","prev","cur","meanDeviation","CMFIndicator","constructor","isValid","isSeriesOHLC","isLengthValid","serie","getMoneyFlow","seriesYData","volumeSeriesYData","moneyFlowVolume","moneyFlowXData","moneyFlowYData","nullIndex","sumVolume","sumMoneyFlowVolume","getMoneyFlowVolume","ohlc","h","c","l","DMIIndicator","calculateDM","isPositiveDM","currentHigh","currentLow","previousHigh","previousLow","calculateDI","smoothedDM","tr","calculateDX","plusDI","minusDI","smoothValues","accumulatedValues","currentValue","DMI","prevSmoothedPlusDM","prevSmoothedMinusDM","prevSmoothedTR","smoothedPlusDM","smoothedMinusDM","smoothedTR","plusDM","minusDM","DX","plusDILine","minusDILine","parallelArrays","accumulatePoints","subtract","DPOIndicator","floor","DPO","periodIndex","rangeIndex","ema","ChaikinIndicator","periods","CHA","ADL","SPE","LPE","periodsOffset","isNumber","CMOIndicator","CMO","firstAddedSum","sumOfHigherValues","sumOfLowerValues","DEMAIndicator","getEMA","prevEMA","EMAvalues","doubledPeriod","DEMA","xDataDema","yDataDema","EMAlevel2","prevEMAlevel2","DEMAPoint","TEMAIndicator","getTemaPoint","tripledPeriod","EMAlevels","level1","level2","level3","tema","xDataTema","yDataTema","emaValues","emaLevel2Values","emaLevels","temaPoint","prevLevel3","TRIXIndicator","APOIndicator","APO","ApproximationRegistry","Color","parse","getClosestDistance","objectEach","highlowLevel","res","Infinity","drawSenkouSpan","opt","senkouSpan","gap","IKHIndicator","graphCollection","tenkanLine","kijunLine","chikouLine","senkouSpanA","fill","setOpacity","senkouSpanB","tenkanSen","kijunSen","chikouSpan","key","pointValue","tooltipPos","mainColor","pointArrayMapLength","allIchimokuPoints","ikhMap","intersectIndexColl","senkouSpanOptions","lineIndex","position","startIntersect","endIntersect","sectionPoints","sectionNextPoints","pointsPlotYSum","nextPointsPlotYSum","senkouSpanTempColor","concatArrIndex","k","intersect","checkLineIntersection","a1","a2","b1","b2","saX","saY","sbX","sbY","sabX","sabY","u","t","intersectPointObj","intersectPoint","splice","graphName","unshift","areaName","graphsenkouSpan","spanA","spanAarr","pointTS","pointKS","pointSSB","TS","KS","CS","SSA","SSB","periodTenkan","periodSenkouSpanB","closestPointRange","s","IKH","dateStart","isEmptyRange","ret","average","KeltnerChannelsIndicator","pointEMA","pointATR","periodATR","multiplierATR","KC","seriesEMA","seriesATR","atr","KlingerIndicator","calculateTrend","isUpward","isValidData","firstYVal","every","slowAvgPeriod","getCM","previousCM","DM","trend","previousTrend","prevoiusDM","getDM","getVolumeForce","volumeForce","CM","previousDM","getSMA","Klinger","calcSingal","KO","fastEMA","slowEMA","previousFastEMA","previousSlowEMA","signal","SMAFast","fastAvgPeriod","SMASlow","fastEMApercent","slowEMApercent","signalPeriod","curr","signalLine","ColumnSeries","MACDIndicator","colorIndex","getCyclic","colors","macdLine","macdZones","zones","startIndex","signalZones","MACD","plotNames","graphmacd","graphsignal","histogramZones","otherSignals","plotMACD","plotSignal","applyZones","hide","indexToShift","shortPeriod","xMACD","yMACD","shortEMA","longEMA","minPointLength","calculateTypicalPrice","MFIIndicator","decimals","MFI","positiveMoneyFlow","negativeMoneyFlow","newTypicalPrice","oldTypicalPrice","rawMoneyFlow","negativeMoneyFlowSum","MFIPoint","isUp","typicalPrice","parseFloat","a","positiveMoneyFlowSum","toFixed","mmY","MomentumIndicator","MMPoint","MM","NATRIndicator","atrData","atrLength","valueSuffix","OBVIndicator","OBV","hasOHLC","OBVPoint","previousOBV","curentOBV","previousClose","curentClose","pointClass","destroyExtraLabels","functionName","props","prop","element","destroyElements","PivotPointsPoint","PivotPointsIndicator","P","plotEndPoint","endPoint","allPivotPoints","pivotPoints","drawDataLabels","currentLabel","pointMapping","dataLabels","pivotLine","dataLabel","endTimestamp","slicedXLen","lastPP","avg","placement","algorithm","PP","getPivotAndHLC","standardPlacement","diff","camarillaPlacement","fibonacciPlacement","enableMouseTracking","format","PPOIndicator","PPO","getArrayExtremes","minIndex","maxIndex","target","Number","MAX_VALUE","AU","Palettes","PCIndicator","extremes","PC","PriceEnvelopesIndicator","topPercent","topBand","botPercent","bottomBand","PE","n","PSARIndicator","maxAccelerationFactor","increment","initialAccelerationFactor","PSARArr","accelerationFactor","direction","extremePoint","EPMinusPSAR","accelerationFactorMultiply","newDirection","previousDirection","prevLow","prevPrevLow","prevHigh","prevPrevHigh","PSAR","newExtremePoint","ind","EP","previousExtremePoint","pdir","sDir","pACCMulti","pEP","dir","pDir","pAcc","eP","lineWidthPlus","ROCIndicator","ROC","ROCPoint","nDaysAgoY","rocY","RSIIndicator","RSI","gain","loss","RSIPoint","change","avgGain","avgLoss","StochasticIndicator","smoothedLine","periodK","periodD","SO","LL","K","D","constantValues","isNaN","CL","stochastic","SlowStochasticIndicator","fastValues","slowValues","fastYData","smoothedValues","xDataLen","createPointObj","mainSeries","SupertrendIndicator","parentOptions","cropThreshold","indicOptions","indicPoints","indicPath","tempOffset","offset","groupedPoints","top","bottom","supertrendLineOptions","fallingTrendColor","dashStyle","risingTrendColor","changeTrendLine","nextPoint","mainPoint","nextMainPoint","prevMainPoint","prevPrevMainPoint","pointColor","newPoint","newNextPoint","indicPointsLen","multiplier","st","finalUp","finalDown","basicUp","basicDown","supertrend","prevFinalUp","prevFinalDown","prevST","negativeGraphic","VBPPoint","A","animObject","arrayMax","arrayMin","VBPIndicator","baseSeries","addCustomEvents","toEmptyIndicator","setData","zoneStarts","zoneLinesSVG","animate","inverted","group","attr","left","translateY","translateX","animation","step","val","fx","scaleX","pos","volumeDivision","posNegVolume","initVol","signOrder","pointLength","posWidths","negWidths","pointWidth","priceZone","wholeVol","graphic","shapeArgs","width","priceZones","wholeVolumeData","positiveVolumeData","negativeVolumeData","yAxisMin","zoneLinesOptions","zoneLines","yBarOffset","maxVolume","primalBarWidth","barHeight","barHeightP","oldBarHeight","barWidth","chartPlotTop","barX","barY","indicatorPoints","volumeDataArray","plotWidth","plotTop","rangeStep","start","reversed","volumeNeg","volumePos","volumeAll","drawZones","getExtremes","prevCompare","compare","prevCumulative","cumulative","xValues","yValues","ranges","VBP","errorMessage","specifyZones","zone","end","rangeExtremes","arrayExtremesOHLC","dataLength","lowRange","highRange","zoneStartsLength","volumePerZone","previousValue","startFlag","endFlag","volumeXData","volumeYData","lastZoneIndex","baseSeriesLength","volumeSeriesLength","zonesValues","zonesStyles","renderer","rightLinePos","verticalOffset","zoneLinesPath","verticalLinePos","crispLine","d","zIndex","add","animationLimit","allowOverlap","padding","style","fontSize","verticalAlign","VWAPIndicator","calculateVWAPValues","commonLength","cPrice","cVolume","volumeValues","volumeLength","cumulativePrice","cumulativeVolume","VWAP","WilliamsRIndicator","R","HH","WR","pLen","wmaY","wmaX","WMAIndicator","wma","wmaPoint","ZigzagIndicator","lowIndex","highIndex","deviation","deviations","zigzag","zigzagPoint","directionUp","exitLoop","yIndex","firstZigzagLow","firstZigzagHigh","zigzagLen","LinearRegressionIndicator","getRegressionLineParameters","getSingleYValue","xSum","accX","ySum","accY","xMean","yMean","xError","formulaNumerator","formulaDenominator","pow","slope","intercept","getEndPointY","lineParameters","endPointX","transformXData","xAxisUnit","xOffset","findClosestDistance","distance","closestDistance","regressionSeriesParams","periodStart","periodEnd","endPointY","periodXData","periodYData","periodTransformedXData","indicatorData","regressionLineParameters","linearRegression","LinearRegressionSlopesIndicator","LinearRegressionInterceptIndicator","LinearRegressionAngleIndicator","slopeToAngle","PI","atan","ABandsIndicator","bandBase","pointSMA","ubSMA","lbSMA","factor","UB","LB","ABANDS","TrendLineIndicator","orgXVal","LR","numerator","denominator","xValSum","yValSum","counter","meanX","meanY","DisparityIndexIndicator","averageType","ctx","averageIndicator","calculateDisparityIndex","curPrice","periodAverage","disparityIndexPoint","disparityIndexValue"],"mappings":"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"}